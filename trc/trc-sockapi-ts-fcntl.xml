<?xml version="1.0" encoding="UTF-8"?>
<!-- SPDX-License-Identifier: Apache-2.0 -->
<!-- (c) Copyright 2004 - 2022 Xilinx, Inc. All rights reserved. -->
<test name="fcntl" type="package">
  <objective>FCNTL Requests</objective>
  <notes/>
  <iter result="PASSED">
    <notes/>
    <test name="fcntl_flags_dup" type="script">
      <objective>Check that fcntl() can duplicate socket descriptor and changing of O_NONBLOCK mode on duplicated socket descriptor influence on behavior on original one.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT,'pco_iut2':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'tst_addr':inet:unicast}}</arg>
        <arg name="use_dupfd_cloexec">TRUE</arg>
        <arg name="use_getown_ex"/>
        <notes/>
        <results tags="linux-2.6&lt;24">
          <result value="FAILED">
            <verdict>fcntl(F_DUPFD_CLOEXEC) call failed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT,'pco_iut2':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'tst_addr':inet:unicast}}</arg>
        <arg name="use_dupfd_cloexec">FALSE</arg>
        <arg name="use_getown_ex"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">tester{{{'pco_iut1':IUT,'pco_iut2':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'tst_addr':inet:unicast}}</arg>
        <arg name="use_dupfd_cloexec">TRUE</arg>
        <arg name="use_getown_ex"/>
        <notes/>
        <results tags="linux-2.6&lt;24">
          <result value="FAILED">
            <verdict>fcntl(F_DUPFD_CLOEXEC) call failed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">tester{{{'pco_iut1':IUT,'pco_iut2':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'tst_addr':inet:unicast}}</arg>
        <arg name="use_dupfd_cloexec">FALSE</arg>
        <arg name="use_getown_ex"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">tester{{{'pco_iut1':IUT,'pco_iut2':IUT},addr:'iut_addr':inet:wildcard},{{'pco_tst':tester},addr:'tst_addr':inet:unicast}}</arg>
        <arg name="use_dupfd_cloexec">TRUE</arg>
        <arg name="use_getown_ex"/>
        <notes/>
        <results tags="linux-2.6&lt;24">
          <result value="FAILED">
            <verdict>fcntl(F_DUPFD_CLOEXEC) call failed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">tester{{{'pco_iut1':IUT,'pco_iut2':IUT},addr:'iut_addr':inet:wildcard},{{'pco_tst':tester},addr:'tst_addr':inet:unicast}}</arg>
        <arg name="use_dupfd_cloexec">FALSE</arg>
        <arg name="use_getown_ex"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT,'pco_iut2':IUT},{'pco_tst':IUT},addr:'iut_addr':inet:unicast}},'tst_addr'='iut_addr'</arg>
        <arg name="use_dupfd_cloexec">TRUE</arg>
        <arg name="use_getown_ex"/>
        <notes/>
        <results tags="linux-2.6&lt;24">
          <result value="FAILED">
            <verdict>fcntl(F_DUPFD_CLOEXEC) call failed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT,'pco_iut2':IUT},{'pco_tst':IUT},addr:'iut_addr':inet:unicast}},'tst_addr'='iut_addr'</arg>
        <arg name="use_dupfd_cloexec">FALSE</arg>
        <arg name="use_getown_ex"/>
        <notes/>
      </iter>
    </test>
    <test name="fcntl_async" type="script">
      <objective>Check possibilty provided by fcntl() for signal controlled input/output.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="before">TRUE</arg>
        <arg name="use_getown_ex"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="before">FALSE</arg>
        <arg name="use_getown_ex"/>
        <notes/>
      </iter>
    </test>
    <test name="setgetown" type="script">
      <objective>Check that socket owner's PID can be correctly set using fcntl() function and that it is reset to 0 after socket was recreated.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="object"/>
        <arg name="use_getown_ex"/>
        <notes/>
      </iter>
    </test>
    <test name="async_data" type="script">
      <objective>Check that O_ASYNC request enables signal-driven I/O.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="active">-</arg>
        <arg name="env"/>
        <arg name="read_avail">TRUE</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first">FALSE</arg>
        <arg name="use_fioasync_second">FALSE</arg>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5" key="ON-3845">
          <result value="PASSED">
            <verdict>fcntl(F_SETSIG) failed with errno EOPNOTSUPP</verdict>
            <verdict>si_code field of siginfo_t structure is equal to SI_KERNEL instead of POLL_IN</verdict>
            <verdict>si_fd field of siginfo_t structure is zero unexpectedly</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">-</arg>
        <arg name="env"/>
        <arg name="read_avail">TRUE</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first">FALSE</arg>
        <arg name="use_fioasync_second">FALSE</arg>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5" key="ON-3845">
          <result value="PASSED">
            <verdict>fcntl(F_SETSIG) failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">-</arg>
        <arg name="env"/>
        <arg name="read_avail">TRUE</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first">FALSE</arg>
        <arg name="use_fioasync_second">TRUE</arg>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5" key="ON-3845">
          <result value="FAILED">
            <verdict>fcntl(F_SETSIG) failed with errno EOPNOTSUPP</verdict>
            <verdict>si_code field of siginfo_t structure is equal to SI_KERNEL instead of POLL_IN</verdict>
            <verdict>si_fd field of siginfo_t structure is zero unexpectedly</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">-</arg>
        <arg name="env"/>
        <arg name="read_avail">TRUE</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first">FALSE</arg>
        <arg name="use_fioasync_second">TRUE</arg>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5" key="ON-3845">
          <result value="FAILED">
            <verdict>fcntl(F_SETSIG) failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">-</arg>
        <arg name="env"/>
        <arg name="read_avail">TRUE</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first">FALSE</arg>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5" key="ON-3845">
          <result value="FAILED">
            <verdict>fcntl(F_SETSIG) failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">-</arg>
        <arg name="env"/>
        <arg name="read_avail">FALSE</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first">FALSE</arg>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5" key="ON-3845">
          <result value="FAILED">
            <verdict>fcntl(F_SETSIG) failed with errno EOPNOTSUPP</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_fd'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">-</arg>
        <arg name="env"/>
        <arg name="read_avail">FALSE</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first">FALSE</arg>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5" key="ON-3845">
          <result value="FAILED">
            <verdict>fcntl(F_SETSIG) failed with errno EOPNOTSUPP</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_fd'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">-</arg>
        <arg name="env"/>
        <arg name="read_avail">FALSE</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first">FALSE</arg>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5" key="ON-3845">
          <result value="FAILED">
            <verdict>fcntl(F_SETSIG) failed with errno EOPNOTSUPP</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_fd'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">-</arg>
        <arg name="env"/>
        <arg name="read_avail">FALSE</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first">FALSE</arg>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5" key="ON-3845">
          <result value="FAILED">
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_fd'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">-</arg>
        <arg name="env"/>
        <arg name="read_avail">TRUE</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first">FALSE</arg>
        <arg name="use_fioasync_second">TRUE</arg>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5" key="ON-3845">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">-</arg>
        <arg name="env"/>
        <arg name="read_avail"/>
        <arg name="sig_to_set"/>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first">TRUE</arg>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5" key="ON-3845">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="read_avail">FALSE</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first"/>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;!ool_spin&amp;!(ool_loop=0)" key="ON-3845">
          <result value="PASSED">
            <verdict>si_code field of siginfo_t structure is equal to POLL_IN instead of POLL_OUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_spin&amp;!(ool_loop=0)" key="ON-3845">
          <result value="FAILED">
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_fd'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="read_avail">FALSE</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first"/>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;!ool_spin&amp;!(ool_loop=0)" key="ON-3845">
          <result value="PASSED">
            <verdict>si_code field of siginfo_t structure is equal to POLL_IN instead of POLL_OUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_spin&amp;!(ool_loop=0)" key="ON-3845">
          <result value="FAILED">
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_fd'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="read_avail">FALSE</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first"/>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin&amp;!(ool_loop=0)">
          <result value="FAILED">
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_fd'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="read_avail">FALSE</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first"/>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin&amp;!(ool_loop=0)">
          <result value="FAILED">
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_fd'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="read_avail">FALSE</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first"/>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;!ool_spin" key="ON-3845">
          <result value="PASSED">
            <verdict>si_code field of siginfo_t structure is equal to POLL_IN instead of POLL_OUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_spin" key="ON-3845">
          <result value="FAILED">
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_fd'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="read_avail">FALSE</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first"/>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;!ool_spin" key="ON-3845">
          <result value="PASSED">
            <verdict>si_code field of siginfo_t structure is equal to POLL_IN instead of POLL_OUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_spin" key="ON-3845">
          <result value="FAILED">
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_fd'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="read_avail">FALSE</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first"/>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-3845">
          <result value="FAILED">
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_fd'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="read_avail">FALSE</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first"/>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-3845">
          <result value="FAILED">
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_fd'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">-</arg>
        <arg name="env"/>
        <arg name="read_avail">TRUE</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first">FALSE</arg>
        <arg name="use_fioasync_second">FALSE</arg>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="read_avail">TRUE</arg>
        <arg name="sig_to_set"/>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first"/>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="read_avail">TRUE</arg>
        <arg name="sig_to_set"/>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first"/>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="read_avail"/>
        <arg name="sig_to_set"/>
        <arg name="sock_type"/>
        <arg name="use_fioasync_first"/>
        <arg name="use_fioasync_second"/>
        <arg name="use_pipe"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
    </test>
    <test name="async_postponed" type="script">
      <objective>Check that signal sending enabled by O_ASYNC request sends the signal with correct siginfo in case when the signal is postponed.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() was not interrupted but a signal catched</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042 ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1|ool_epoll=2)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() was not interrupted but a signal catched</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() was not interrupted but a signal catched</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=2)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=2)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=2)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=2)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1|ool_epoll=2)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1|ool_epoll=2)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_epoll=3)&amp;!(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-6049">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;(!ool_spin|small_spin)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_epoll=3)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=2)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=2)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=2)&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1|ool_epoll=2)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1|ool_epoll=2)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1|ool_epoll=2)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGUSR2 signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">TRUE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3)&amp;ool_spin" key="ON-6049">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() timed out when an event and a signal arrived simultaneously</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3)&amp;!ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1)&amp;ool_spin" key="ON-6042">
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet">FALSE</arg>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1)" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: epoll_pwait() interrupted</verdict>
            <verdict>The second call: epoll_pwait() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: ppoll() interrupted</verdict>
            <verdict>The second call: ppoll() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set">SIGUSR2</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set"/>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="sig_to_set"/>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set"/>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env"/>
        <arg name="gen_signal_before_iomux">TRUE</arg>
        <arg name="iomux"/>
        <arg name="sig_to_set"/>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">TRUE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync">FALSE</arg>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">-1</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">0</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="gen_signal_before_iomux">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="sig_to_set">SIGIO</arg>
        <arg name="sock_type"/>
        <arg name="use_epollet"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <notes/>
        <results tags="v5&amp;ool_spin" key="ON-6042">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>The first call: pselect() interrupted</verdict>
            <verdict>The second call: pselect() returned event(s)</verdict>
            <verdict>SIGIO signal is not delivered to the pco_iut, although O_ASYNC is enabled and there is an owner of 'iut_s'</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="fcntl_async_listen" type="script">
      <objective>Check possibilty provided by fcntl() for signal controlled input/output on listening TCP sockets.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <arg name="use_getown_ex"/>
        <notes/>
      </iter>
    </test>
    <test name="fcntl_async_udp" type="script">
      <objective>Check possibilty provided by fcntl() for signal controlled input/output on UDP sockets.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="use_fioasync"/>
        <arg name="use_siocspgrp"/>
        <arg name="use_getown_ex"/>
        <arg name="use_connect"/>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
    </test>
    <test name="fcntl_async_connect_tcp" type="script">
      <objective>Check possibilty provided by fcntl() for signal controlled input/output on TCP socket with connect() function.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="connect_before">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="send_data"/>
        <arg name="use_fioasync"/>
        <arg name="use_getown_ex"/>
        <arg name="use_siocspgrp"/>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=3|ool_loop=4)" key="ON-6541">
          <result value="FAILED">
            <verdict>SIGIO signal was not received</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connect_before">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="send_data"/>
        <arg name="use_fioasync"/>
        <arg name="use_getown_ex"/>
        <arg name="use_siocspgrp"/>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connect_before">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="send_data"/>
        <arg name="use_fioasync"/>
        <arg name="use_getown_ex"/>
        <arg name="use_siocspgrp"/>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connect_before">TRUE</arg>
        <arg name="env"/>
        <arg name="send_data"/>
        <arg name="use_fioasync"/>
        <arg name="use_getown_ex"/>
        <arg name="use_siocspgrp"/>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
    </test>
    <test name="fcntl_getfl" type="script">
      <objective>Check that fcntl(F_GETFL) returns correct flags for socket</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="bind_iut">FALSE</arg>
        <arg name="connect_iut">FALSE</arg>
        <arg name="env"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_iut">FALSE</arg>
        <arg name="connect_iut">FALSE</arg>
        <arg name="env"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_iut">FALSE</arg>
        <arg name="connect_iut">TRUE</arg>
        <arg name="env"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_iut">FALSE</arg>
        <arg name="connect_iut">TRUE</arg>
        <arg name="env"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_iut">TRUE</arg>
        <arg name="connect_iut">FALSE</arg>
        <arg name="env"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_iut">TRUE</arg>
        <arg name="connect_iut">FALSE</arg>
        <arg name="env"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_iut">TRUE</arg>
        <arg name="connect_iut">TRUE</arg>
        <arg name="env"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_iut">TRUE</arg>
        <arg name="connect_iut">TRUE</arg>
        <arg name="env"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
    </test>
    <test name="fcntl_getfl_pipe" type="script">
      <objective>Check that fcntl(F_GETFL) returns correct flags for pipe</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.iut_only</arg>
        <notes/>
      </iter>
    </test>
    <test name="fcntl_on_accepted" type="script">
      <objective>Check FD_CLOEXEC and O_NONBLOCK flags are not inherited by accepted socket</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="flag"/>
        <arg name="close_before_check"/>
        <notes/>
      </iter>
    </test>
    <test name="fcntl_flags_dup_pipe" type="script">
      <objective>Check that fcntl() can duplicate pipe and changing of O_NONBLOCK mode on duplicated pipe influence on behavior on original one</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="use_dupfd_cloexec"/>
        <arg name="use_getown_ex"/>
        <arg name="check_wr"/>
        <arg name="data_size"/>
        <notes/>
      </iter>
    </test>
    <test name="fcntl_after_shutdown" type="script">
      <objective>Check that fcntl() called on the socket after shutdown() handled correctly</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="fcntl_pipe_sz" type="script">
      <objective>Check that F_SETPIPE_SZ and F_GETPIPE_SZ requests correctly change and report pipe capacity</objective>
      <notes>The test fails on ool1606 branch and older, SF bug 54427</notes>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2">reduce</arg>
        <arg name="new_ef_pipe_size">1000000</arg>
        <arg name="overfill_after">TRUE</arg>
        <arg name="overfill_before">TRUE</arg>
        <arg name="read_after">TRUE</arg>
        <arg name="read_before">FALSE</arg>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
            <verdict>Amount of data in the pipe is a little bit smaller then pipe size</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">increase</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">8192</arg>
        <arg name="overfill_after">TRUE</arg>
        <arg name="overfill_before"/>
        <arg name="read_after">FALSE</arg>
        <arg name="read_before">TRUE</arg>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
            <verdict>Amount of data in the pipe is a little bit smaller then pipe size</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2">reduce</arg>
        <arg name="new_ef_pipe_size">1000000</arg>
        <arg name="overfill_after">FALSE</arg>
        <arg name="overfill_before"/>
        <arg name="read_after">TRUE</arg>
        <arg name="read_before"/>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
            <verdict>Amount of data in the pipe is a little bit smaller then pipe size</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">1000000</arg>
        <arg name="overfill_after"/>
        <arg name="overfill_before">FALSE</arg>
        <arg name="read_after">TRUE</arg>
        <arg name="read_before"/>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
            <verdict>Amount of data in the pipe is a little bit smaller then pipe size</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">increase</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">8192</arg>
        <arg name="overfill_after">FALSE</arg>
        <arg name="overfill_before"/>
        <arg name="read_after"/>
        <arg name="read_before">TRUE</arg>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
            <verdict>Amount of data in the pipe is a little bit smaller then pipe size</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">1000000</arg>
        <arg name="overfill_after"/>
        <arg name="overfill_before"/>
        <arg name="read_after"/>
        <arg name="read_before">TRUE</arg>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
            <verdict>Amount of data in the pipe is a little bit smaller then pipe size</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">increase</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">8192</arg>
        <arg name="overfill_after"/>
        <arg name="overfill_before"/>
        <arg name="read_after">TRUE</arg>
        <arg name="read_before"/>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
            <verdict>Amount of data in the pipe is a little bit smaller then pipe size</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2">reduce</arg>
        <arg name="new_ef_pipe_size">1000000</arg>
        <arg name="overfill_after"/>
        <arg name="overfill_before">TRUE</arg>
        <arg name="read_after">FALSE</arg>
        <arg name="read_before">FALSE</arg>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">increase</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">8192</arg>
        <arg name="overfill_after"/>
        <arg name="overfill_before">TRUE</arg>
        <arg name="read_after">FALSE</arg>
        <arg name="read_before">FALSE</arg>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">increase</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">8192</arg>
        <arg name="overfill_after">TRUE</arg>
        <arg name="overfill_before">FALSE</arg>
        <arg name="read_after">FALSE</arg>
        <arg name="read_before"/>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">1000000</arg>
        <arg name="overfill_after">TRUE</arg>
        <arg name="overfill_before">FALSE</arg>
        <arg name="read_after">FALSE</arg>
        <arg name="read_before"/>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">increase</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">8192</arg>
        <arg name="overfill_after">FALSE</arg>
        <arg name="overfill_before">FALSE</arg>
        <arg name="read_after"/>
        <arg name="read_before"/>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">1000000</arg>
        <arg name="overfill_after">FALSE</arg>
        <arg name="overfill_before">FALSE</arg>
        <arg name="read_after"/>
        <arg name="read_before"/>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">8192</arg>
        <arg name="overfill_after">FALSE</arg>
        <arg name="overfill_before">TRUE</arg>
        <arg name="read_after">FALSE</arg>
        <arg name="read_before">FALSE</arg>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="FAILED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
            <verdict>fcntl(F_SETPIPE_SZ) returned -1: errno is set to EINVAL instead of EBUSY</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">8192</arg>
        <arg name="overfill_after">TRUE</arg>
        <arg name="overfill_before">TRUE</arg>
        <arg name="read_after"/>
        <arg name="read_before">FALSE</arg>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="FAILED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
            <verdict>fcntl(F_SETPIPE_SZ) returned -1: errno is set to EINVAL instead of EBUSY</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">8192</arg>
        <arg name="overfill_after">FALSE</arg>
        <arg name="overfill_before"/>
        <arg name="read_after">TRUE</arg>
        <arg name="read_before"/>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="FAILED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
            <verdict>fcntl(F_SETPIPE_SZ) returned -1: errno is set to EINVAL instead of EBUSY</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2">increase</arg>
        <arg name="new_ef_pipe_size">1000000</arg>
        <arg name="overfill_after">FALSE</arg>
        <arg name="overfill_before">TRUE</arg>
        <arg name="read_after">FALSE</arg>
        <arg name="read_before">FALSE</arg>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="FAILED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2">increase</arg>
        <arg name="new_ef_pipe_size">1000000</arg>
        <arg name="overfill_after">TRUE</arg>
        <arg name="overfill_before">TRUE</arg>
        <arg name="read_after"/>
        <arg name="read_before">FALSE</arg>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="FAILED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2">increase</arg>
        <arg name="new_ef_pipe_size">1000000</arg>
        <arg name="overfill_after">FALSE</arg>
        <arg name="overfill_before"/>
        <arg name="read_after">TRUE</arg>
        <arg name="read_before"/>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="FAILED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">8192</arg>
        <arg name="overfill_after"/>
        <arg name="overfill_before"/>
        <arg name="read_after"/>
        <arg name="read_before">TRUE</arg>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="FAILED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">reduce</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">8192</arg>
        <arg name="overfill_after"/>
        <arg name="overfill_before">FALSE</arg>
        <arg name="read_after"/>
        <arg name="read_before"/>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="FAILED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1">increase</arg>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">1000000</arg>
        <arg name="overfill_after"/>
        <arg name="overfill_before"/>
        <arg name="read_after"/>
        <arg name="read_before"/>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="FAILED">
            <verdict>Pipe size is a little bit bigger then EF_PIPE_SIZE value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1"/>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">0</arg>
        <arg name="overfill_after">TRUE</arg>
        <arg name="overfill_before"/>
        <arg name="read_after">FALSE</arg>
        <arg name="read_before">TRUE</arg>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Amount of data in the pipe is a little bit smaller then pipe size</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1"/>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">0</arg>
        <arg name="overfill_after">FALSE</arg>
        <arg name="overfill_before"/>
        <arg name="read_after"/>
        <arg name="read_before">TRUE</arg>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Amount of data in the pipe is a little bit smaller then pipe size</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1"/>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">0</arg>
        <arg name="overfill_after"/>
        <arg name="overfill_before"/>
        <arg name="read_after">TRUE</arg>
        <arg name="read_before"/>
        <notes/>
        <results tags="v5" key="ON-5240">
          <result value="PASSED">
            <verdict>Amount of data in the pipe is a little bit smaller then pipe size</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1"/>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">0</arg>
        <arg name="overfill_after"/>
        <arg name="overfill_before">TRUE</arg>
        <arg name="read_after">FALSE</arg>
        <arg name="read_before">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1"/>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">0</arg>
        <arg name="overfill_after">TRUE</arg>
        <arg name="overfill_before">FALSE</arg>
        <arg name="read_after">FALSE</arg>
        <arg name="read_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="check_read_end1"/>
        <arg name="check_read_end2"/>
        <arg name="env"/>
        <arg name="fcntl_size1"/>
        <arg name="fcntl_size2"/>
        <arg name="new_ef_pipe_size">0</arg>
        <arg name="overfill_after">FALSE</arg>
        <arg name="overfill_before">FALSE</arg>
        <arg name="read_after"/>
        <arg name="read_before"/>
        <notes/>
      </iter>
    </test>
    <test name="fcntl_pipe_sz_many" type="script">
      <objective>Check that F_SETPIPE_SZ and F_GETPIPE_SZ requests correctly change and report pipe capacity for application with many pipes</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="diff_stacks"/>
        <arg name="env"/>
        <arg name="new_ef_pipe_size">1000000</arg>
        <arg name="pipe_num"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="diff_stacks"/>
        <arg name="env"/>
        <arg name="new_ef_pipe_size">0</arg>
        <arg name="pipe_num"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="diff_stacks"/>
        <arg name="env"/>
        <arg name="new_ef_pipe_size">8192</arg>
        <arg name="pipe_num"/>
        <notes/>
      </iter>
    </test>
  </iter>
</test>
