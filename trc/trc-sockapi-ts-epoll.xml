<?xml version="1.0" encoding="UTF-8"?>
<!-- SPDX-License-Identifier: Apache-2.0 -->
<!-- (c) Copyright 2004 - 2022 Xilinx, Inc. All rights reserved. -->
<test name="epoll" type="package">
  <objective>epoll functionality</objective>
  <notes/>
  <iter result="PASSED">
    <notes/>
    <test name="derived_epoll" type="script">
      <objective>Check that epfd is inherited during execve() / fork() / dup() calls.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="call_wait_before"/>
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="gen_ev_after"/>
        <arg name="gen_ev_before"/>
        <arg name="gen_ev_between"/>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="early_ctl"/>
        <notes/>
      </iter>
    </test>

    <test name="epfd_in_itself" type="script">
      <objective>Check that epoll_ctl() function called with epfd as epoll file descriptor argument and with epfd as target file descriptor argument fails with appropriate error.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="how">dup_master</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=2" key="ON-8891">
          <result value="FAILED">
            <verdict>epoll_ctl() returns -1: errno is set to EBADF instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="how">dup_target</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=2" key="ON-8891">
          <result value="FAILED">
            <verdict>epoll_ctl() returns -1: errno is set to EBADF instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="how">itself</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="epoll_close_on_exec" type="script">
      <objective>Check that epoll file descriptor with FD_CLOEXEC fcntl flag will be in the closed state after exec() call.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="create_func"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="ioctl_on_epfd" type="script">
      <objective>Check that ioctl() called with epfd correctly reports the appropriate error.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">FIONREAD</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="el&gt;=6&amp;!(linux-3)">
          <result value="FAILED">
            <verdict>ioctl(FIONREAD) called on epoll descriptor returned 0 instead -1.</verdict>
          </result>
        </results>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(FIONREAD) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCATMARK</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCATMARK) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCGIFNETMASK</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCGIFNETMASK) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCSIFNETMASK</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCSIFNETMASK) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCGIFADDR</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCGIFADDR) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCSIFADDR</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCSIFADDR) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCGIFBRDADDR</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCGIFBRDADDR) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCSIFBRDADDR</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCSIFBRDADDR) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCGIFFLAGS</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCGIFFLAGS) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCSIFFLAGS</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCSIFFLAGS) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCGIFMTU</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCGIFMTU) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCSIFMTU</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCSIFMTU) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCGIFDSTADDR</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCGIFDSTADDR) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCSIFDSTADDR</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCSIFDSTADDR) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req">SIOCGIFHWADDR</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux&lt;6|linux-6&lt;12)">
          <result value="FAILED">
            <verdict>ioctl(SIOCGIFHWADDR) returns -1: errno is set to ENOTTY instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error">0</arg>
        <arg name="evts"/>
        <arg name="exp_ret"/>
        <arg name="req"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="multi_level_iomux" type="script">
      <objective>Check that iomux functions correctly handle the situation when they are called with epoll descriptor.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin&amp;!(ool_loop=0)" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin&amp;!(ool_loop=0)" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin&amp;!(ool_loop=0)" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin&amp;!(ool_loop=0)" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin&amp;!(ool_loop=0)" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin&amp;!(ool_loop=0)" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin&amp;!(ool_loop=0)" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin&amp;!(ool_loop=0)" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin&amp;!(ool_loop=0)" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin&amp;!(ool_loop=0)" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll3)&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1" key="ON-4998">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;ool_spin&amp;laddr_all&amp;ool_epoll=1" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-4998">
          <result value="FAILED">
            <verdict>epoll_wait() returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et">TRUE</arg>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before">FALSE</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux"/>
        <arg name="send_data"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">select</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">pselect</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">poll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">ppoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="get_ev_before"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_et"/>
        <arg name="use_one_shot"/>
        <notes/>
      </iter>
    </test>
    <test name="create_close_wait" type="script">
      <objective>Check that epoll_wait() ignores closed socket in epfd.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_spin|ool_epoll=3|ool_epoll=1)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=2|ool_epoll=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=2|ool_epoll=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=2|ool_epoll=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=2|ool_epoll=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=2|ool_epoll=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=2|ool_epoll=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=2|ool_epoll=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=2|ool_epoll=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=2|ool_epoll=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">tester{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;laddr_all&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">tester{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;laddr_all&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">tester{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;laddr_all&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">tester{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;laddr_all&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;scooby" key="ON-8602">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;scooby" key="ON-8602">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;scooby" key="ON-8602">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;scooby" key="ON-8602">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;scooby" key="ON-8602">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;scooby" key="ON-8602">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;((ool_epoll=1&amp;ool_spin)|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll waiting function returned incorrect socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_DGRAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">tester{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">tester{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">dup</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="sock_type1">SOCK_STREAM</arg>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">tester{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">tester{{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet:unicast,addr:'tst_addr2':inet:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet:unicast,addr:'iut_addr2':inet:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">tester{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">fork</arg>
        <arg name="early_ctl"/>
        <arg name="env">tester{{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr1':inet6:unicast,addr:'tst_addr2':inet6:unicast}}</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="duplication">none</arg>
        <arg name="early_ctl"/>
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':tester},addr:'iut_addr1':inet6:unicast,addr:'iut_addr2':inet6:unicast}},'tst_addr1'='iut_addr1','tst_addr2'='iut_addr2'</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
    </test>
    <test name="edge_triggered_refresh" type="script">
      <objective>Check that epoll_ctl() refreshes events for the socket in edge-triggered mode.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;(ool_loop=3|ool_loop=4)&amp;ool_epoll_ctl_fast" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;(ool_loop=1|ool_loop=2)" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_loop=3|ool_loop=4)&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)" key="ON-5898, ON-1153">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!ool_spin&amp;!epoll_mt_safe" key="ON-5898, ON-1153">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;(ool_loop=3|ool_loop=4)&amp;ool_epoll_ctl_fast" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;(ool_loop=1|ool_loop=2)" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_loop=3|ool_loop=4)&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)" key="ON-5898, ON-1153">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!ool_spin&amp;!epoll_mt_safe" key="ON-5898, ON-1153">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;(ool_loop=3|ool_loop=4)&amp;ool_epoll_ctl_fast" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;(ool_loop=1|ool_loop=2)" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_loop=3|ool_loop=4)&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)" key="ON-5898, ON-1153">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!ool_spin&amp;!epoll_mt_safe" key="ON-5898, ON-1153">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;(ool_loop=3|ool_loop=4)&amp;ool_epoll_ctl_fast" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;(ool_loop=1|ool_loop=2)" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_loop=3|ool_loop=4)&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)" key="ON-5898, ON-1153">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!ool_spin&amp;!epoll_mt_safe" key="ON-5898, ON-1153">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;(ool_loop=3|ool_loop=4)&amp;ool_epoll_ctl_fast" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;(ool_loop=1|ool_loop=2)" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_loop=3|ool_loop=4)&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)" key="ON-5898, ON-1153">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!ool_spin&amp;!epoll_mt_safe" key="ON-5898, ON-1153">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;(ool_loop=3|ool_loop=4)&amp;ool_epoll_ctl_fast" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;(ool_loop=1|ool_loop=2)" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_loop=3|ool_loop=4)&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)" key="ON-5898, ON-1153">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!ool_spin&amp;!epoll_mt_safe" key="ON-5898, ON-1153">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!epoll_mt_safe&amp;!udp_connect_no_handover" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!epoll_mt_safe&amp;!udp_connect_no_handover" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!epoll_mt_safe&amp;!udp_connect_no_handover" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;udp_connect_no_handover" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!epoll_mt_safe&amp;!udp_connect_no_handover" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;!ool_spin&amp;ool_epoll=1" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!epoll_mt_safe&amp;!udp_connect_no_handover" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;!ool_spin&amp;ool_epoll=1" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!epoll_mt_safe&amp;!udp_connect_no_handover" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover&amp;!ool_spin&amp;ool_epoll=1" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">connected</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!epoll_mt_safe" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">connected</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!epoll_mt_safe" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!epoll_mt_safe" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!epoll_mt_safe" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">connected</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!epoll_mt_safe" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!epoll_mt_safe" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">connected</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!epoll_mt_safe&amp;!ool_spin" key="ON-5898, ST-1309">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">connected</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!epoll_mt_safe&amp;!ool_spin" key="ON-5898, ST-1309">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">connected</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!epoll_mt_safe&amp;!ool_spin" key="ON-5898, ST-1309">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">connected</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!epoll_mt_safe&amp;!ool_spin" key="ON-5898, ST-1309">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">connected</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!epoll_mt_safe&amp;!ool_spin" key="ON-5898, ST-1309">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">connected</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin&amp;!(tiny_spin&amp;ool_sleep_spin)&amp;!(ool_loop=0)" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!epoll_mt_safe&amp;!ool_spin" key="ON-5898, ST-1309">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">connected</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">connected</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">connected</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">just_created</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">just_created</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">just_created</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">just_created</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">just_created</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">just_created</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">just_created</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">just_created</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait returned the same events for the second call</verdict>
            <verdict>epoll_pwait returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_pwait2 returned the same events for the second call</verdict>
            <verdict>epoll_pwait2 returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">just_created</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">just_created</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">just_created</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state">just_created</arg>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">1</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll returned the same events for the second call</verdict>
            <verdict>epoll returned the same events for the second call after refreshing</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_state"/>
        <arg name="sock_type"/>
        <arg name="timeout1"/>
        <arg name="timeout2">0</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="timeout1"/>
        <arg name="timeout2">0</arg>
        <notes/>
      </iter>
    </test>
    <test name="wait_epollet_wait" type="script">
      <objective>Check that modifying of descriptor with EPOLLET flag between two epoll_wait calls correctly handled by epoll_wait function.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="early_ctl"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="timeout"/>
        <arg name="early_ctl"/>
        <notes/>
      </iter>
    </test>
    <test name="epoll_evnt_queue" type="script">
      <objective>Check that epoll_wait() function correctly handles the situation when the number of descriptors with events in epoll descriptor is greater than maxevents in epoll_wait() function which is called with this epoll descriptor.</objective>
      <notes>Test can fail on pure linux-2.6.18, so Onload with epoll2 can fail in the same way on this linux version.</notes>
      <iter result="PASSED">
        <arg name="conn_num"/>
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evt_num"/>
        <arg name="maxevents"/>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="early_ctl"/>
        <notes/>
      </iter>
    </test>
    <test name="multiple_same_epfd" type="script">
      <objective>Check that multiple epoll_wait() calls running simultaneously with the same epfd (with one epfd or epfds with the same content) work correctly.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
        <results tags="ool_epoll=1|ool_epoll=3" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
        <results tags="ool_epoll=1|ool_epoll=3" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
        <results tags="ool_epoll=1|ool_epoll=3" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="epfd_num"/>
        <arg name="evts"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env"/>
        <arg name="epfd_num"/>
        <arg name="evts"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="epfd_num"/>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="epfd_num"/>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="epfd_num"/>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env"/>
        <arg name="epfd_num"/>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env"/>
        <arg name="epfd_num"/>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env"/>
        <arg name="epfd_num"/>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(reuse_stack&amp;(ool_loop=0)|!reuse_stack&amp;!(ool_loop=2))&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
        <results tags="ool_epoll=1|ool_epoll=3" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
        <results tags="ool_epoll=1|ool_epoll=3" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
        <results tags="ool_epoll=1|ool_epoll=3" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">TRUE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">inout</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">out</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-4344, ON-5722">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
            <verdict>FD is not closed.</verdict>
            <verdict>FD is not closed.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts">in</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data">FALSE</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="call_num"/>
        <arg name="close_num"/>
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="epfd_num"/>
        <arg name="evts"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="send_data"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
    </test>
    <test name="strange_op_on_epfd" type="script">
      <objective>Check that functions that have fd argument fail correctly when they are called with epfd.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">simple_zc_send_sock_user_buf</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5" key="ON-1831">
          <result value="FAILED">
            <verdict>simple_zc_send_sock_user_buf() called with epoll descriptor as socket descriptor returns -1, but: errno is set to ESOCKTNOSUPPORT instead of ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">simple_zc_send_sock</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="linux&amp;v5" key="ON-1831">
          <result value="FAILED">
            <verdict>simple_zc_send_sock() called with epoll descriptor as socket descriptor returns -1, but: errno is set to ESOCKTNOSUPPORT instead of ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">simple_hlrx_recv_copy</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5" notes="Expected behaviour, onload_zc_hlrx_alloc() fails before onload_zc_hlrx_recv_copy()">
          <result value="FAILED">
            <verdict>simple_hlrx_recv_copy() called with epoll descriptor as socket descriptor returns -1, but: errno is set to Non-RPC TA_UNIX-ENOTSOCK instead of ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">simple_hlrx_recv_zc</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5" notes="Expected behaviour, onload_zc_hlrx_alloc() fails before onload_zc_hlrx_recv_zc()">
          <result value="FAILED">
            <verdict>simple_hlrx_recv_zc() called with epoll descriptor as socket descriptor returns -1, but: errno is set to Non-RPC TA_UNIX-ENOTSOCK instead of ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">simple_zc_recv</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="linux&amp;v5" key="ON-1831">
          <result value="FAILED">
            <verdict>simple_zc_recv() called with epoll descriptor as socket descriptor returns -1, but: errno is set to ESOCKTNOSUPPORT instead of ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">template_send</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=0)">
          <result value="FAILED">
            <verdict>template_send() called with epoll descriptor as socket descriptor returns -1, but: errno is set to ESOCKTNOSUPPORT instead of EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">simple_zc_send_user_buf</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=2)">
          <result value="FAILED">
            <verdict>simple_zc_send_user_buf() called with epoll descriptor as socket descriptor returns -1, but: errno is set to EINVAL instead of ENOTSOCK</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=0" key="ON-1831">
          <result value="FAILED">
            <verdict>simple_zc_send_user_buf() called with epoll descriptor as socket descriptor returns -1, but: errno is set to ESOCKTNOSUPPORT instead of ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">simple_zc_send</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=2)">
          <result value="FAILED">
            <verdict>simple_zc_send() called with epoll descriptor as socket descriptor returns -1, but: errno is set to EINVAL instead of ENOTSOCK</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=0)">
          <result value="FAILED">
            <verdict>simple_zc_send() called with epoll descriptor as socket descriptor returns -1, but: errno is set to ESOCKTNOSUPPORT instead of ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">writev</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll&gt;0)" key="ON-686">
          <result value="FAILED">
            <verdict>writev() called with epoll descriptor as socket descriptor returns -1, but: errno is set to ENOTSOCK instead of EOPNOTSUPP</verdict>
          </result>
        </results>
        <results tags="linux&amp;!v5&amp;(linux-2.6&lt;=18)">
          <result value="FAILED">
            <verdict>writev() called with epoll descriptor as socket descriptor returns -1, but: errno is set to EBADF instead of EINVAL</verdict>
          </result>
        </results>
        <results tags="linux&amp;v5&amp;(ool_epoll=0)&amp;(linux-2.6&lt;=18)">
          <result value="FAILED">
            <verdict>writev() called with epoll descriptor as socket descriptor returns -1, but: errno is set to EBADF instead of EINVAL</verdict>
          </result>
        </results>
        <results tags="(linux-2.6&gt;18)&amp;(linux&amp;!v5|v5&amp;ool_epoll=0)">
          <result value="FAILED">
            <verdict>writev() called with epoll descriptor as socket descriptor returns -1, but: errno is set to EINVAL instead of EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">write</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll&gt;0)" key="ON-686">
          <result value="FAILED">
            <verdict>write() called with epoll descriptor as socket descriptor returns -1, but: errno is set to ENOTSOCK instead of EINVAL</verdict>
          </result>
        </results>
        <results tags="linux&amp;!v5&amp;(linux-2.6&lt;=18)">
          <result value="FAILED">
            <verdict>write() called with epoll descriptor as socket descriptor returns -1, but: errno is set to EBADF instead of EINVAL</verdict>
          </result>
        </results>
        <results tags="linux&amp;v5&amp;(ool_epoll=0)&amp;(linux-2.6&lt;=18)">
          <result value="FAILED">
            <verdict>write() called with epoll descriptor as socket descriptor returns -1, but: errno is set to EBADF instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">readv</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll&gt;0)" key="ON-686">
          <result value="FAILED">
            <verdict>readv() called with epoll descriptor as socket descriptor returns -1, but: errno is set to ENOTSOCK instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">read</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll&gt;0)" key="ON-686">
          <result value="FAILED">
            <verdict>read() called with epoll descriptor as socket descriptor returns -1, but: errno is set to ENOTSOCK instead of EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">accept</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">bind</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">connect</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">getpeername</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">getsockname</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">listen</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">recv</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">recvfrom</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">recvmsg</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">send</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">sendmsg</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">sendmmsg_alt</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">sendto</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">shutdown</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">od_send</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="error"/>
        <arg name="func">recvmmsg_alt</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="edge_level_triggered_mod" type="script">
      <objective>Check that modification of triggered mode correctly effects epoll_wait() function.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="et_to_lt"/>
        <arg name="evts"/>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="early_ctl"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="et_to_lt"/>
        <arg name="evts"/>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="timeout"/>
        <arg name="early_ctl"/>
        <notes/>
      </iter>
    </test>
    <test name="edge_level_triggered_et_only" type="script">
      <objective>Check that epoll functions correctly handle epoll descriptor with fds in edge and level-triggered modes when only the fd in edge-triggered mode has events.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="et_first"/>
        <arg name="evts"/>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="read_between"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="early_ctl"/>
        <arg name="zf"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="et_first"/>
        <arg name="evts"/>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="read_between"/>
        <arg name="timeout"/>
        <arg name="early_ctl"/>
        <arg name="zf"/>
        <notes/>
      </iter>
    </test>
    <test name="edge_level_triggered_both" type="script">
      <objective>Check that epoll functions correctly handle epoll descriptor with file descriptors in edge and level-triggered modes when they both have events.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="et_first"/>
        <arg name="evts"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="early_ctl"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="et_first"/>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="timeout"/>
        <arg name="early_ctl"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="et_first"/>
        <arg name="evts"/>
        <arg name="iomux">epoll</arg>
        <arg name="is_pipe"/>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="early_ctl"/>
        <notes/>
      </iter>
    </test>
    <test name="derived_epoll_add" type="script">
      <objective>Check that system and epoll functions correctly handle the situation when one process adds the socket to epoll descriptor while epoll_wait() with this epoll descriptor is running on another process.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)&amp;udp_connect_no_handover" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add"/>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)&amp;udp_connect_no_handover" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)&amp;udp_connect_no_handover" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)&amp;udp_connect_no_handover" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)&amp;udp_connect_no_handover" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)&amp;udp_connect_no_handover" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add"/>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_add"/>
        <arg name="evts">inout</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="other_stack">FALSE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">inout</arg>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts">inout</arg>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_add"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="other_stack"/>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack">TRUE</arg>
        <arg name="remove_before_wait"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_add">TRUE</arg>
        <arg name="evts"/>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux"/>
        <arg name="non_blocking"/>
        <arg name="other_stack"/>
        <arg name="remove_before_wait">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll does not return in time</verdict>
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="derived_epoll_mod" type="script">
      <objective>Check that system and epoll functions correctly handle the situation when one process modifies the events in epoll descriptor while epoll_wait() with this epoll descriptor is running on another process.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(ool_loop=0)" key="ON-4928">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!(ool_loop=0)" key="ON-4928">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin" key="ON-4928">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin" key="ON-4928">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2&amp;!(ool_loop=0)" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;((ool_epoll_ctl_fast&amp;ool_epoll=2|ool_epoll=3&amp;!ool_spin)&amp;!(ool_loop=0))" key="ON-4410, 52145">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;((ool_epoll_ctl_fast&amp;ool_epoll=2|ool_epoll=3&amp;!ool_spin)&amp;!(ool_loop=0))" key="ON-4410, 52145">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll_ctl_fast&amp;ool_epoll=2|(ool_epoll=3&amp;!ool_spin))" key="ON-4410, 52145">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll_ctl_fast&amp;ool_epoll=2|(ool_epoll=3&amp;!ool_spin))" key="ON-4410, 52145">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=0|ool_epoll=2)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=0|ool_epoll=2)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=0|ool_epoll=2)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=0|ool_epoll=2)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=0|ool_epoll=2)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=0|ool_epoll=2)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=0|ool_epoll=2)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;udp_connect_no_handover&amp;!(ool_epoll=0|ool_epoll=2)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!(ool_loop=0)" key="ON-929">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!(ool_loop=0)" key="ON-929">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!(ool_loop=0)" key="ON-929">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!(ool_loop=0)" key="ON-929">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!(ool_loop=0)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!(ool_loop=0)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!(ool_loop=0)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!(ool_loop=0)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="linux">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">in</arg>
        <arg name="func">thread_create</arg>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">inout</arg>
        <arg name="func"/>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts">out</arg>
        <arg name="func"/>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">thread_create</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod"/>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">FALSE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="event_before_mod">TRUE</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="have_events"/>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="derived_epoll_del" type="script">
      <objective>Check that system and epoll functions correctly handle the situation when one process deletes the socket from epoll descriptor while epoll_wait() with this epoll descriptor is running on another process.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_spin|int_spin)" key="ST-1140">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_spin|int_spin)" key="ST-1140">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">out</arg>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)&amp;!safe_profile" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(el&amp;ool_phys_mode&amp;small_spin)">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(el&amp;ool_phys_mode&amp;small_spin)">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
        <results tags="v5&amp;udp_connect_no_handover">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;(!(ool_loop=0)&amp;ool_spin&amp;!(!el&amp;int_spin&amp;ool_phys_mode)|(ool_loop=0&amp;linux-3.2.0))">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_spin|int_spin)" key="ST-1140">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;(!(ool_loop=0)&amp;ool_spin&amp;!(!el&amp;int_spin&amp;ool_phys_mode)|(ool_loop=0&amp;linux-3.2.0))">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_spin|int_spin)" key="ST-1140">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(el&amp;ool_loop=4)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(el&amp;ool_loop=4)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(el&amp;ool_loop=4)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(el&amp;ool_loop=4)" key="ON-12472">
          <result value="FAILED">
            <verdict>oo_epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>WAIT_EPOLL_WAIT() unexpectedly failed with RPC-EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(el&amp;ool_phys_mode&amp;small_spin)">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(el&amp;ool_phys_mode&amp;small_spin)">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!udp_connect_no_handover" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!(ool_loop=0)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard">FALSE</arg>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="func">dup</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;(!(ool_loop=0)&amp;ool_spin&amp;!(!el&amp;int_spin&amp;ool_phys_mode)|(ool_loop=0&amp;linux-3.2.0))">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_spin|int_spin|small_spin)&amp;(ool_epoll=1)" key="ST-1140">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;(!(ool_loop=0)&amp;ool_spin&amp;!(!el&amp;int_spin&amp;ool_phys_mode)|(ool_loop=0&amp;linux-3.2.0))">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_spin|int_spin|small_spin)&amp;(ool_epoll=1)" key="ST-1140">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">inout</arg>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="func">fork_exec</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child">FALSE</arg>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">in</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="evts">out</arg>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard"/>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="func">fork</arg>
        <arg name="iomux">epoll</arg>
        <arg name="non_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <arg name="use_wildcard">TRUE</arg>
        <arg name="wait_child"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 0</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="edge_triggered_listen" type="script">
      <objective>Check that SOCK_STREAM sockets in connected and listen states in one epoll descriptor all in edge-triggered mode correctly handle by epoll_wait().</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="group_num"/>
        <notes/>
      </iter>
    </test>
    <test name="epoll_ctl_early" type="script">
      <objective>Check that socket may be added to epoll set before bind/connect.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="blocking">TRUE</arg>
        <arg name="destroy_stack">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="multithread"/>
        <arg name="sock_type"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Epoll fires without events</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="blocking">FALSE</arg>
        <arg name="destroy_stack">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="multithread"/>
        <arg name="sock_type"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="blocking">TRUE</arg>
        <arg name="destroy_stack">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="multithread"/>
        <arg name="sock_type"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Epoll fires without events</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="blocking">FALSE</arg>
        <arg name="destroy_stack">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="multithread"/>
        <arg name="sock_type"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="blocking"/>
        <arg name="destroy_stack"/>
        <arg name="env"/>
        <arg name="iomux">epoll</arg>
        <arg name="multithread"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="blocking"/>
        <arg name="destroy_stack"/>
        <arg name="env"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="multithread"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="blocking"/>
        <arg name="destroy_stack"/>
        <arg name="env"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="multithread"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="epoll_dead_circle" type="script">
      <objective>Check that potentially infinite loop which can take place after an event occurs on some fd in epfd of one of epoll_wait() functions having epfd of each other in their epfds doesn't cause any error.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="set_sock_evt"/>
        <notes/>
      </iter>
    </test>
    <test name="create_close_many" type="script">
      <objective>Check that repeating epoll_create() and then close() many times doesn't lead to crash</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iter_num"/>
        <arg name="domain"/>
        <notes/>
      </iter>
    </test>
    <test name="epoll_ctl_del_after_exec" type="script">
      <objective>Check that application doen't crash when socket id deleted from empty epoll set after exec()</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="!(ool_loop=0)&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" notes="Known behaviour for ool_epoll_ctl_fast and ool_epoll=2">
          <result value="FAILED">
            <verdict>Deleting socket from empty epfd doesn't fail</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_wildcard">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="!(ool_loop=0)&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" notes="Known behaviour for ool_epoll_ctl_fast and ool_epoll=2">
          <result value="FAILED">
            <verdict>Deleting socket from empty epfd doesn't fail</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_wildcard">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="use_wildcard">TRUE</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" notes="Known behaviour for ool_epoll_ctl_fast and ool_epoll=2">
          <result value="FAILED">
            <verdict>Deleting socket from empty epfd doesn't fail</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="sock_type"/>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" notes="Known behaviour for ool_epoll_ctl_fast and ool_epoll=2">
          <result value="FAILED">
            <verdict>Deleting socket from empty epfd doesn't fail</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="sock_type"/>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" notes="Known behaviour for ool_epoll_ctl_fast and ool_epoll=2">
          <result value="FAILED">
            <verdict>Deleting socket from empty epfd doesn't fail</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="ctl_handover_wait" type="script">
      <objective>Check that epoll_wait() report correct events after handover on the socket from epoll file descriptor.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux">epoll</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
    </test>
    <test name="epoll_nbio_tcpconnect" type="script">
      <objective>Check epoll functions behavior of failure during non-blocking TCP connection, socket is reused.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
    </test>
    <test name="epoll_reused_descriptor" type="script">
      <objective>Check that reused file descriptor is properly handled by epoll.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout">0</arg>
        <notes/>
        <results tags="linux|(ool_epoll=2)|(ool_epoll=0)">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout">0</arg>
        <notes/>
        <results tags="linux|(ool_epoll=2)|(ool_epoll=0)">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout">2000</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
            <verdict>event[1] EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
            <verdict>event[1] EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout">2000</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1&amp;ool_spin&amp;!small_spin)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">none</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout">0</arg>
        <notes/>
        <results tags="linux|(ool_epoll=2)|(ool_epoll=0)">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout">0</arg>
        <notes/>
        <results tags="linux|(ool_epoll=2)|(ool_epoll=0)">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout">2000</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
            <verdict>event[1] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
            <verdict>event[1] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation">read</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
            <verdict>event[1] EPOLLIN | EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="linux&amp;el&lt;=5">
          <result value="PASSED">
            <verdict>event[0] EPOLLIN | EPOLLOUT</verdict>
            <verdict>event[1] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation">write</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
            <verdict>event[1] EPOLLIN | EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="linux&amp;el&lt;=5">
          <result value="PASSED">
            <verdict>event[0] EPOLLIN | EPOLLOUT</verdict>
            <verdict>event[1] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation">read</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
            <verdict>event[1] EPOLLIN | EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="linux&amp;el&lt;=5">
          <result value="PASSED">
            <verdict>event[0] EPOLLIN | EPOLLOUT</verdict>
            <verdict>event[1] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation">write</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
            <verdict>event[1] EPOLLIN | EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="linux&amp;el&lt;=5">
          <result value="PASSED">
            <verdict>event[0] EPOLLIN | EPOLLOUT</verdict>
            <verdict>event[1] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout">2000</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1&amp;ool_spin&amp;!small_spin)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">none</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">none</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation">read</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLIN | EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">none</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation">write</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLIN | EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">none</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout">0</arg>
        <notes/>
        <results tags="linux|(ool_epoll=2)|(ool_epoll=0)">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout">0</arg>
        <notes/>
        <results tags="linux|(ool_epoll=2)|(ool_epoll=0)">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout">2000</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
            <verdict>event[1] EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
            <verdict>event[1] EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout">2000</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1&amp;ool_spin&amp;!small_spin)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">none</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout">0</arg>
        <notes/>
        <results tags="linux|(ool_epoll=2)|(ool_epoll=0)">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout">0</arg>
        <notes/>
        <results tags="linux|(ool_epoll=2)|(ool_epoll=0)">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="operation">write</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout">2000</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="operation">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout">2000</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen">TRUE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout">2000</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen">FALSE</arg>
        <arg name="iomux">epoll</arg>
        <arg name="operation">read</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout">2000</arg>
        <notes/>
        <results tags="linux&amp;!v5">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="linux&amp;v5" key="ST-1022">
          <result value="FAILED"/>
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;ool_spin&amp;!small_spin" key="ON-12472">
          <result value="FAILED"/>
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=0|ool_epoll=2)" key="ON-12472">
          <result value="FAILED"/>
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
            <verdict>event[1] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
            <verdict>event[1] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation">read</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
            <verdict>event[1] EPOLLIN | EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="linux&amp;el&lt;=5">
          <result value="PASSED">
            <verdict>event[0] EPOLLIN | EPOLLOUT</verdict>
            <verdict>event[1] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation">write</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
            <verdict>event[1] EPOLLIN | EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="linux&amp;el&lt;=5">
          <result value="PASSED">
            <verdict>event[0] EPOLLIN | EPOLLOUT</verdict>
            <verdict>event[1] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation">read</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
            <verdict>event[1] EPOLLIN | EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="linux&amp;el&lt;=5">
          <result value="PASSED">
            <verdict>event[0] EPOLLIN | EPOLLOUT</verdict>
            <verdict>event[1] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">fork</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation">write</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
            <verdict>event[1] EPOLLIN | EPOLLOUT</verdict>
          </result>
        </results>
        <results tags="linux&amp;el&lt;=5">
          <result value="PASSED">
            <verdict>event[0] EPOLLIN | EPOLLOUT</verdict>
            <verdict>event[1] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 1 instead of 2</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">dup</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout">2000</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=3|ool_epoll=1&amp;ool_spin&amp;!small_spin)" key="ON-12472">
          <result value="FAILED">
            <verdict>epoll_wait returned 0 instead of 1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">none</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLOUT | EPOLLHUP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">none</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation">read</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLIN | EPOLLOUT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">TRUE</arg>
        <arg name="duplication">none</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation">write</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>event[0] EPOLLIN | EPOLLOUT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="add_to_set">FALSE</arg>
        <arg name="duplication">none</arg>
        <arg name="env"/>
        <arg name="fast_reopen"/>
        <arg name="iomux">epoll</arg>
        <arg name="operation"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
    </test>
    <test name="epoll_one_shot_out" type="script">
      <objective>Test OUT event with different timeout values in the edge-triggered mode.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="timeout">1000</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="FAILED">
            <verdict>Event was reported 3 times</verdict>
          </result>
        </results>
        <results tags="v5&amp;(!(ool_epoll=1)|ool_spin)" key="ON-1153">
          <result value="PASSED">
            <verdict>Event was reported 2 times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="timeout">0</arg>
        <notes/>
        <results tags="v5" key="ON-1153">
          <result value="PASSED">
            <verdict>Event was reported 2 times</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="epoll_one_shot" type="script">
      <objective>Check that epoll functions work correctly handles EPOLLONESHOT (or EPOLLET in the same situation) flag.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">out</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=1|ool_loop=2)&amp;!(ool_epoll=3)" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_loop=3|ool_loop=4)&amp;(ool_epoll=1|ool_epoll=2)&amp;ool_epoll_ctl_fast" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(!epoll_mt_safe|!(ool_loop=0))" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;ool_spin&amp;rss_scalable_active_passive&amp;(ool_loop=0)&amp;!ool_spin" key="ST-1304">
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;!epoll_mt_safe&amp;!rss_scalable_active_passive&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;!rss_scalable_active_passive&amp;!ool_spin&amp;!ool_sleep_spin&amp;(!epoll_mt_safe|!(ool_loop=0))" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">inout</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=1|ool_loop=2)&amp;!(ool_epoll=3)" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_loop=3|ool_loop=4)&amp;(ool_epoll=1|ool_epoll=2)&amp;ool_epoll_ctl_fast" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(!epoll_mt_safe|!(ool_loop=0))" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;ool_spin&amp;rss_scalable_active_passive&amp;(ool_loop=0)" key="ST-1304">
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">out</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=1|ool_loop=2)&amp;!(ool_epoll=3)" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_loop=3|ool_loop=4)&amp;(ool_epoll=1|ool_epoll=2)&amp;ool_epoll_ctl_fast" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(!epoll_mt_safe|!(ool_loop=0))" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;ool_spin&amp;rss_scalable_active_passive&amp;(ool_loop=0)" key="ST-1304">
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">inout</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;!epoll_mt_safe&amp;ool_loop=0&amp;ool_epoll=3&amp;(!ool_spin|small_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">out</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;!epoll_mt_safe&amp;ool_loop=0&amp;ool_epoll=3&amp;(!ool_spin|small_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">inout</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=1|ool_loop=2)&amp;!(ool_epoll=3)" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_loop=3|ool_loop=4)&amp;(ool_epoll=1|ool_epoll=2)&amp;ool_epoll_ctl_fast" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(!epoll_mt_safe|!(ool_loop=0))" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;ool_spin&amp;rss_scalable_active_passive&amp;(ool_loop=0)&amp;!ool_spin" key="ST-1304">
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">inout</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;(ool_loop=0)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_loop=0)&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">out</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;(ool_loop=0)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_loop=0)&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">inout</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">inout</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">out</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">out</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5" key="ST-1566">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env"/>
        <arg name="et_one_shot"/>
        <arg name="evts">inout</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env"/>
        <arg name="et_one_shot"/>
        <arg name="evts">out</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env"/>
        <arg name="et_one_shot"/>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">same</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env"/>
        <arg name="et_one_shot"/>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">different</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env"/>
        <arg name="et_one_shot"/>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="refresh"/>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="et_one_shot">one_shot</arg>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=3|ool_loop=4)&amp;(!ool_spin|small_spin)&amp;ool_epoll_ctl_fast" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;!(ool_loop=2)&amp;!(ool_loop=1)&amp;!ool_spin&amp;!ool_sleep_spin" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;!(ool_loop=2)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_loop=3|ool_loop=4)&amp;(!ool_spin|small_spin)&amp;epoll_mt_safe" key="ON-1153">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=2)&amp;(!ool_spin|small_spin)&amp;!ool_sleep_spin" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="et_one_shot">one_shot</arg>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;(ool_loop=0|ool_loop=1)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!ool_spin&amp;!ool_sleep_spin" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;!(ool_loop=0|ool_loop=1)&amp;(!ool_spin|small_spin)&amp;!ool_sleep_spin" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="et_one_shot">one_shot</arg>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=3|ool_loop=4)&amp;(!ool_spin|small_spin)&amp;ool_epoll_ctl_fast" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;!(ool_loop=2|ool_loop=1)&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;!(ool_loop=2)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_loop=3|ool_loop=4)&amp;(!ool_spin|small_spin)&amp;epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=2|ool_loop=1)&amp;(!ool_spin|small_spin)&amp;!ool_sleep_spin" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="et_one_shot">one_shot</arg>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;(ool_loop=0|ool_loop=1)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;!(ool_loop=0)&amp;(!ool_spin|small_spin)&amp;!ool_sleep_spin" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="et_one_shot"/>
        <arg name="evts">in</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)&amp;!udp_connect_no_handover" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe&amp;!udp_connect_no_handover" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;udp_connect_no_handover" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="et_one_shot"/>
        <arg name="evts">in</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;!epoll_mt_safe&amp;!udp_connect_no_handover&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;!udp_connect_no_handover&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;udp_connect_no_handover&amp;(!ool_spin|small_spin)&amp;!ool_sleep_spin" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">in</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=3|ool_loop=4)&amp;ool_epoll_ctl_fast" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_loop=3|ool_loop=4)" key="ON-4344, ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;ool_loop=0&amp;!epoll_mt_safe&amp;!rss_scalable_active_passive&amp;(!ool_spin|small_spin)" key="ON-4344, ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">in</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!(ool_loop=0)" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;!epoll_mt_safe&amp;ool_loop=0&amp;ool_epoll=3&amp;(!ool_spin|small_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">in</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=3|ool_loop=4)&amp;ool_epoll_ctl_fast" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;(ool_loop=1|ool_loop=2)" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_loop=3|ool_loop=4)" key="ON-4344, ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;!epoll_mt_safe&amp;!rss_scalable_active_passive&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-4344, ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;!(ool_loop=1|ool_loop=2)&amp;!rss_scalable_active_passive&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="et_one_shot">et</arg>
        <arg name="evts">in</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;(ool_loop=0)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_loop=0)&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;!(ool_loop=0)&amp;(!ool_spin|small_spin|int_spin)&amp;!ool_sleep_spin" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="et_one_shot"/>
        <arg name="evts">inout</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="et_one_shot"/>
        <arg name="evts">inout</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="et_one_shot"/>
        <arg name="evts">out</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="et_one_shot"/>
        <arg name="evts">out</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="et_one_shot"/>
        <arg name="evts">in</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="et_one_shot"/>
        <arg name="evts">in</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;!epoll_mt_safe&amp;(ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;!ool_spin&amp;!ool_sleep_spin&amp;!epoll_mt_safe" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="et_one_shot">one_shot</arg>
        <arg name="evts">inout</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="et_one_shot">one_shot</arg>
        <arg name="evts">inout</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="et_one_shot">one_shot</arg>
        <arg name="evts">out</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="et_one_shot">one_shot</arg>
        <arg name="evts">out</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="et_one_shot"/>
        <arg name="evts">in</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="early_ctl"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="et_one_shot"/>
        <arg name="evts">in</arg>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="sock_type"/>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;(!ool_spin|small_spin)" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="epoll_one_shot_pipe" type="script">
      <objective>Check that epoll functions with flag EPOLLONESHOT or EPOLLET report correct events (rd, wr, rdwr) sequence for pipe sockets.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="et_one_shot">one_shot</arg>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">same</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="et_one_shot"/>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">different</arg>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="et_one_shot"/>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="non_blocking">TRUE</arg>
        <arg name="refresh"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="et_one_shot">one_shot</arg>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!ool_spin" key="ON-929">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="et_one_shot">et</arg>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">none</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;(ool_epoll=1|ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!ool_spin&amp;!ool_sleep_spin" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="et_one_shot">et</arg>
        <arg name="evts"/>
        <arg name="iomux"/>
        <arg name="non_blocking">FALSE</arg>
        <arg name="refresh">same</arg>
        <arg name="timeout"/>
        <notes/>
        <results tags="v5&amp;(small_spin|tiny_spin)&amp;(ool_epoll=1|ool_epoll=3|ool_sleep_spin)" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)&amp;!ool_spin&amp;!ool_sleep_spin" key="ON-5898">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="few_in_events" type="script">
      <objective>Check that epoll_wait() calls report IN events after incomplete data read.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="edge_triggered_out" type="script">
      <objective>Check TCP and UDP OUT event is reported correctly in edge-triggered mode.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
        <results tags="zf_shim" key="ON-6714">
          <result value="FAILED">
            <verdict>Incorrect events were returned by the second epoll_wait() call: POLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-4421">
          <result value="PASSED">
            <verdict>Event is reported twice</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-4421">
          <result value="FAILED">
            <verdict>Event is reported twice</verdict>
            <verdict>Unexpected events were returned by the second epoll_wait() call: POLLOUT</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;ool_spin|v5&amp;!(ool_epoll=1)" key="ON-4421">
          <result value="FAILED">
            <verdict>Unexpected events were returned by the second epoll_wait() call: POLLOUT</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="tcp_ack_no_event" type="script">
      <objective>Check that no events is reported for TCP ACK packets.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="ack_type">zero_window</arg>
        <arg name="env"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1&amp;!ool_spin" key="ON-929">
          <result value="PASSED">
            <verdict>epoll_wait() returns events the second time for overfilled RX buffer</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1&amp;small_spin" key="ON-929">
          <result value="FAILED">
            <verdict>epoll_wait() unexpectedly returns events 'EPOLLIN'</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="ack_type">ack</arg>
        <arg name="env"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="ack_type">keepalive</arg>
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="tcp_shutdown" type="script">
      <objective>Check epoll behavior after shutdown(WR) on TCP socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="evts"/>
        <arg name="event_before"/>
        <arg name="close_peer"/>
        <notes/>
      </iter>
    </test>
    <test name="tcp_listen" type="script">
      <objective>Check that epoll returns a correct event for a listener socket when connection attempt fails or succeeds.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="status"/>
        <arg name="timeout"/>
        <notes/>
      </iter>
    </test>
    <test name="epollet_early_shot" type="script">
      <objective>Add a socket before bind(), listen() or connect() to epoll set with EPOLLET flag, discharge event using epoll_wait(). Check that further events are rised as usual independently on if socket is handed over or not.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="listening"/>
        <arg name="peer">iut</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="listening"/>
        <arg name="peer">iut</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux">epoll</arg>
        <arg name="listening"/>
        <arg name="peer">iut</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">tst</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">lo</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">wild</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">tst</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">lo</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">iut</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">lo</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">tst</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">lo</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">lo</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">none</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">lo</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">none</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">iut</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">tst</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">iut</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">lo</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">TRUE</arg>
        <arg name="peer">tst</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux">epoll</arg>
        <arg name="listening"/>
        <arg name="peer">iut</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux">epoll</arg>
        <arg name="listening">TRUE</arg>
        <arg name="peer">iut</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">wild</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">FALSE</arg>
        <arg name="peer">iut</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" key="ON-9153">
          <result value="FAILED">
            <verdict>Unexpected epoll result</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">wild</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">FALSE</arg>
        <arg name="peer">tst</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" key="ON-9153">
          <result value="FAILED">
            <verdict>Unexpected epoll result</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">iut</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">FALSE</arg>
        <arg name="peer"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" key="ON-9153">
          <result value="FAILED">
            <verdict>Unexpected epoll result</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">FALSE</arg>
        <arg name="peer"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" key="ON-9153">
          <result value="FAILED">
            <verdict>Unexpected epoll result</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">lo</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">FALSE</arg>
        <arg name="peer"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" key="ON-9153">
          <result value="FAILED">
            <verdict>Unexpected epoll result</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">iut</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">TRUE</arg>
        <arg name="peer">tst</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5" key="ON-9153">
          <result value="FAILED">
            <verdict>Unexpected epoll result</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">iut</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">TRUE</arg>
        <arg name="peer">lo</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5" key="ON-9153">
          <result value="FAILED">
            <verdict>Unexpected epoll result</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">TRUE</arg>
        <arg name="peer">iut</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5" key="ON-9153">
          <result value="FAILED">
            <verdict>Unexpected epoll result</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">TRUE</arg>
        <arg name="peer">lo</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5" key="ON-9153">
          <result value="FAILED">
            <verdict>Unexpected epoll result</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">wild</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">lo</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5" key="ON-9153">
          <result value="FAILED">
            <verdict>Unexpected epoll result</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">lo</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">TRUE</arg>
        <arg name="peer"/>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5" key="ON-9153">
          <result value="FAILED">
            <verdict>Unexpected epoll result</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">none</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer"/>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5" key="ON-9153">
          <result value="FAILED">
            <verdict>Unexpected epoll result</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux">epoll</arg>
        <arg name="listening">FALSE</arg>
        <arg name="peer">iut</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">iut</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">iut</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">wild</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">iut</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">iut</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">TRUE</arg>
        <arg name="peer">iut</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">wild</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">TRUE</arg>
        <arg name="peer">iut</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">wild</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening">TRUE</arg>
        <arg name="peer">tst</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux">epoll</arg>
        <arg name="listening"/>
        <arg name="peer">tst</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux">epoll</arg>
        <arg name="listening"/>
        <arg name="peer">lo</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux">epoll</arg>
        <arg name="listening"/>
        <arg name="peer">none</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">iut</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">none</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">wild</arg>
        <arg name="blocking_iomux">TRUE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer">none</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="listening"/>
        <arg name="peer"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">tst</arg>
        <arg name="blocking_iomux">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="listening"/>
        <arg name="peer"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">iut</arg>
        <arg name="blocking_iomux">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">wild</arg>
        <arg name="blocking_iomux">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">lo</arg>
        <arg name="blocking_iomux">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to">none</arg>
        <arg name="blocking_iomux">FALSE</arg>
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="listening"/>
        <arg name="peer"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="../gateways_epilogue" type="script">
      <objective>Epilogue used to reset interfaces after different gateway settings.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="epfd_change_stack" type="script">
      <objective>Check that epoll functions correctly handle changing of home stack of epoll fd.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="sock_type1"/>
        <arg name="sock_type2"/>
        <arg name="data_size"/>
        <arg name="timeout"/>
        <arg name="evts1"/>
        <arg name="evts2"/>
        <arg name="evts_mod"/>
        <arg name="do_modify"/>
        <notes/>
      </iter>
    </test>
    <test name="epoll_ctl_thread" type="script">
      <objective>Check that a lot of epoll_ctl() operations from different threads do not crash system.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="check_epoll_wait"/>
        <arg name="conns_per_thread"/>
        <arg name="env"/>
        <arg name="iter_num"/>
        <arg name="num_threads"/>
        <notes/>
      </iter>
    </test>
    <test name="maxevents_two_stacks" type="script">
      <objective>Check what happens when epoll set contains sockets from different Onload stacks and number of events is more than maxevents.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="first_group">more</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=3" key="ON-12997">
          <result value="PASSED">
            <verdict>More than two epoll_pwait() calls were required to get events for all IUT sockets</verdict>
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="first_group">more</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=3" key="ON-12997">
          <result value="PASSED">
            <verdict>More than two epoll_pwait2() calls were required to get events for all IUT sockets</verdict>
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="first_group">less</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="first_group">less</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="first_group">more</arg>
        <arg name="iomux">epoll</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=3" key="ON-12997">
          <result value="PASSED">
            <verdict>More than two epoll() calls were required to get events for all IUT sockets</verdict>
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="first_group">more</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=3" key="ON-12997, ON-929">
          <result value="PASSED">
            <verdict>More than two epoll_pwait() calls were required to get events for all IUT sockets</verdict>
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="first_group">more</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=3" key="ON-12997, ON-929">
          <result value="PASSED">
            <verdict>More than two epoll_pwait2() calls were required to get events for all IUT sockets</verdict>
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="first_group">less</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="first_group">less</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="first_group">equal</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="first_group">equal</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="first_group">less</arg>
        <arg name="iomux">epoll</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="first_group">equal</arg>
        <arg name="iomux"/>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="first_group">more</arg>
        <arg name="iomux">epoll</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=3" key="ON-12997, ON-929">
          <result value="PASSED">
            <verdict>More than two epoll() calls were required to get events for all IUT sockets</verdict>
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll=1" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="zf_shim" key="ON-13300">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="first_group">less</arg>
        <arg name="iomux">epoll</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="zf_shim" key="ON-13300">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="first_group">equal</arg>
        <arg name="iomux">epoll</arg>
        <arg name="maxevents"/>
        <notes/>
        <results tags="v5&amp;(ool_epoll=1|ool_epoll=3)" key="ON-12997">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_epoll_ctl_fast|ool_spin|tiny_spin)&amp;ool_epoll=2" key="ON-4410, ON-13204">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;(ool_epoll=0&amp;(ool_spin|tiny_spin))" key="ON-13090">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="zf_shim" key="ON-13300">
          <result value="PASSED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="event_order" type="script">
      <objective>Check that epoll reports events in right order.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="maxevents"/>
        <arg name="with_delay"/>
        <notes/>
        <results tags="v5&amp;ool_epoll=1" key="ON-12997">
          <result value="FAILED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
          <result value="PASSED"/>
        </results>
        <results tags="v5&amp;ool_epoll=3&amp;(ool_spin|tiny_spin)&amp;bond4" key="ON-13151">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="v5&amp;ool_epoll_ctl_fast&amp;ool_epoll=2" key="ON-4410, ON-13205">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
        <results tags="zf_shim" key="ON-13300">
          <result value="FAILED">
            <verdict>Events are reported not in order of receiving data on the related sockets</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="create_many_close_all" type="script">
      <objective>Check that calling epoll_create() in a loop until it fails and then closing all the epoll descriptors works fine.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="create_socket">TRUE</arg>
        <arg name="env"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="create_socket">FALSE</arg>
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="small_maxevents" type="script">
      <objective>Check that when there is much more polled FDs than maxevents value, for every FD event is reported within reasonable time if epoll_wait() is called repeatedly and some events are processed.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="maxevents"/>
        <notes/>
      </iter>
    </test>
  </iter>
</test>
