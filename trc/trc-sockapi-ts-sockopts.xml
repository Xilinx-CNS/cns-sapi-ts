<?xml version="1.0" encoding="UTF-8"?>
<!-- SPDX-License-Identifier: Apache-2.0 -->
<!-- (c) Copyright 2004 - 2022 Xilinx, Inc. All rights reserved. -->
<test name="sockopts" type="package">
  <objective>Socket options</objective>
  <notes/>
  <iter result="PASSED">
    <notes/>
    <test name="default_opts" type="script">
      <objective>Check that default socket options are set according to system wide appropriate values.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RTHDR</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|linux-2.6.32-bpo.5|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IPV6_RTHDR with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|linux-2.6.32-bpo.5|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IPV6_MULTICAST_IF with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_LOOP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|linux-2.6.32-bpo.5|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IPV6_MULTICAST_LOOP with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_HOPS</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|linux-2.6.32-bpo.5|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IPV6_MULTICAST_HOPS with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_ADDRFORM</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|linux-2.6.32-bpo.5|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Both pco_native and pco_iut failed to get option IPV6_ADDRFORM but with different errno ENOTCONN and ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_HOPOPTS</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|linux-2.6.32-bpo.5|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IPV6_HOPOPTS with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_DSTOPTS</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|linux-2.6.32-bpo.5|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IPV6_DSTOPTS with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">UDP_CORK</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option UDP_CORK with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_WINDOW_CLAMP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option TCP_WINDOW_CLAMP with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_WINDOW_CLAMP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option TCP_WINDOW_CLAMP with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_WINDOW_CLAMP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option TCP_WINDOW_CLAMP with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_SYNCNT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option TCP_SYNCNT with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_SYNCNT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option TCP_SYNCNT with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_SYNCNT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option TCP_SYNCNT with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_QUICKACK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="75078">
          <result value="FAILED">
            <verdict>Socket option SOL_TCP, TCP_QUICKACK is not equal to default</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_QUICKACK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="75078">
          <result value="FAILED">
            <verdict>Socket option SOL_TCP, TCP_QUICKACK is not equal to default</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_QUICKACK</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="75078">
          <result value="FAILED">
            <verdict>Socket option SOL_TCP, TCP_QUICKACK is not equal to default</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_LINGER2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option TCP_LINGER2 with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_LINGER2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option TCP_LINGER2 with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_LINGER2</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option TCP_LINGER2 with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_INFO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5">
          <result value="FAILED">
            <verdict>Socket option SOL_TCP, TCP_INFO is not equal to default</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_INFO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5">
          <result value="FAILED">
            <verdict>Socket option SOL_TCP, TCP_INFO is not equal to default</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_INFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5">
          <result value="FAILED">
            <verdict>Socket option SOL_TCP, TCP_INFO is not equal to default</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_USER_TIMEOUT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;!(linux-2.6.32-5-amd64|linux-2.6.32-bpo.5)" key="ON-2512">
          <result value="FAILED">
            <verdict>Onload socket failed to get option TCP_USER_TIMEOUT with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_USER_TIMEOUT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;!(linux-2.6.32-5-amd64|linux-2.6.32-bpo.5)" key="ON-2512">
          <result value="FAILED">
            <verdict>Onload socket failed to get option TCP_USER_TIMEOUT with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_USER_TIMEOUT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;!(linux-2.6.32-5-amd64|linux-2.6.32-bpo.5)" key="ON-2512">
          <result value="FAILED">
            <verdict>Onload socket failed to get option TCP_USER_TIMEOUT with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVORIGDSTADDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;!(linux-2.6.32-5-amd64|linux-2.6.32-bpo.5)" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_RECVORIGDSTADDR with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_NODEFRAG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(linux-3&gt;=10)" key="ST-1751" notes="ST-1751 is about failures on 3.10 kernel. History keeps silent about why this entry has been added at all.">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_NODEFRAG with errno ENOPROTOOPT</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MULTICAST_TTL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_MULTICAST_TTL with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_TTL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_MULTICAST_TTL with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_MULTICAST_TTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_MULTICAST_TTL with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MULTICAST_LOOP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_MULTICAST_LOOP with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_LOOP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_MULTICAST_LOOP with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_MULTICAST_LOOP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_MULTICAST_LOOP with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_MULTICAST_IF with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_MULTICAST_IF with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_MULTICAST_IF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.32-5-amd64|scalable_passive|scalable_active|socket_cache" notes="Unsupported option">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_MULTICAST_IF with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_ALL</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-9617">
          <result value="FAILED">
            <verdict>Socket option SOL_IP, IP_MULTICAST_ALL is not equal to default</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MULTICAST_ALL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;!(linux-2.6.32-5-amd64|linux-2.6.32-5-686-bigmem|linux-2.6.32-bpo.5|linux-3.2.0|linux-3.16.0-0.bpo.4)" key="ON-3403">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_MULTICAST_ALL with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_ALL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;!(linux-2.6.32-5-amd64|linux-2.6.32-5-686-bigmem|linux-2.6.32-bpo.5|linux-3.2.0|linux-3.16.0-0.bpo.4)" key="ON-3403">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_MULTICAST_ALL with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_MULTICAST_ALL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;!(linux-2.6.32-5-amd64|linux-2.6.32-5-686-bigmem|linux-2.6.32-bpo.5|linux-3.2.0|linux-3.16.0-0.bpo.4)" key="ON-3403">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_MULTICAST_ALL with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_HDRINCL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_HDRINCL with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_FREEBIND</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;!(linux-2.6.32-5-amd64|linux-2.6.32-bpo.5)" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_FREEBIND with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_OPTIONS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option IP_OPTIONS with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_PASSCRED</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option SO_PASSCRED with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_MARK</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option SO_MARK with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_DOMAIN</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option SO_DOMAIN with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_BSDCOMPAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>Onload socket failed to get option SO_BSDCOMPAT with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>Socket option SOL_SOCKET, SO_RCVLOWAT is not equal to default</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-25">
          <result value="FAILED">
            <verdict>Onload socket failed to get option SO_DONTROUTE with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_REUSEPORT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux-2.6.26-2|linux-2.6.18|linux-2.6.24|linux-2.6.32-bpo.5|linux-2.6.32-5|linux-3.2.0-0" key="ON-3968">
          <result value="FAILED">
            <verdict>Native socket failed to get option SO_REUSEPORT, but Onload socket had success</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">UDP_CORK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_ALL</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">UDP_CORK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_LOOP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_TTL</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_USER_TIMEOUT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_INFO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_LINGER2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_QUICKACK</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_SYNCNT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_WINDOW_CLAMP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_DSTOPTS</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_HOPOPTS</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_ADDRFORM</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_HOPS</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_LOOP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RTHDR</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">UDP_CORK</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_BINDTODEVICE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_PRIORITY</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_SNDLOWAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_TYPE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_ERROR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_TIMESTAMP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_TIMESTAMPNS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_TIMESTAMPING</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_PROTOCOL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_RCVBUFFORCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_SNDBUFFORCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_PKTOPTIONS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MTU_DISCOVER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_ADD_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_DROP_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MTU</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_PKTINFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVERR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVTOS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVTTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RETOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_ROUTER_ALERT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_TOS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_TRANSPARENT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_TTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_ADD_SOURCE_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_DROP_SOURCE_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_BLOCK_SOURCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_UNBLOCK_SOURCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_DEFER_ACCEPT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_CORK</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPCNT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPIDLE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPINTVL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_MAXSEG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_NODELAY</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RECVHOPLIMIT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_NEXTHOP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_V6ONLY</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_ROUTER_ALERT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_AUTHHDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_CHECKSUM</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RECVPKTINFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_UNICAST_HOPS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_ADD_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_DROP_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MTU</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MTU_DISCOVER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_FLOWINFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RECVERR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_HOPLIMIT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
    </test>

    <test name="set_supported" type="script">
      <objective>Check that setsockopt() of the option level/name is supported in expected way for specified type of socket. Do not explore option semantic.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_HOPLIMIT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_HOPLIMIT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_FLOWINFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_FLOWINFO) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RTHDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_RTHDR) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_MULTICAST_IF) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MTU</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_MTU) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_DROP_MEMBERSHIP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_DROP_MEMBERSHIP) unexpectedly failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
        <results tags="linux-3&gt;8">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_DROP_MEMBERSHIP) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_DROP_MEMBERSHIP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_DROP_MEMBERSHIP) unexpectedly failed with errno EPROTO</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_ADD_MEMBERSHIP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_ADD_MEMBERSHIP) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_ADD_MEMBERSHIP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_ADD_MEMBERSHIP) unexpectedly failed with errno EPROTO</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_LOOP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_MULTICAST_LOOP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_HOPS</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_MULTICAST_HOPS) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_CHECKSUM</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_CHECKSUM) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_AUTHHDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_AUTHHDR) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_ADDRFORM</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_ADDRFORM) unexpectedly failed with errno ENOTCONN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_ROUTER_ALERT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_ROUTER_ALERT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_NEXTHOP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_NEXTHOP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_HOPOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_HOPOPTS) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_DSTOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IPV6, IPV6_DSTOPTS) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">UDP_CORK</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_UDP, UDP_CORK) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">UDP_CORK</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_UDP, UDP_CORK) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">UDP_CORK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_UDP, UDP_CORK) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">UDP_CORK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_UDP, UDP_CORK) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_WINDOW_CLAMP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_WINDOW_CLAMP) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_WINDOW_CLAMP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_WINDOW_CLAMP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_WINDOW_CLAMP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_WINDOW_CLAMP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_WINDOW_CLAMP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_WINDOW_CLAMP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_SYNCNT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_SYNCNT) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_SYNCNT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_SYNCNT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_SYNCNT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_SYNCNT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_SYNCNT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_SYNCNT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_QUICKACK</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_QUICKACK) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_QUICKACK</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_QUICKACK) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_NODELAY</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_NODELAY) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_NODELAY</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_NODELAY) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_MAXSEG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_MAXSEG) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_MAXSEG</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_MAXSEG) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_LINGER2</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_LINGER2) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_LINGER2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_LINGER2) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_LINGER2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_LINGER2) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_LINGER2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_LINGER2) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_KEEPINTVL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_KEEPINTVL) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPINTVL</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_KEEPINTVL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_KEEPIDLE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_KEEPIDLE) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPIDLE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_KEEPIDLE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_KEEPCNT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_KEEPCNT) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPCNT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_KEEPCNT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_INFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_INFO) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_INFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_INFO) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_INFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_INFO) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_CORK</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_CORK) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_CORK</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_CORK) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_USER_TIMEOUT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_USER_TIMEOUT) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_USER_TIMEOUT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_USER_TIMEOUT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_USER_TIMEOUT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-2512">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_USER_TIMEOUT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_USER_TIMEOUT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-2512">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_USER_TIMEOUT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">TCP_DEFER_ACCEPT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_DEFER_ACCEPT) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_DEFER_ACCEPT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_TCP, TCP_DEFER_ACCEPT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_UNBLOCK_SOURCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_UNBLOCK_SOURCE) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_UNBLOCK_SOURCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_UNBLOCK_SOURCE) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_UNBLOCK_SOURCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_UNBLOCK_SOURCE) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_BLOCK_SOURCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_BLOCK_SOURCE) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_BLOCK_SOURCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_BLOCK_SOURCE) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_BLOCK_SOURCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_BLOCK_SOURCE) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_DROP_SOURCE_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_DROP_SOURCE_MEMBERSHIP) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_DROP_SOURCE_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_DROP_SOURCE_MEMBERSHIP) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_DROP_SOURCE_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_DROP_SOURCE_MEMBERSHIP) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_ADD_SOURCE_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_ADD_SOURCE_MEMBERSHIP) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_ADD_SOURCE_MEMBERSHIP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_ADD_SOURCE_MEMBERSHIP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_ADD_SOURCE_MEMBERSHIP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_ADD_SOURCE_MEMBERSHIP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_TTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_TTL) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_TRANSPARENT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_TRANSPARENT) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_TOS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_TOS) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_ROUTER_ALERT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_ROUTER_ALERT) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_ROUTER_ALERT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_ROUTER_ALERT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_ROUTER_ALERT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_ROUTER_ALERT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_RETOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_RETOPTS) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_RECVTTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_RECVTTL) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_RECVTOS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_RECVTOS) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_RECVORIGDSTADDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_RECVORIGDSTADDR) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_RECVORIGDSTADDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_RECVORIGDSTADDR) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVORIGDSTADDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_RECVORIGDSTADDR) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_RECVOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_RECVOPTS) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_RECVERR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_RECVERR) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_PKTINFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_PKTINFO) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_NODEFRAG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_NODEFRAG) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_NODEFRAG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_NODEFRAG) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_NODEFRAG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_NODEFRAG) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_MULTICAST_TTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MULTICAST_TTL) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MULTICAST_TTL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MULTICAST_TTL) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_TTL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MULTICAST_TTL) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_MULTICAST_LOOP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MULTICAST_LOOP) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_MULTICAST_IF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MULTICAST_IF) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MULTICAST_IF) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MULTICAST_IF) unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_MULTICAST_ALL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MULTICAST_ALL) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MULTICAST_ALL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux&amp;v5">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MULTICAST_ALL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_ALL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux&amp;v5">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MULTICAST_ALL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_MTU</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MTU) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MTU</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MTU) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MTU</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MTU) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_HDRINCL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_HDRINCL) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_HDRINCL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_HDRINCL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_HDRINCL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_HDRINCL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_FREEBIND</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_FREEBIND) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_FREEBIND</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_FREEBIND) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_FREEBIND</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_FREEBIND) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_DROP_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_DROP_MEMBERSHIP) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_DROP_MEMBERSHIP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_DROP_MEMBERSHIP) unexpectedly failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_DROP_MEMBERSHIP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_DROP_MEMBERSHIP) unexpectedly failed with errno EPROTO</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_DROP_MEMBERSHIP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_DROP_MEMBERSHIP) unexpectedly failed with errno EPROTO</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_ADD_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_ADD_MEMBERSHIP) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_ADD_MEMBERSHIP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_ADD_MEMBERSHIP) unexpectedly failed with errno EPROTO</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_ADD_MEMBERSHIP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_ADD_MEMBERSHIP) unexpectedly failed with errno EPROTO</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_MTU_DISCOVER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_MTU_DISCOVER) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_PKTOPTIONS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_PKTOPTIONS) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_PKTOPTIONS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_PKTOPTIONS) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_PKTOPTIONS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_PKTOPTIONS) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">IP_OPTIONS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_OPTIONS) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_OPTIONS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_OPTIONS) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_OPTIONS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>setsockopt(SOL_IP, IP_OPTIONS) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_SNDBUFFORCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDBUFFORCE) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_RCVBUFFORCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_RCVBUFFORCE) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_PROTOCOL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_PROTOCOL) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_PROTOCOL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_PROTOCOL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_PROTOCOL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_PROTOCOL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_PASSCRED</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_PASSCRED) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_PASSCRED</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_PASSCRED) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_PASSCRED</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_PASSCRED) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_MARK</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_MARK) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_MARK</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_MARK) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_MARK</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_MARK) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_DOMAIN</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_DOMAIN) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_DOMAIN</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_DOMAIN) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_DOMAIN</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_DOMAIN) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_BSDCOMPAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_BSDCOMPAT) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_BSDCOMPAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_BSDCOMPAT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_BSDCOMPAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_BSDCOMPAT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_TIMESTAMPING</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_TIMESTAMPING) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_TIMESTAMPNS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_TIMESTAMPNS) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_TIMESTAMP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_TIMESTAMP) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_OOBINLINE) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_LINGER) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_KEEPALIVE) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_ACCEPTCONN) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_ACCEPTCONN) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_ACCEPTCONN) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_ERROR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_ERROR) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_ERROR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_ERROR) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_ERROR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_ERROR) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_TYPE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_TYPE) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_TYPE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_TYPE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_TYPE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_TYPE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDTIMEO) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_RCVTIMEO) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_SNDLOWAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDLOWAT) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_SNDLOWAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDLOWAT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_SNDLOWAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDLOWAT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_RCVLOWAT) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_PRIORITY</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_PRIORITY) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_RCVBUF) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDBUF) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_BROADCAST) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_DONTROUTE) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-25" notes="SO_DONTROUTE is not supported in V5.">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_DONTROUTE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-25" notes="SO_DONTROUTE is not supported in V5.">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_DONTROUTE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_REUSEPORT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux" key="ON-3968">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_REUSEPORT) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_REUSEPORT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="!el&amp;(linux-3&lt;10|linux-2)" key="ON-3968">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_REUSEPORT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_REUSEPORT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="!el&amp;(linux-3&lt;10|linux-2)" key="ON-3968">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_REUSEPORT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_REUSEADDR) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_DEBUG) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name">SO_BINDTODEVICE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_BINDTODEVICE) unexpectedly failed with errno ENOTSOCK</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_DEFER_ACCEPT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_CORK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_KEEPCNT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_KEEPIDLE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_KEEPINTVL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_MAXSEG</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_NODELAY</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_QUICKACK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_DEFER_ACCEPT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_CORK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPCNT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPIDLE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPINTVL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_MAXSEG</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_NODELAY</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_QUICKACK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_BINDTODEVICE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_PRIORITY</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_TIMESTAMP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_TIMESTAMPNS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_TIMESTAMPING</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_RCVBUFFORCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_SNDBUFFORCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MTU_DISCOVER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MULTICAST_LOOP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_PKTINFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_RECVERR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_RECVOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_RECVTOS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_RECVTTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_RETOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_TOS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_TRANSPARENT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_TTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_ADD_MEMBERSHIP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_ALL</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_TTL</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_ADD_SOURCE_MEMBERSHIP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_HOPS</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_LOOP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MTU</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_BINDTODEVICE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_PRIORITY</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_TIMESTAMP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_TIMESTAMPNS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_TIMESTAMPING</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_RCVBUFFORCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_SNDBUFFORCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MTU_DISCOVER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_LOOP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_PKTINFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVERR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVTOS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVTTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RETOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_TOS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_TRANSPARENT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_TTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RECVHOPLIMIT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_V6ONLY</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RECVPKTINFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_UNICAST_HOPS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MTU_DISCOVER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RECVERR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
    </test>
    <test name="inherited_option" type="script">
      <objective>Checking that socket options set on socket are inherited by socket after some operations on it.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_BINDTODEVICE</arg>
        <arg name="env"/>
        <arg name="how"/>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux-2&lt;48&amp;!v5" notes="Before Linux 3.8 option SO_BINDTODEVICE cannot be retrieved with getsockopt.">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_BINDTODEVICE) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_OPTIONS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_OPTIONS) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_OPTIONS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_OPTIONS) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DEBUG</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_KEEPALIVE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_OOBINLINE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_NODELAY</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_CORK</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TOS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TTL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDBUF</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_LINGER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DEBUG</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_KEEPALIVE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_OOBINLINE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_NODELAY</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_CORK</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TOS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TTL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDBUF</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_LINGER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DONTLINGER</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_DONTFRAGMENT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_DONTFRAGMENT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_DONTFRAGMENT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_DONTFRAGMENT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DONTLINGER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DONTLINGER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DONTLINGER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DONTLINGER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_DONTFRAGMENT</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_DONTFRAGMENT</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_DONTFRAGMENT</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DONTLINGER</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DONTLINGER</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_DONTFRAGMENT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_OPTIONS</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>IP_OPTIONS option value is not inherited on 'listen_accept' transition</verdict>
          </result>
        </results>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_OPTIONS) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_OPTIONS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_OPTIONS) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_OPTIONS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_OPTIONS) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_OPTIONS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_OPTIONS) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDTIMEO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDTIMEO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDTIMEO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDTIMEO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDTIMEO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVTIMEO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVTIMEO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVTIMEO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVTIMEO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVTIMEO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux&amp;v5&amp;!(ool_loop=0)" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux&amp;v5&amp;!(ool_loop=0)" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="(linux)&amp;v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux&amp;v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="(linux)&amp;v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux&amp;v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TTL</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TOS</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_CORK</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_NODELAY</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_NODELAY</arg>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DEBUG</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_KEEPALIVE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_OOBINLINE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_NODELAY</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_CORK</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TOS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TTL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDBUF</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_LINGER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DEBUG</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DEBUG</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_KEEPALIVE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_KEEPALIVE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_OOBINLINE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_OOBINLINE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_NODELAY</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_NODELAY</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_CORK</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_CORK</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TOS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TOS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TTL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TTL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDBUF</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDBUF</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_LINGER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_LINGER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_DONTFRAGMENT</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_DONTFRAGMENT</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_DONTFRAGMENT</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DONTLINGER</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DONTLINGER</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DONTLINGER</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DONTLINGER</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTTL</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTTL</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTTL</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTTL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTTL</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTTL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTTL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTTL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTTL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTOS</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTOS</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTOS</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTOS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTOS</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTOS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTOS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTOS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVTOS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVOPTS</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVOPTS</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVOPTS</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVOPTS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVOPTS</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVOPTS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVOPTS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVOPTS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVOPTS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVERR</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVERR</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVERR</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVERR</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVERR</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVERR</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVERR</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVERR</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_RECVERR</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_PKTINFO</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_PKTINFO</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_PKTINFO</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_PKTINFO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_PKTINFO</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_PKTINFO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_PKTINFO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_PKTINFO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_PKTINFO</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_OPTIONS</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_OPTIONS) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_OPTIONS</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_OPTIONS) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_OPTIONS</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_OPTIONS) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDTIMEO</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDTIMEO</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDTIMEO</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDTIMEO</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVTIMEO</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVTIMEO</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVTIMEO</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVTIMEO</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_LINGER</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_LINGER</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_USER_TIMEOUT</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-2512">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_USER_TIMEOUT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_USER_TIMEOUT</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-2512">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_USER_TIMEOUT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_USER_TIMEOUT</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-2512">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_USER_TIMEOUT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_USER_TIMEOUT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-2512">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_USER_TIMEOUT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_USER_TIMEOUT</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-2512">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_USER_TIMEOUT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_USER_TIMEOUT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-2512">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_USER_TIMEOUT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_USER_TIMEOUT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-2512">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_USER_TIMEOUT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_USER_TIMEOUT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-2512">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_USER_TIMEOUT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_USER_TIMEOUT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-2512">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_USER_TIMEOUT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPCNT</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPCNT</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPCNT</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPCNT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPCNT</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPCNT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPCNT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPCNT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPCNT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPINTVL</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPINTVL</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPINTVL</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPINTVL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPINTVL</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPINTVL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPINTVL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPINTVL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPINTVL</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPIDLE</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPIDLE</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPIDLE</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPIDLE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPIDLE</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPIDLE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPIDLE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPIDLE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_KEEPIDLE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDLOWAT</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux" notes="Linux does not support set of SO_SNDLOWAT option value.">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDLOWAT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDLOWAT</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux" notes="Linux does not support set of SO_SNDLOWAT option value.">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDLOWAT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDLOWAT</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux" notes="Linux does not support set of SO_SNDLOWAT option value.">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDLOWAT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDLOWAT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux" notes="Linux does not support set of SO_SNDLOWAT option value.">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDLOWAT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDLOWAT</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux" notes="Linux does not support set of SO_SNDLOWAT option value.">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDLOWAT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDLOWAT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux" notes="Linux does not support set of SO_SNDLOWAT option value.">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDLOWAT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDLOWAT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux" notes="Linux does not support set of SO_SNDLOWAT option value.">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDLOWAT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDLOWAT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux" notes="Linux does not support set of SO_SNDLOWAT option value.">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDLOWAT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDLOWAT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux" notes="Linux does not support set of SO_SNDLOWAT option value.">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_SNDLOWAT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVLOWAT</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVLOWAT</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVLOWAT</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVLOWAT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVLOWAT</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVLOWAT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVLOWAT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVLOWAT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVLOWAT</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDBUF</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDBUF</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="(linux)&amp;v5" key="ON-8112">
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="(linux)&amp;v5" key="ON-8112">
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="(linux)&amp;v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="(linux)&amp;v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TTL</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TTL</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TOS</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TOS</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_MTU_DISCOVER</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_MTU_DISCOVER</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_MTU_DISCOVER</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_MTU_DISCOVER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_MTU_DISCOVER</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_MTU_DISCOVER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_MTU_DISCOVER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_MTU_DISCOVER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_MTU_DISCOVER</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_CORK</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_CORK</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_CORK</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_NODELAY</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_NODELAY</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_NODELAY</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_NODELAY</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMP</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPNS</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPING</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPING</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DEBUG</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_KEEPALIVE</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_OOBINLINE</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMP</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMP</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPNS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPNS</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPING</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPING</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDBUF</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_LINGER</arg>
        <arg name="env"/>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMP</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMP</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMP</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMP</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPNS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPNS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPNS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPNS</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPING</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPING</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPING</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPING</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DEBUG</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_KEEPALIVE</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_OOBINLINE</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMP</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPNS</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPING</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">TCP_NODELAY</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TOS</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">IP_TTL</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUF</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDBUF</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_LINGER</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DEBUG</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_KEEPALIVE</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_OOBINLINE</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMP</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_TIMESTAMPNS</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_DEBUG</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_KEEPALIVE</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_OOBINLINE</arg>
        <arg name="env"/>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_SNDBUFFORCE</arg>
        <arg name="env"/>
        <arg name="how"/>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rdwr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_wr</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux&amp;v5&amp;!(ool_loop=0)" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux&amp;v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux&amp;v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux&amp;v5&amp;!(ool_loop=0)" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="how">listen_accept</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux&amp;v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="how">listen_shutdown_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux&amp;v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_rd</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env"/>
        <arg name="how">listen_shutdown_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux&amp;v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="how">connect_failed_listen</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="linux&amp;v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="how">connect_failed_connect</arg>
        <arg name="listen_before"/>
        <notes/>
        <results tags="v5" key="ON-1170">
          <result value="FAILED">
            <verdict>SO_RCVBUF changes in accordance with SF specific feature</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="accept_before"/>
        <arg name="checkopt">SO_RCVBUFFORCE</arg>
        <arg name="env"/>
        <arg name="how">connect_another_listen</arg>
        <arg name="listen_before"/>
        <notes/>
      </iter>
    </test>
    <test name="acceptconn" type="script">
      <objective>Check that SO_ACCEPTCONN socket option is read-only, and it is enabled only on listening sockets.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
    </test>
    <test name="bindtodevice_dgram" type="script">
      <objective>Check that if a socket is bound to an interface with SO_BINDTODEVICE socket option, only packets received from that particular interface are processed by the socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="bindtodevice_vlan" type="script">
      <objective>Check that if a socket is bound to a VLAN, MACVLAN or IPVLAN interface with SO_BINDTODEVICE socket option, only packets received from that particular interface are processed by the socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="vlan1"/>
        <arg name="vlan2"/>
        <arg name="if_type">vlan</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="vlan1"/>
        <arg name="vlan2"/>
        <arg name="if_type">macvlan</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
        <results tags="v5" key="ON-8037">
          <result value="FAILED">
            <verdict>IUT socket receives data from the first Tester address but it is expected to receive from the second Tester address</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first check: 'iut_s' socket remained readable after processing expected data or connection</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="vlan1"/>
        <arg name="vlan2"/>
        <arg name="if_type">macvlan</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" key="ON-8037">
          <result value="FAILED">
            <verdict>IUT socket accepted connection from the first Tester address but it is expected to accept it from the second Tester address</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first check: 'iut_s' socket remained readable after processing expected data or connection</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="vlan1"/>
        <arg name="vlan2"/>
        <arg name="if_type">ipvlan</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
        <results tags="v5" key="ON-8037">
          <result value="FAILED">
            <verdict>IUT socket receives data from the first Tester address but it is expected to receive from the second Tester address</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first check: 'iut_s' socket remained readable after processing expected data or connection</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="vlan1"/>
        <arg name="vlan2"/>
        <arg name="if_type">ipvlan</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" key="ON-8037">
          <result value="FAILED">
            <verdict>IUT socket accepted connection from the first Tester address but it is expected to accept it from the second Tester address</verdict>
          </result>
          <result value="FAILED">
            <verdict>The first check: 'iut_s' socket remained readable after processing expected data or connection</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="bindtodevice_mtu" type="script">
      <objective>Check that changing of mtu correctly handles when setsockopt(SO_BINDTODEVICE) was called on socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="packet_len">7000</arg>
        <arg name="packet_num"/>
        <notes/>
        <results tags="linux-2.6&lt;46&amp;!v5">
          <result value="PASSED">
            <verdict>First packet was dropped in second sending</verdict>
          </result>
        </results>
        <results tags="v5">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>First packet was dropped in second sending</verdict>
          </result>
          <result value="PASSED">
            <verdict>First packet was dropped in first sending</verdict>
            <verdict>First packet was dropped in second sending</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="packet_len">1400</arg>
        <arg name="packet_num"/>
        <notes/>
        <results tags="v5">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>First packet was dropped in second sending</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="packet_len">2000</arg>
        <arg name="packet_num"/>
        <notes/>
        <results tags="v5">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>First packet was dropped in second sending</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="bindtodevice_stream" type="script">
      <objective>Check that only packets received from particular interface will be processed if a socket is bound to an interface with  SO_BINDTODEVICE socket option.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="bind_to_lo">TRUE</arg>
        <arg name="connect_to_lo">FALSE</arg>
        <arg name="env">'net1':IUT{'iut_host'{{'pco_iut':IUT},{'pco_tst1':IUT},addr:'iut_addr1':inet:unicast,if:'iut_if1'}},'net2':IUT{'iut_host'{addr:'iut_addr2':inet:unicast,if:'iut_if2'},{{'pco_tst2':tester}}}</arg>
        <notes/>
        <results tags="linux" key="OL 5438">
          <result value="PASSED">
            <verdict>Accepted two connections from different interfaces after binding listener to the single interface</verdict>
          </result>
        </results>
        <results tags="linux&lt;4|linux-4&lt;15" key="ST-1080" notes="Linux changed its behavior in 4.14">
          <result value="FAILED">
            <verdict>Accepted two connections from different interfaces after binding listener to the single interface</verdict>
            <verdict>Tester 1 connection: trying connect through network interface that is not serviced by server returns 0, instead of -1</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to_lo">FALSE</arg>
        <arg name="connect_to_lo">FALSE</arg>
        <arg name="env">'net1':IUT{'iut_host'{{'pco_iut':IUT},{'pco_tst1':IUT},addr:'iut_addr1':inet:unicast,if:'iut_if1'}},'net2':IUT{'iut_host'{addr:'iut_addr2':inet:unicast,if:'iut_if2'},{{'pco_tst2':tester}}}</arg>
        <notes/>
        <results tags="linux" key="OL 5438">
          <result value="PASSED">
            <verdict>Accepted two connections from different interfaces after binding listener to the single interface</verdict>
          </result>
        </results>
        <results tags="linux&lt;4|linux-4&lt;15" key="ST-1080" notes="Linux changed its behavior in 4.14">
          <result value="FAILED">
            <verdict>Accepted two connections from different interfaces after binding listener to the single interface</verdict>
            <verdict>Tester 1 connection: connection establishment failed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to_lo">FALSE</arg>
        <arg name="connect_to_lo">TRUE</arg>
        <arg name="env">'net1':IUT{'iut_host'{{'pco_iut':IUT},{'pco_tst1':IUT},addr:'iut_addr1':inet:unicast,if:'iut_if1'}},'net2':IUT{'iut_host'{addr:'iut_addr2':inet:unicast,if:'iut_if2'},{{'pco_tst2':tester}}}</arg>
        <notes/>
        <results tags="linux" key="OL 5438">
          <result value="PASSED">
            <verdict>Accepted two connections from different interfaces after binding listener to the single interface</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to_lo">TRUE</arg>
        <arg name="connect_to_lo">TRUE</arg>
        <arg name="env">'net1':IUT{'iut_host'{{'pco_iut':IUT},{'pco_tst1':IUT},addr:'iut_addr1':inet:unicast,if:'iut_if1'}},'net2':IUT{'iut_host'{addr:'iut_addr2':inet:unicast,if:'iut_if2'},{{'pco_tst2':tester}}}</arg>
        <notes/>
        <results tags="linux" key="OL 5438">
          <result value="PASSED">
            <verdict>Accepted two connections from different interfaces after binding listener to the single interface</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to_lo"/>
        <arg name="connect_to_lo"/>
        <arg name="env">'net1':IUT{'iut_host'{{'pco_iut':IUT},{'pco_tst1':IUT},addr:'iut_addr1':inet6:unicast,if:'iut_if1'}},'net2':IUT{'iut_host'{addr:'iut_addr2':inet6:unicast,if:'iut_if2'},{{'pco_tst2':tester}}}</arg>
        <notes/>
        <results tags="linux" key="OL 5438">
          <result value="PASSED">
            <verdict>Accepted two connections from different interfaces after binding listener to the single interface</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to_lo"/>
        <arg name="connect_to_lo"/>
        <arg name="env">VAR.env.two_nets.iut_first</arg>
        <notes/>
        <results tags="linux" key="OL 5438">
          <result value="PASSED">
            <verdict>Accepted two connections from different interfaces after binding listener to the single interface</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to_lo"/>
        <arg name="connect_to_lo"/>
        <arg name="env">VAR.env.two_nets.iut_first_ipv6</arg>
        <notes/>
        <results tags="linux" key="OL 5438">
          <result value="PASSED">
            <verdict>Accepted two connections from different interfaces after binding listener to the single interface</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to_lo"/>
        <arg name="connect_to_lo"/>
        <arg name="env">VAR.env.two_nets.iut_second</arg>
        <notes/>
        <results tags="linux" key="OL 5438">
          <result value="PASSED">
            <verdict>Accepted two connections from different interfaces after binding listener to the single interface</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to_lo"/>
        <arg name="connect_to_lo"/>
        <arg name="env">VAR.env.two_nets.iut_second_ipv6</arg>
        <notes/>
        <results tags="linux" key="OL 5438">
          <result value="PASSED">
            <verdict>Accepted two connections from different interfaces after binding listener to the single interface</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="bindtodevice_dstunreach" type="script">
      <objective>Check that receiver side sends ICMP destination unreachable message if receiving socket is bound to an another interface with SO_BINDTODEVICE socket option.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="create_if">FALSE</arg>
        <arg name="env">'net1':IUT{'iut_host'{{'pco_iut':IUT},addr:'iut_addr1':inet:unicast,addr:'alien_addr':inet:alien,addr:'alien_gw':inet:alien,if:'iut_if1',addr:'iut_if1_hwaddr':ether:unicast},'tst_host'{{'pco_tst1':tester},addr:'tst1_addr':inet:unicast,if:'tst1_if',addr:'tst1_hwaddr':ether:unicast}},'net1a':IUT{'iut_host'{addr:'iut_addr2':inet:unicast,if:'iut_if2',addr:'iut_if2_hwaddr':ether:unicast},'tst_host'{{'pco_tst2':tester},addr:'tst2_addr':inet:unicast,if:'tst2_if',addr:'tst2_hwaddr':ether:unicast}}</arg>
        <notes/>
        <results tags="v5" key="ON-2422, ON-8512">
          <result value="FAILED">
            <verdict>No data was returned</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="create_if">FALSE</arg>
        <arg name="env">'net1':IUT{'iut_host'{{'pco_iut':IUT},addr:'iut_addr1':inet6:unicast,addr:'alien_addr':inet6:alien,addr:'alien_gw':inet6:alien,if:'iut_if1',addr:'iut_if1_hwaddr':ether:unicast},'tst_host'{{'pco_tst1':tester},addr:'tst1_addr':inet6:unicast,if:'tst1_if',addr:'tst1_hwaddr':ether:unicast}},'net1a':IUT{'iut_host'{addr:'iut_addr2':inet6:unicast,if:'iut_if2',addr:'iut_if2_hwaddr':ether:unicast},'tst_host'{{'pco_tst2':tester},addr:'tst2_addr':inet6:unicast,if:'tst2_if',addr:'tst2_hwaddr':ether:unicast}}</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to_if"/>
        <arg name="create_if">TRUE</arg>
        <arg name="if_type">vlan</arg>
        <arg name="env"/>
        <arg name="vlan_id"/>
        <notes/>
        <results tags="v5" key="ON-2422, ON-8512">
          <result value="FAILED">
            <verdict>No data was returned</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to_if"/>
        <arg name="create_if">TRUE</arg>
        <arg name="if_type">macvlan</arg>
        <arg name="env"/>
        <arg name="vlan_id"/>
        <notes/>
        <results tags="v5" key="ON-8037">
          <result value="FAILED">
            <verdict>recvmsg() unexpectedly failed with errno RPC-EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="bind_to_if"/>
        <arg name="create_if">TRUE</arg>
        <arg name="if_type">ipvlan</arg>
        <arg name="env"/>
        <arg name="vlan_id"/>
        <notes/>
        <results tags="v5" key="ON-8037">
          <result value="FAILED">
            <verdict>recvmsg() unexpectedly failed with errno RPC-EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="create_if">FALSE</arg>
        <arg name="env">VAR.env.two_nets.iut_second</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="create_if">FALSE</arg>
        <arg name="env">VAR.env.two_nets.iut_first</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="create_if">FALSE</arg>
        <arg name="env">VAR.env.two_nets.iut_second_ipv6</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="create_if">FALSE</arg>
        <arg name="env">VAR.env.two_nets.iut_first_ipv6</arg>
        <notes/>
      </iter>
    </test>
    <test name="bindtodevice_send" type="script">
      <objective>Check that data will not arrive at the destination host if the route to this host is over an interface different from the interface to which a sending socket is bound.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="direct_route"/>
        <arg name="env">'net1':IUT{'iut_host'{{'pco_iut':IUT},addr:'iut1_addr':inet6:unicast,if:'iut1_if'},'tst1_host'{{'pco_tst':tester},addr:'gw_addr':inet6:unicast,if:'tst1_if'}},'net2':tester{'iut_host'{addr:'iut2_addr':inet6:unicast,if:'iut2_if'},'tst2_host'{{'pco_tst2':tester},addr:'tst2_addr':inet6:unicast,addr:'dst_addr':inet6:alien,if:'tst2_if'}},'pco_tst1'='pco_tst'</arg>
        <notes/>
        <results tags="linux" notes="On IPv6 binding socket to an interface is not enough, there should be a route to destination over that interface">
          <result value="FAILED">
            <verdict>send() failed unexpectedly with errno RPC-ENETUNREACH</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="direct_route"/>
        <arg name="env">'net1':tester{'iut_host'{{'pco_iut':IUT},addr:'iut1_addr':inet6:unicast,if:'iut1_if'},'tst1_host'{{'pco_tst':tester},addr:'gw_addr':inet6:unicast,if:'tst1_if'}},'net2':IUT{'iut_host'{addr:'iut2_addr':inet6:unicast,if:'iut2_if'},'tst2_host'{{'pco_tst2':tester},addr:'tst2_addr':inet6:unicast,addr:'dst_addr':inet6:alien,if:'tst2_if'}},'pco_tst1'='pco_tst'</arg>
        <notes/>
        <results tags="linux" notes="On IPv6 binding socket to an interface is not enough, there should be a route to destination over that interface">
          <result value="FAILED">
            <verdict>send() failed unexpectedly with errno RPC-ENETUNREACH</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="direct_route"/>
        <arg name="env">'net1':IUT{'iut_host'{{'pco_iut':IUT},addr:'iut1_addr':inet:unicast,if:'iut1_if'},'tst1_host'{{'pco_tst':tester},addr:'gw_addr':inet:unicast,if:'tst1_if'}},'net2':tester{'iut_host'{addr:'iut2_addr':inet:unicast,if:'iut2_if'},'tst2_host'{{'pco_tst2':tester},addr:'tst2_addr':inet:unicast,addr:'dst_addr':inet:fake,if:'tst2_if'}},'pco_tst1'='pco_tst'</arg>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>Datagram is sent directly to the interface specified in SO_BINDTODEVICE option value in despite of routing table</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="direct_route"/>
        <arg name="env">'net1':IUT{'iut_host'{{'pco_iut':IUT},addr:'iut1_addr':inet:unicast,if:'iut1_if'},'tst1_host'{{'pco_tst':tester},addr:'gw_addr':inet:unicast,if:'tst1_if'}},'net2':tester{'iut_host'{addr:'iut2_addr':inet:unicast,if:'iut2_if'},'tst2_host'{{'pco_tst2':tester},addr:'tst2_addr':inet:unicast,addr:'dst_addr':inet:alien,if:'tst2_if'}},'pco_tst1'='pco_tst'</arg>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>Datagram is sent directly to the interface specified in SO_BINDTODEVICE option value in despite of routing table</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="direct_route"/>
        <arg name="env">'net1':tester{'iut_host'{{'pco_iut':IUT},addr:'iut1_addr':inet:unicast,if:'iut1_if'},'tst1_host'{{'pco_tst':tester},addr:'gw_addr':inet:unicast,if:'tst1_if'}},'net2':IUT{'iut_host'{addr:'iut2_addr':inet:unicast,if:'iut2_if'},'tst2_host'{{'pco_tst2':tester},addr:'tst2_addr':inet:unicast,addr:'dst_addr':inet:fake,if:'tst2_if'}},'pco_tst1'='pco_tst'</arg>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>Datagram is sent directly to the interface specified in SO_BINDTODEVICE option value in despite of routing table</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="direct_route"/>
        <arg name="env">'net1':tester{'iut_host'{{'pco_iut':IUT},addr:'iut1_addr':inet:unicast,if:'iut1_if'},'tst1_host'{{'pco_tst':tester},addr:'gw_addr':inet:unicast,if:'tst1_if'}},'net2':IUT{'iut_host'{addr:'iut2_addr':inet:unicast,if:'iut2_if'},'tst2_host'{{'pco_tst2':tester},addr:'tst2_addr':inet:unicast,addr:'dst_addr':inet:alien,if:'tst2_if'}},'pco_tst1'='pco_tst'</arg>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>Datagram is sent directly to the interface specified in SO_BINDTODEVICE option value in despite of routing table</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="direct_route"/>
        <arg name="env">'net1':IUT{'iut_host'{{'pco_iut':IUT},addr:'iut1_addr':inet6:unicast,if:'iut1_if'},'tst1_host'{{'pco_tst':tester},addr:'gw_addr':inet6:unicast,if:'tst1_if'}},'net2':tester{'iut_host'{addr:'iut2_addr':inet6:unicast,if:'iut2_if'},'tst2_host'{{'pco_tst2':tester},addr:'tst2_addr':inet6:unicast,addr:'dst_addr':inet6:fake,if:'tst2_if'}},'pco_tst1'='pco_tst'</arg>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>Datagram is sent directly to the interface specified in SO_BINDTODEVICE option value in despite of routing table</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="direct_route"/>
        <arg name="env">'net1':tester{'iut_host'{{'pco_iut':IUT},addr:'iut1_addr':inet6:unicast,if:'iut1_if'},'tst1_host'{{'pco_tst':tester},addr:'gw_addr':inet6:unicast,if:'tst1_if'}},'net2':IUT{'iut_host'{addr:'iut2_addr':inet6:unicast,if:'iut2_if'},'tst2_host'{{'pco_tst2':tester},addr:'tst2_addr':inet6:unicast,addr:'dst_addr':inet6:fake,if:'tst2_if'}},'pco_tst1'='pco_tst'</arg>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>Datagram is sent directly to the interface specified in SO_BINDTODEVICE option value in despite of routing table</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="broadcast" type="script">
      <objective>Check that it is allowed to send broadcast messages from connectionless socket only if SO_BROADCAST socket option is enabled on it.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="broadcast_no_fragment" type="script">
      <objective>Check that kernel does't allow to fragment broadcast datagrams.</objective>
      <notes>Linux fragments broadcast datagram.</notes>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>sendto() returns positive number of sending datagram towards broadcast address on socket with MTU less than datagram size, but it is expected to return -1</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="dontroute" type="script">
      <objective>Check that if a SO_DONTROUTE option is switched on for a socket of type SOCK_DGRAM, it is forbidden to send any datagrams via a gateway, but permitted only to directly connected hosts.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
        <results tags="(linux)&amp;v5" key="ON-25" notes="SO_DONTROUTE is not supported in Level5 TOT.">
          <result value="FAILED"/>
        </results>
      </iter>
    </test>
    <test name="error" type="script">
      <objective>Check that SO_ERROR socket option can be used to get the pending errors on the socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="connect">TRUE</arg>
        <arg name="env"/>
        <arg name="ip_recverr">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connect"/>
        <arg name="env"/>
        <arg name="ip_recverr">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connect">FALSE</arg>
        <arg name="env"/>
        <arg name="ip_recverr">FALSE</arg>
        <notes/>
      </iter>
    </test>
    <test name="last_pending_error" type="script">
      <objective>Check that SO_ERROR socket option can be used to get the correct value of pending socket error despite several different ICMP error messages were received from different interfaces.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.two_nets.iut_first</arg>
        <arg name="ip_recverr"/>
        <arg name="num_pkts"/>
        <arg name="tst1_msgs"/>
        <arg name="tst2_msgs"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.two_nets.iut_second</arg>
        <arg name="ip_recverr"/>
        <arg name="num_pkts"/>
        <arg name="tst1_msgs"/>
        <arg name="tst2_msgs"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.two_nets.iut_both</arg>
        <arg name="ip_recverr"/>
        <arg name="num_pkts"/>
        <arg name="tst1_msgs"/>
        <arg name="tst2_msgs"/>
        <notes/>
      </iter>
    </test>
    <test name="keepalive" type="script">
      <objective>Check that when SO_KEEPALIVE option is switched on for a TCP socket, and no data has been exchanged across the socket in either directions for 2 hours TCP automatically sends a keep alive probe to the peer, and if it it is not responding on a set of probes sent in 11 minutes and 15 seconds interval the socket's pending error is set to ETIMEOUT and the socket is closed.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="intv_cor"/>
        <arg name="n_probes"/>
        <notes/>
      </iter>
    </test>
    <test name="keepalive_failed" type="script">
      <objective>Check that select breaks out with read event if keepalive procedure fails on this socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="intv_cor"/>
        <notes/>
      </iter>
    </test>
    <test name="keepalive_enforce" type="script">
      <objective>Check that unsuccessful 'keepalive' probing influences on socket itself. For example, the select() should break out with read event on this socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="check_iomux"/>
        <arg name="env"/>
        <arg name="func"/>
        <arg name="intv_cor"/>
        <notes/>
      </iter>
    </test>
    <test name="linger_listening_close" type="script">
      <objective>Check influence of SO_LINGER socket option set for listening socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="acceptq"/>
        <arg name="env"/>
        <arg name="zero_linger"/>
        <notes/>
      </iter>
    </test>
    <test name="rcv_snd_zero_timeo" type="script">
      <objective>Check that @c SO_RCVTIMEO and  @c SO_SNDTIMEO are correctly updated by zero value.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="domain"/>
        <notes/>
      </iter>
    </test>
    <test name="rcvlowat_stream" type="script">
      <objective>Check that SO_RCVLOWAT option sets the amount of data that must be in the socket receive buffer for select() to return "readable".</objective>
      <notes>poll() does not take into account value of the option on Linux (&lt;=2.6.27) for stream sockets.  New Linux kernels and Onload have correct behaviour.</notes>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">select</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">pselect</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">poll</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">select</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">pselect</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">poll</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">pselect</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">poll</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">select</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux">epoll</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux">epoll</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux">select</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux">pselect</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux">poll</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux">select</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux">pselect</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux">poll</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="n1"/>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">epoll</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux">epoll</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="!v5&amp;(linux-2.6&lt;=27)" key="ON-607">
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux">poll</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="!v5&amp;(linux-2.6&lt;=27)" key="ON-607">
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="!v5&amp;(linux-2.6&lt;=27)" key="ON-607">
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux">select</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="!v5&amp;(linux-2.6&lt;=27)" key="ON-607">
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux">pselect</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="!v5&amp;(linux-2.6&lt;=27)" key="ON-607">
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">select</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">pselect</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">poll</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">select</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">pselect</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">poll</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">pselect</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">poll</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">select</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="iomux">select</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="iomux">pselect</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="iomux">poll</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="n1">0</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="iomux">select</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="iomux">pselect</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="iomux">poll</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="n1">10</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="iomux">epoll</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="iomux">epoll</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="!v5&amp;(linux-2.6&lt;=27)" key="ON-607">
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="iomux">poll</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="!v5&amp;(linux-2.6&lt;=27)" key="ON-607">
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="!v5&amp;(linux-2.6&lt;=27)" key="ON-607">
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="iomux">select</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="!v5&amp;(linux-2.6&lt;=27)" key="ON-607">
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="iomux">pselect</arg>
        <arg name="n1">19</arg>
        <arg name="n2"/>
        <arg name="rcvlowat"/>
        <notes/>
        <results tags="!v5&amp;(linux-2.6&lt;=27)" key="ON-607">
          <result value="FAILED">
            <verdict>Socket is readable when too few data is sent</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="rcvlowat_dgram" type="script">
      <objective>Check that SO_RCVLOWAT option is ignored on datagram sockets.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="rcvlowat"/>
        <arg name="send"/>
        <notes/>
      </iter>
    </test>
    <test name="rcvlowat_recv" type="script">
      <objective>Check that SO_RCVLOWAT option sets the amount of data that must be in the socket receive buffer for recv() to return data.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="more_data_rx"/>
        <arg name="more_data_tx"/>
        <arg name="n1"/>
        <arg name="rcvlowat"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="rcvtimeo_accept" type="script">
      <objective>Check that SO_RCVTIMEO option allows to place timeout on accept() call.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="rcvtimeo" type="script">
      <objective>Check that SO_RCVTIMEO option allows to place timeout on socket receive operations.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5&amp;ool_loop=0" notes="onload_zc_recv() is not supported for not accelerated socket">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5&amp;ool_loop=0" notes="onload_zc_recv() is not supported for not accelerated socket">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5&amp;ool_loop=0" notes="onload_zc_hlrx_recv_zc() is not supported for not accelerated socket">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5&amp;ool_loop=0" notes="onload_zc_hlrx_recv_zc() is not supported for not accelerated socket">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5&amp;ool_loop=0" notes="onload_zc_hlrx_recv_copy() is not supported for not accelerated socket">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5&amp;ool_loop=0" notes="onload_zc_hlrx_recv_copy() is not supported for not accelerated socket">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)" notes="recvmmsg() is not supported for TCP socket on onload">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ENOSYS instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)" notes="recvmmsg() is not supported for TCP socket on onload">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ENOSYS instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" notes="onload_zc_recv() is not supported for not accelerated socket">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" notes="onload_zc_recv() is not supported for not accelerated socket">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" notes="onload_zc_hlrx_recv_zc() is not supported for not accelerated socket">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" notes="onload_zc_hlrx_recv_zc() is not supported for not accelerated socket">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" notes="onload_zc_hlrx_recv_copy() is not supported for not accelerated socket">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" notes="onload_zc_hlrx_recv_copy() is not supported for not accelerated socket">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" notes="recvmmsg() is not supported for TCP socket on onload">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ENOSYS instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" notes="recvmmsg() is not supported for TCP socket on onload">
          <result value="FAILED">
            <verdict>Tested function called on 'iut_s' socket with non zero SO_RCVTIMEO option value returned -1, but: errno is set to ENOSYS instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">sys_read</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;ool_spin">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Unexpected duration of the second tested function call</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">sys_readv</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;ool_spin">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Unexpected duration of the second tested function call</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">read</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">sys_read</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">readv</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">sys_readv</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">recv</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">recvfrom</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">recvmsg</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="is_blocking"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">recvmmsg</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
        <results tags="v5&amp;ool_spin">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Unexpected duration of the second tested function call</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">read</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;ool_spin">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Unexpected duration of the second tested function call</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">readv</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;ool_spin">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Unexpected duration of the second tested function call</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">recv</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;ool_spin">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Unexpected duration of the second tested function call</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">recvfrom</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;ool_spin">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Unexpected duration of the second tested function call</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">recvmsg</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5&amp;ool_spin">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>Unexpected duration of the second tested function call</verdict>
          </result>
        </results>
      </iter>
    </test>
    
    <test name="reuseaddr_shutdown_unicast" type="script">
      <objective>Check that SO_REUSEADDR socket option does not allow to have new TCP socket bound to the same address immediately after shutdown() was called for previous listening one.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="accepted"/>
        <arg name="env"/>
        <arg name="how_to_shut"/>
        <arg name="wildcard"/>
        <notes/>
      </iter>
    </test>
    
    <test name="reuseaddr_shutdown_wildcard" type="script">
      <objective>Check that SO_REUSEADDR socket option does not allow to have new TCP socket bound to the same address immediately after shutdown() was called for previous listening one.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="accepted"/>
        <arg name="auto_port">TRUE</arg>
        <arg name="env"/>
        <arg name="how_to_shut"/>
        <arg name="wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="accepted"/>
        <arg name="auto_port">FALSE</arg>
        <arg name="env"/>
        <arg name="how_to_shut"/>
        <arg name="wildcard"/>
        <notes/>
      </iter>
    </test>
    <test name="reuseaddr_tcp_1" type="script">
      <objective>Check that SO_REUSEADDR socket option does not allow to have more than one TCP socket bound to the same address.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>second listen() failed</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="reuseaddr_tcp_2" type="script">
      <objective>Check that SO_REUSEADDR socket option allows two TCP clients be bound to the same local address as soon as one of them connects to a peer.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},{'pco_tst':IUT},addr:'iut_addr':inet:unicast}},'srv_addr1'='iut_addr','srv_addr2'='iut_addr'</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Attempt to create one more connection with the same parameters failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
        <results tags="linux&amp;v5&amp;!(ool_loop=0)" key="ON-1731">
          <result value="FAILED">
            <verdict>It is possible to connect two sockets bound to the same local address to the same remote address</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT},{'pco_tst':IUT},addr:'iut_addr':inet:unicast}},'pco_iut2'='pco_iut1','srv_addr1'='iut_addr','srv_addr2'='iut_addr'</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Attempt to create one more connection with the same parameters failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
        <results tags="linux&amp;v5&amp;!(ool_loop=0)" key="ON-1731">
          <result value="FAILED">
            <verdict>It is possible to connect two sockets bound to the same local address to the same remote address</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT,'pco_iut2':IUT},{'pco_tst':IUT},addr:'iut_addr':inet:unicast}},'srv_addr1'='iut_addr','srv_addr2'='iut_addr'</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Attempt to create one more connection with the same parameters failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
        <results tags="linux&amp;v5&amp;!(ool_loop=0)" key="ON-1731">
          <result value="FAILED">
            <verdict>It is possible to connect two sockets bound to the same local address to the same remote address</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},addr:'iut_addr':inet6:unicast},{{'pco_tst':tester},addr:'srv_addr1':inet6:unicast,addr:'srv_addr2':inet6:unicast}}</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Attempt to create one more connection with the same parameters failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT},addr:'iut_addr':inet6:unicast},{{'pco_tst':tester},addr:'srv_addr1':inet6:unicast,addr:'srv_addr2':inet6:unicast}},'pco_iut2'='pco_iut1'</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Attempt to create one more connection with the same parameters failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT,'pco_iut2':IUT},addr:'iut_addr':inet6:unicast},{{'pco_tst':tester},addr:'srv_addr1':inet6:unicast,addr:'srv_addr2':inet6:unicast}}</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Attempt to create one more connection with the same parameters failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},{'pco_tst':IUT},addr:'iut_addr':inet6:unicast}},'srv_addr1'='iut_addr','srv_addr2'='iut_addr'</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Attempt to create one more connection with the same parameters failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
        <results tags="linux&amp;v5&amp;!(ool_loop=0)" key="ON-1731">
          <result value="FAILED">
            <verdict>It is possible to connect two sockets bound to the same local address to the same remote address</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT},{'pco_tst':IUT},addr:'iut_addr':inet6:unicast}},'pco_iut2'='pco_iut1','srv_addr1'='iut_addr','srv_addr2'='iut_addr'</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Attempt to create one more connection with the same parameters failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
        <results tags="linux&amp;v5&amp;!(ool_loop=0)" key="ON-1731">
          <result value="FAILED">
            <verdict>It is possible to connect two sockets bound to the same local address to the same remote address</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT,'pco_iut2':IUT},{'pco_tst':IUT},addr:'iut_addr':inet6:unicast}},'srv_addr1'='iut_addr','srv_addr2'='iut_addr'</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Attempt to create one more connection with the same parameters failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
        <results tags="linux&amp;v5&amp;!(ool_loop=0)" key="ON-1731">
          <result value="FAILED">
            <verdict>It is possible to connect two sockets bound to the same local address to the same remote address</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'srv_addr1':inet:unicast,addr:'srv_addr2':inet:unicast}}</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Attempt to create one more connection with the same parameters failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'srv_addr1':inet:unicast,addr:'srv_addr2':inet:unicast}},'pco_iut2'='pco_iut1'</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Attempt to create one more connection with the same parameters failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut1':IUT,'pco_iut2':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'srv_addr1':inet:unicast,addr:'srv_addr2':inet:unicast}}</arg>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Attempt to create one more connection with the same parameters failed with errno EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="reuseaddr_tcp_3" type="script">
      <objective>Check that SO_REUSEADDR socket option allows multiple instances of the same server to be started on the same port, as long as each instance binds a different local network address.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="reuseaddr_tcp_4" type="script">
      <objective>Check that SO_REUSEADDR socket option can be used for server sockets allowing them quick restart after closing.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="connections">210</arg>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'tst_addr':inet:unicast}}</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <notes/>
        <results tags="v5&amp;!reuse_stack" key="ON-3060, ON-8513">
          <result value="FAILED">
            <verdict>connect() failed with errno ECONNREFUSED at iteration 211</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connections">210</arg>
        <arg name="env">{{{'pco_iut1':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'tst_addr':inet:unicast}},'pco_iut2'='pco_iut1'</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections">210</arg>
        <arg name="env">{{{'pco_iut1':IUT,'pco_iut2':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'tst_addr':inet:unicast}}</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections">210</arg>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},{'pco_tst':tester},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:unicast}}</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections">210</arg>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},{'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:unicast}}</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections">1</arg>
        <arg name="env"/>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections"/>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'tst_addr':inet:unicast}}</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections"/>
        <arg name="env">{{{'pco_iut1':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'tst_addr':inet:unicast}},'pco_iut2'='pco_iut1'</arg>
        <arg name="reuse_addr1"/>
        <arg name="reuse_addr2">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections"/>
        <arg name="env">{{{'pco_iut1':IUT,'pco_iut2':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'tst_addr':inet:unicast}}</arg>
        <arg name="reuse_addr1"/>
        <arg name="reuse_addr2">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections"/>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},{'pco_tst':tester},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:unicast}}</arg>
        <arg name="reuse_addr1"/>
        <arg name="reuse_addr2">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections"/>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},{'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:unicast}}</arg>
        <arg name="reuse_addr1"/>
        <arg name="reuse_addr2">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections"/>
        <arg name="env"/>
        <arg name="reuse_addr1">FALSE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections"/>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},addr:'iut_addr':inet:unicast},{{'pco_tst':tester},addr:'tst_addr':inet:unicast}}</arg>
        <arg name="reuse_addr1">FALSE</arg>
        <arg name="reuse_addr2">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections">210</arg>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},addr:'iut_addr':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr':inet6:unicast}}</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <notes/>
        <results tags="v5&amp;!reuse_stack" key="ON-3060, ON-8513">
          <result value="FAILED">
            <verdict>connect() failed with errno ECONNREFUSED at iteration 211</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connections">210</arg>
        <arg name="env">{{{'pco_iut1':IUT},addr:'iut_addr':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr':inet6:unicast}},'pco_iut2'='pco_iut1'</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections">210</arg>
        <arg name="env">{{{'pco_iut1':IUT,'pco_iut2':IUT},addr:'iut_addr':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr':inet6:unicast}}</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections">210</arg>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},{'pco_tst':tester},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:unicast}}</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections">210</arg>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},{'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:unicast}}</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections"/>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},addr:'iut_addr':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr':inet6:unicast}}</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections"/>
        <arg name="env">{{{'pco_iut1':IUT},addr:'iut_addr':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr':inet6:unicast}},'pco_iut2'='pco_iut1'</arg>
        <arg name="reuse_addr1"/>
        <arg name="reuse_addr2">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections"/>
        <arg name="env">{{{'pco_iut1':IUT,'pco_iut2':IUT},addr:'iut_addr':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr':inet6:unicast}}</arg>
        <arg name="reuse_addr1"/>
        <arg name="reuse_addr2">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections"/>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},{'pco_tst':tester},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:unicast}}</arg>
        <arg name="reuse_addr1"/>
        <arg name="reuse_addr2">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections"/>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},{'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:unicast}}</arg>
        <arg name="reuse_addr1"/>
        <arg name="reuse_addr2">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connections"/>
        <arg name="env">{{{'pco_iut1':IUT},{'pco_iut2':IUT},addr:'iut_addr':inet6:unicast},{{'pco_tst':tester},addr:'tst_addr':inet6:unicast}}</arg>
        <arg name="reuse_addr1">FALSE</arg>
        <arg name="reuse_addr2">FALSE</arg>
        <notes/>
      </iter>
    </test>
    <test name="reuseaddr_tcp_5" type="script">
      <objective>Check that SO_REUSEADDR socket option allows binding two sockets to the same port but different addresses.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="one_wcard">TRUE</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <arg name="wcard_first">TRUE</arg>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>Both sockets enable SO_REUSEADDR socket option, one is bound to wildcard address, but listen() fails with errno EADDRINUSE</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="one_wcard">TRUE</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">FALSE</arg>
        <arg name="wcard_first">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="one_wcard">TRUE</arg>
        <arg name="reuse_addr1">FALSE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <arg name="wcard_first">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="one_wcard">TRUE</arg>
        <arg name="reuse_addr1">FALSE</arg>
        <arg name="reuse_addr2">FALSE</arg>
        <arg name="wcard_first">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="one_wcard">TRUE</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <arg name="wcard_first">FALSE</arg>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>Both sockets enable SO_REUSEADDR socket option, one is bound to wildcard address, but listen() fails with errno EADDRINUSE</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="one_wcard">TRUE</arg>
        <arg name="reuse_addr1">TRUE</arg>
        <arg name="reuse_addr2">FALSE</arg>
        <arg name="wcard_first">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="one_wcard">TRUE</arg>
        <arg name="reuse_addr1">FALSE</arg>
        <arg name="reuse_addr2">TRUE</arg>
        <arg name="wcard_first">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="one_wcard">TRUE</arg>
        <arg name="reuse_addr1">FALSE</arg>
        <arg name="reuse_addr2">FALSE</arg>
        <arg name="wcard_first">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="one_wcard">FALSE</arg>
        <arg name="reuse_addr1"/>
        <arg name="reuse_addr2"/>
        <arg name="wcard_first"/>
        <notes/>
      </iter>
    </test>
    <test name="reuseaddr_2msl" type="script">
      <objective>Check a possibility for address reusing for 2MSL interval by means of applying SO_REUSEADDR option to the socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="exec">iut</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results key="ON-12924" tags="v5&amp;scalable_passive&amp;socket_cache&amp;ool_loop=1">
          <result value="FAILED">
            <verdict>bind() returns 0 instead of -1 (without SO_REUSEADDR applied)</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="exec">aux</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results key="ON-12924" tags="v5&amp;scalable_passive&amp;socket_cache&amp;ool_loop=1">
          <result value="FAILED">
            <verdict>bind() returns 0 instead of -1 (without SO_REUSEADDR applied)</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="exec">none</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results key="ON-12924" tags="v5&amp;scalable_passive&amp;socket_cache&amp;ool_loop=1">
          <result value="FAILED">
            <verdict>bind() returns 0 instead of -1 (without SO_REUSEADDR applied)</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="exec">iut</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results key="ON-12924" tags="v5&amp;scalable_passive&amp;socket_cache&amp;ool_loop=1">
          <result value="FAILED">
            <verdict>bind() returns 0 instead of -1 (without SO_REUSEADDR applied)</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="exec">aux</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results key="ON-12924" tags="v5&amp;scalable_passive&amp;socket_cache&amp;ool_loop=1">
          <result value="FAILED">
            <verdict>bind() returns 0 instead of -1 (without SO_REUSEADDR applied)</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="exec">none</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results key="ON-12924" tags="v5&amp;scalable_passive&amp;socket_cache&amp;ool_loop=1">
          <result value="FAILED">
            <verdict>bind() returns 0 instead of -1 (without SO_REUSEADDR applied)</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exec">iut</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exec">iut</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':IUT},addr:'iut_addr':inet:loopback}},'tst_addr'='iut_addr'</arg>
        <arg name="exec">iut</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exec">iut</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exec">iut</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':IUT},addr:'iut_addr':inet6:loopback}},'tst_addr'='iut_addr'</arg>
        <arg name="exec">iut</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exec">aux</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exec">aux</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':IUT},addr:'iut_addr':inet:loopback}},'tst_addr'='iut_addr'</arg>
        <arg name="exec">aux</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exec">aux</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exec">aux</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':IUT},addr:'iut_addr':inet6:loopback}},'tst_addr'='iut_addr'</arg>
        <arg name="exec">aux</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exec"/>
        <arg name="pass_op">FALSE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exec">iut</arg>
        <arg name="pass_op">FALSE</arg>
        <arg name="reuse">TRUE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="linux&amp;v5&amp;!reuse_stack" key="ON-12" notes="Client side of SO_REUSEADDR is not supported by Level5.">
          <result value="FAILED">
            <verdict>connect() returns -1 and errno is set to EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exec">iut</arg>
        <arg name="pass_op">FALSE</arg>
        <arg name="reuse">TRUE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="linux&amp;v5&amp;!reuse_stack" key="ON-12" notes="Client side of SO_REUSEADDR is not supported by Level5.">
          <result value="FAILED">
            <verdict>connect() returns -1 and errno is set to EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exec">aux</arg>
        <arg name="pass_op">FALSE</arg>
        <arg name="reuse">TRUE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="linux&amp;v5&amp;!reuse_stack" key="ON-12" notes="Client side of SO_REUSEADDR is not supported by Level5.">
          <result value="FAILED">
            <verdict>connect() returns -1 and errno is set to EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exec">aux</arg>
        <arg name="pass_op">FALSE</arg>
        <arg name="reuse">TRUE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="linux&amp;v5&amp;!reuse_stack" key="ON-12" notes="Client side of SO_REUSEADDR is not supported by Level5.">
          <result value="FAILED">
            <verdict>connect() returns -1 and errno is set to EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="exec"/>
        <arg name="pass_op">FALSE</arg>
        <arg name="reuse">TRUE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="disable_timestamps&amp;ool_loop=0">
          <result value="FAILED">
            <verdict>connect() returns -1 and errno is set to EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':IUT},addr:'iut_addr':inet:loopback}},'tst_addr'='iut_addr'</arg>
        <arg name="exec"/>
        <arg name="pass_op">FALSE</arg>
        <arg name="reuse">TRUE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="disable_timestamps&amp;ool_loop=0">
          <result value="FAILED">
            <verdict>connect() returns -1 and errno is set to EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="exec"/>
        <arg name="pass_op">FALSE</arg>
        <arg name="reuse">TRUE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="disable_timestamps&amp;ool_loop=0">
          <result value="FAILED">
            <verdict>connect() returns -1 and errno is set to EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':IUT},addr:'iut_addr':inet6:loopback}},'tst_addr'='iut_addr'</arg>
        <arg name="exec"/>
        <arg name="pass_op">FALSE</arg>
        <arg name="reuse">TRUE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="disable_timestamps&amp;ool_loop=0">
          <result value="FAILED">
            <verdict>connect() returns -1 and errno is set to EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exec"/>
        <arg name="pass_op">FALSE</arg>
        <arg name="reuse">TRUE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="disable_timestamps">
          <result value="FAILED">
            <verdict>connect() returns -1 and errno is set to EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exec"/>
        <arg name="pass_op">FALSE</arg>
        <arg name="reuse">TRUE</arg>
        <arg name="use_wildcard"/>
        <notes/>
        <results tags="disable_timestamps">
          <result value="FAILED">
            <verdict>connect() returns -1 and errno is set to EADDRNOTAVAIL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exec">none</arg>
        <arg name="pass_op">FALSE</arg>
        <arg name="reuse">TRUE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exec">none</arg>
        <arg name="pass_op">FALSE</arg>
        <arg name="reuse">TRUE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exec">none</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exec">none</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':IUT},addr:'iut_addr':inet:loopback}},'tst_addr'='iut_addr'</arg>
        <arg name="exec">none</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exec">none</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exec">none</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':IUT},addr:'iut_addr':inet6:loopback}},'tst_addr'='iut_addr'</arg>
        <arg name="exec">none</arg>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">FALSE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exec"/>
        <arg name="pass_op">TRUE</arg>
        <arg name="reuse">TRUE</arg>
        <arg name="use_wildcard"/>
        <notes/>
      </iter>
    </test>
    <test name="sndlowat" type="script">
      <objective>Check that the value of SO_SNDLOWAT option is interpreted as the amount of available space that must exist in the socket send buffer for select() to return "writable".</objective>
      <notes>SO_SNDLOWAT != 1 is not supported by Linux and Level5.</notes>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>Failed to set SNDLOWAT option for 'iut_s' socket, errno is set to ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="sndtimeo" type="script">
      <objective>Check that SO_SNDTIMEO option allows to place timeout on socket send operations.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="func">onload_zc_send</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5&amp;ool_loop=0">
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="func">onload_zc_send_user_buf</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5&amp;ool_loop=0" notes="onload_zc_send() works only for accelerated sockets">
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="func">sendmmsg</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)">
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ENOSYS instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="func">onload_zc_send</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5" notes="onload_zc_recv() function is supported only for accelerated sockets">
          <result value="FAILED"/>
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="func">onload_zc_send</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5" notes="onload_zc_send() function is supported only for accelerated sockets">
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="func">onload_zc_send_user_buf</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5" notes="onload_zc_send() function is supported only for accelerated sockets">
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="func">sendmmsg</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5">
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="func">sendmmsg</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5">
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ENOSYS instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="func">onload_zc_send</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5&amp;ool_loop=0">
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="func">onload_zc_send_user_buf</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5&amp;ool_loop=0" notes="onload_zc_send() works only on accelerated sockets">
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo_ipv6</arg>
        <arg name="func">sendmmsg</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5&amp;!(ool_loop=0)">
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ENOSYS instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="func">onload_zc_send</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5" notes="onload_zc_recv() function is supported only for accelerated sockets">
          <result value="FAILED"/>
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="func">onload_zc_send</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5" notes="onload_zc_send() function is supported only for accelerated sockets">
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="func">onload_zc_send_user_buf</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5" notes="onload_zc_send() function is supported only for accelerated sockets">
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ESOCKTNOSUPPORT instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="func">sendmmsg</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5">
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="func">sendmmsg</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
        <results tags="v5">
          <result value="FAILED">
            <verdict>Unexpected errno: errno is set to ENOSYS instead of EAGAIN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">send</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">sendto</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">sys_writev</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">sys_write</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">write</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">writev</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">sendmsg</arg>
        <arg name="is_blocking">TRUE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">write</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">sys_write</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">writev</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">sys_writev</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">send</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">sendto</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">sendmsg</arg>
        <arg name="is_blocking">FALSE</arg>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="func">onload_zc_send</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="func">onload_zc_send</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="func">onload_zc_send_user_buf</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="func">onload_zc_send_user_buf</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">od_send</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func">od_send_raw</arg>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="flags_pio_retry"/>
        <arg name="func"/>
        <arg name="is_blocking"/>
        <arg name="onload_template_extension"/>
        <notes/>
      </iter>
    </test>
    <test name="sndtimeo_connect" type="script">
      <objective>Check that SO_SNDTIMEO option set on socket influences on connect() behaviour.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="oobinline_recv_oob" type="script">
      <objective>Check that OOB data should be retrieved by means of ordinary recv() if SO_OOBINLNE option set on socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="buf_len"/>
        <arg name="call_after">TRUE</arg>
        <arg name="env"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="buf_len"/>
        <arg name="call_after">FALSE</arg>
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="type" type="script">
      <objective>Check that SO_TYPE socket option correctly works.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="udp_ttl_tos" type="script">
      <objective>Check that IP_TTL / IP_TOS / IPV6_UNICAST_HOPS / IPV6_TCLASS socket options can be used to change TTL / TOS / Hop Limit / Traffic Class value of IP header in all packets originated from a socket, and that the checked field value can be received in control messages if IP_RECVTTL, IP_RECVTOS, IPV6_RECVHOPLIMIT or IPV6_RECVTCLASS are enabled on receiver socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="connect_sender">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="fragmented_packets"/>
        <arg name="recv_iut">TRUE</arg>
        <arg name="sock_opt">IP_TOS</arg>
        <arg name="recv_f"/>
        <arg name="with_cmsg"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connect_sender">TRUE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="fragmented_packets"/>
        <arg name="recv_iut">FALSE</arg>
        <arg name="sock_opt">IP_TOS</arg>
        <arg name="recv_f"/>
        <arg name="with_cmsg"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>setsockopt(IP_TOS) with too big value returned success, applied value is masked by maximum possible value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connect_sender">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="fragmented_packets"/>
        <arg name="recv_iut">FALSE</arg>
        <arg name="sock_opt">IP_TOS</arg>
        <arg name="recv_f"/>
        <arg name="with_cmsg"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>setsockopt(IP_TOS) with too big value returned success, applied value is masked by maximum possible value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connect_sender"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="fragmented_packets"/>
        <arg name="recv_iut"/>
        <arg name="sock_opt">IP_TTL</arg>
        <arg name="recv_f"/>
        <arg name="with_cmsg"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connect_sender"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="fragmented_packets"/>
        <arg name="recv_iut"/>
        <arg name="sock_opt"/>
        <arg name="recv_f"/>
        <arg name="with_cmsg"/>
        <notes/>
      </iter>
    </test>
    <test name="ip_recvopts" type="script">
      <objective>Check that IP_OPTIONS socket option can be used to set IP options to be sent with every packet originated from the socket, and that IP_RECVOPTS socket option can be used to force recvmsg() function return IP options of incoming packets in ancillary data.</objective>
      <notes>IP_OPTIONS and IP_RECVOPTS are not supported in Level5 TOT.</notes>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':IUT},addr:'snd_addr':inet:unicast}},'rcv_addr'='snd_addr','pco_snd'='pco_iut','pco_rcv'='pco_tst'</arg>
        <arg name="recv_f">onload_zc_recv</arg>
        <arg name="use_retopts"/>
        <arg name="use_sendmmsg"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT},addr:'rcv_addr':inet:unicast},{{'pco_tst':tester},addr:'snd_addr':inet:unicast}},'pco_snd'='pco_tst','pco_rcv'='pco_iut'</arg>
        <arg name="recv_f"/>
        <arg name="use_retopts"/>
        <arg name="use_sendmmsg"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>Delivery of IP options is enabled and IP options sent by peer, but no ancillary data are received</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':IUT},addr:'snd_addr':inet:unicast}},'rcv_addr'='snd_addr','pco_snd'='pco_iut','pco_rcv'='pco_tst'</arg>
        <arg name="recv_f">recvmsg</arg>
        <arg name="use_retopts"/>
        <arg name="use_sendmmsg"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED"/>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT},{'pco_tst':IUT},addr:'snd_addr':inet:unicast}},'rcv_addr'='snd_addr','pco_snd'='pco_iut','pco_rcv'='pco_tst'</arg>
        <arg name="recv_f">recvmmsg</arg>
        <arg name="use_retopts"/>
        <arg name="use_sendmmsg"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED"/>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT},addr:'snd_addr':inet:unicast},{{'pco_tst':tester},addr:'rcv_addr':inet:unicast}},'pco_snd'='pco_iut','pco_rcv'='pco_tst'</arg>
        <arg name="recv_f"/>
        <arg name="use_retopts"/>
        <arg name="use_sendmmsg"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED"/>
          <result value="PASSED"/>
        </results>
      </iter>
    </test>
    <test name="ip_pktinfo" type="script">
      <objective>Check that when IP_PKTINFO (IPV6_RECVPKTINFO) socket option is enabled on the socket, recvmsg() returns IP_PKTINFO (IPV6_PKTINFO) ancillary message with some information about the incoming packet.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_2addr_lo</arg>
        <arg name="addr_type">specific</arg>
        <arg name="method"/>
        <notes/>
        <results tags="!linux-4|linux-4&lt;14" key="ST-1165">
          <result value="FAILED">
            <verdict>'ipi_ifindex' returned in IP_PKTINFO ancillary data has unexpected value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_2addr_lo_ipv6</arg>
        <arg name="addr_type">specific</arg>
        <arg name="method"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_2addr</arg>
        <arg name="addr_type">specific</arg>
        <arg name="method"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_2addr_ipv6</arg>
        <arg name="addr_type">specific</arg>
        <arg name="method"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="addr_type">broadcast</arg>
        <arg name="method"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="addr_type">broadcast</arg>
        <arg name="method"/>
        <notes/>
        <results tags="v5&amp;(macvlan|ipvlan)&amp;!vlan&amp;!bond1&amp;!bond4&amp;!team1&amp;!team4&amp;!netns_iut" key="ON-7937,ST-2256">
          <result value="FAILED">
            <verdict>'ipi_ifindex' returned in IP_PKTINFO ancillary data has unexpected value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_mcast_lo</arg>
        <arg name="addr_type"/>
        <arg name="method"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_mcast_lo_ipv6</arg>
        <arg name="addr_type"/>
        <arg name="method"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_mcast</arg>
        <arg name="addr_type">multicast</arg>
        <arg name="method"/>
        <notes/>
        <results tags="v5&amp;(macvlan|ipvlan)" key="ON-7937">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>'ipi_spec_dst' returned in IP_PKTINFO ancillary data has unexpected value</verdict>
            <verdict>'ipi_ifindex' returned in IP_PKTINFO ancillary data has unexpected value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_mcast_ipv6</arg>
        <arg name="addr_type">multicast</arg>
        <arg name="method"/>
        <notes/>
      </iter>
    </test>
    <test name="ipv6_ipv4_pktinfo" type="script">
      <objective>Check what happens if  IP_PKTINFO and/or  IPV6_RECVPKTINFO is enabled on an IPv6 socket which can receive both IPv4 and IPv6 traffic.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="addr_type">multicast</arg>
        <arg name="env"/>
        <arg name="ip_pktinfo">TRUE</arg>
        <arg name="ipv6_recvpktinfo">TRUE</arg>
        <arg name="method"/>
        <arg name="send_ipv4">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(macvlan|ipvlan)" key="ON-7937">
          <result value="FAILED">
            <verdict>'ipi_spec_dst' returned in IP_PKTINFO ancillary data has unexpected value</verdict>
            <verdict>'ipi_ifindex' returned in IP_PKTINFO ancillary data was set to the index of parent interface</verdict>
            <verdict>'ipi6_ifindex' returned in IPV6_PKTINFO ancillary data was set to the index of parent interface</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="addr_type">multicast</arg>
        <arg name="env"/>
        <arg name="ip_pktinfo">FALSE</arg>
        <arg name="ipv6_recvpktinfo"/>
        <arg name="method"/>
        <arg name="send_ipv4">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(macvlan|ipvlan)" key="ON-7937">
          <result value="FAILED">
            <verdict>'ipi6_ifindex' returned in IPV6_PKTINFO ancillary data was set to the index of parent interface</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="addr_type">multicast</arg>
        <arg name="env"/>
        <arg name="ip_pktinfo"/>
        <arg name="ipv6_recvpktinfo">FALSE</arg>
        <arg name="method"/>
        <arg name="send_ipv4">TRUE</arg>
        <notes/>
        <results tags="v5&amp;(macvlan|ipvlan)" key="ON-7937">
          <result value="FAILED">
            <verdict>'ipi_spec_dst' returned in IP_PKTINFO ancillary data has unexpected value</verdict>
            <verdict>'ipi_ifindex' returned in IP_PKTINFO ancillary data was set to the index of parent interface</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="addr_type">broadcast</arg>
        <arg name="env"/>
        <arg name="ip_pktinfo">TRUE</arg>
        <arg name="ipv6_recvpktinfo">TRUE</arg>
        <arg name="method"/>
        <arg name="send_ipv4"/>
        <notes/>
        <results tags="(macvlan|ipvlan)&amp;!(vlan|netns_iut|netns_all)" key="ST-1691">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>'ipi6_ifindex' returned in IPV6_PKTINFO ancillary data was set to the index of parent interface</verdict>
            <verdict>'ipi_ifindex' returned in IP_PKTINFO ancillary data was set to the index of parent interface</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="addr_type">broadcast</arg>
        <arg name="env"/>
        <arg name="ip_pktinfo">FALSE</arg>
        <arg name="ipv6_recvpktinfo"/>
        <arg name="method"/>
        <arg name="send_ipv4"/>
        <notes/>
        <results tags="(macvlan|ipvlan)&amp;!(vlan|netns_iut|netns_all)" key="ST-1691">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>'ipi6_ifindex' returned in IPV6_PKTINFO ancillary data was set to the index of parent interface</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="addr_type">broadcast</arg>
        <arg name="env"/>
        <arg name="ip_pktinfo"/>
        <arg name="ipv6_recvpktinfo">FALSE</arg>
        <arg name="method"/>
        <arg name="send_ipv4"/>
        <notes/>
        <results tags="(macvlan|ipvlan)&amp;!(vlan|netns_iut|netns_all)" key="ST-1691">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>'ipi_ifindex' returned in IP_PKTINFO ancillary data was set to the index of parent interface</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="addr_type">multicast</arg>
        <arg name="env"/>
        <arg name="ip_pktinfo"/>
        <arg name="ipv6_recvpktinfo"/>
        <arg name="method"/>
        <arg name="send_ipv4">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="addr_type">specific</arg>
        <arg name="env"/>
        <arg name="ip_pktinfo"/>
        <arg name="ipv6_recvpktinfo"/>
        <arg name="method"/>
        <arg name="send_ipv4"/>
        <notes/>
      </iter>
    </test>
    <test name="pktinfo_ip4_ip6_alternate" type="script">
      <objective>Check what happens if we receive a few packets on IPv6 socket from IPv4 destination, switching between enabling IP_PKTINFO and IPV6_RECVPKTINFO before receiving the next packet.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="addr_type"/>
        <arg name="method"/>
        <arg name="pkts_num"/>
        <notes/>
      </iter>
    </test>
    <test name="ip_recverr" type="script">
      <objective>Check that IP_RECVERR socket option enables extended reliable error message passing and that it can be received with recvmsg() function.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="iomux"/>
        <arg name="select_err_queue"/>
        <notes/>
      </iter>
    </test>
    <test name="tcp_nodelay" type="script">
      <objective>Check that Nagle algorithm is disabled when TCP_NODELAY socket option is switched on, and enabled otherwise.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="tcp_info_state" type="script">
      <objective>Check that all possible TCP socket states are displayed correctly in all possible transitions between them.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_SYN_RECV-&gt;TCP_ESTABLISHED-&gt;TCP_CLOSE_WAIT-&gt;TCP_LAST_ACK-&gt;TCP_CLOSE</arg>
        <arg name="tst_type"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>TCP_CLOSE -&gt; TCP_SYN_SENT failed with rc EFAIL in TAPI. Socket in TCP_ESTABLISHED instead</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_CLOSE-&gt;TCP_SYN_SENT-&gt;TCP_ESTABLISHED-&gt;TCP_FIN_WAIT1-&gt;TCP_FIN_WAIT2-&gt;TCP_TIME_WAIT-&gt;timeout-&gt;TCP_CLOSE</arg>
        <arg name="tst_type"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>TCP_CLOSE -&gt; TCP_SYN_SENT failed with rc EFAIL in TAPI. Socket in TCP_ESTABLISHED instead</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_SYN_SENT-&gt;TCP_SYN_RECV-&gt;TCP_LISTEN</arg>
        <arg name="tst_type"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>TCP_SYN_RECV -&gt; TCP_LISTEN failed with rc EFAIL in TAPI. Socket in TCP_CLOSE instead</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_SYN_SENT-&gt;TCP_SYN_RECV-&gt;TCP_LISTEN</arg>
        <arg name="tst_type"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>TCP_SYN_RECV -&gt; TCP_LISTEN failed with rc EFAIL in TAPI. Socket in TCP_CLOSE instead</verdict>
          </result>
        </results>
        <results tags="v5&amp;linux" key="ON-1362">
          <result value="FAILED">
            <verdict>TCP_SYN_SENT -&gt; TCP_SYN_RECV failed with rc ETIMEDOUT in TAPI. Socket in TCP_SYN_SENT instead</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_SYN_SENT-&gt;TCP_SYN_RECV-&gt;TCP_FIN_WAIT1</arg>
        <arg name="tst_type"/>
        <notes/>
        <results tags="v5" key="ON-1362">
          <result value="FAILED">
            <verdict>TCP_SYN_SENT -&gt; TCP_SYN_RECV failed with rc ETIMEDOUT in TAPI. Socket in TCP_SYN_SENT instead</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_SYN_SENT-&gt;TCP_SYN_RECV-&gt;TCP_FIN_WAIT1</arg>
        <arg name="tst_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_SYN_SENT-&gt;TCP_SYN_RECV-&gt;TCP_ESTABLISHED</arg>
        <arg name="tst_type"/>
        <notes/>
        <results tags="v5" key="ON-1362">
          <result value="FAILED">
            <verdict>TCP_SYN_SENT -&gt; TCP_SYN_RECV failed with rc ETIMEDOUT in TAPI. Socket in TCP_SYN_SENT instead</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_SYN_SENT-&gt;TCP_SYN_RECV-&gt;TCP_ESTABLISHED</arg>
        <arg name="tst_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_FIN_WAIT1-&gt;TCP_TIME_WAIT</arg>
        <arg name="tst_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_FIN_WAIT1-&gt;TCP_CLOSING-&gt;TCP_TIME_WAIT</arg>
        <arg name="tst_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_SYN_SENT-&gt;TCP_CLOSE</arg>
        <arg name="tst_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_SYN_SENT-&gt;timeout-&gt;TCP_CLOSE</arg>
        <arg name="tst_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_CLOSE-&gt;TCP_LISTEN-&gt;TCP_SYN_RECV-&gt;TCP_ESTABLISHED</arg>
        <arg name="tst_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_SYN_RECV-&gt;TCP_ESTABLISHED-&gt;TCP_CLOSE_WAIT-&gt;TCP_LAST_ACK-&gt;TCP_CLOSE</arg>
        <arg name="tst_type"/>
        <notes/>
        <results tags="v5" key="ON-1362">
          <result value="FAILED">
            <verdict>TCP_SYN_SENT -&gt; TCP_SYN_RECV failed with rc ETIMEDOUT in TAPI. Socket in TCP_SYN_SENT instead</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_SYN_RECV-&gt;TCP_ESTABLISHED-&gt;TCP_CLOSE_WAIT-&gt;TCP_LAST_ACK-&gt;TCP_CLOSE</arg>
        <arg name="tst_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_CLOSE-&gt;TCP_LISTEN-&gt;TCP_SYN_SENT</arg>
        <arg name="tst_type"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>TCP_LISTEN -&gt; TCP_SYN_SENT failed with rc EISCONN in RPC. Socket in TCP_LISTEN instead</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_CLOSE-&gt;TCP_SYN_SENT-&gt;TCP_ESTABLISHED-&gt;TCP_FIN_WAIT1-&gt;TCP_FIN_WAIT2-&gt;TCP_TIME_WAIT-&gt;timeout-&gt;TCP_CLOSE</arg>
        <arg name="tst_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="loopback"/>
        <arg name="tcp_state_seq">TCP_CLOSE-&gt;TCP_SYN_SENT-&gt;TCP_ESTABLISHED-&gt;TCP_FIN_WAIT1-&gt;TCP_FIN_WAIT2-&gt;TCP_TIME_WAIT-&gt;timeout-&gt;TCP_CLOSE</arg>
        <arg name="tst_type"/>
        <notes/>
      </iter>
    </test>
    <test name="tcp_info_ca_state" type="script">
      <objective>Check that TCP congestion avoidance states are displayed correcly in (almost) all possible transitions between them</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="tcp_ca_state_seq"/>
       <notes/>
      </iter>
    </test>
    <test name="tcp_info_last_data_sent_ack_recv" type="script">
      <objective>Check that TCP_INFO structure fields tcpi_last_data_sent and tcpi_last_ack_recv are changed correctly during connection</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="tcp_info_snd_adv_mss" type="script">
      <objective>Check that TCP_INFO structure fields tcpi_snd_mss and tcpi_advmss are changed correctly during connection</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="active"/>
        <notes/>
      </iter>
    </test>
    <test name="mtu_changing" type="script">
      <objective>Check correctness of TCP processing in the case of decreasing next hop MTU. This test checks correctness of retransmit queue processing by transmitting TCP.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="retr_queue"/>
        <notes/>
        <results tags="v5&amp;scalable_passive" key="ON-5760,ON-8565">
          <result value="FAILED"/>
          <result value="PASSED"/>
        </results>
      </iter>
    </test>
    <test name="ip_mtu_discover_tcp" type="script">
      <objective>Check possibility of performing Path MTU discovery functionality on SOCK_STREAM type socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
        <results tags="v5&amp;scalable_passive" key="ON-5760,ON-8565">
          <result value="FAILED"/>
          <result value="PASSED"/>
        </results>
      </iter>
    </test>
    <test name="ip_mtu_discover_udp" type="script">
      <objective>Check possibility of performing Path MTU discovery functionality on SOCK_DGRAM type socket.</objective>
      <notes>The test is unstable on Level5. It is not clear why Linux 2.6 starts PMTU from MTU/2.</notes>
      <iter result="PASSED">
        <arg name="connected">FALSE</arg>
        <arg name="env"/>
        <arg name="pmtu_val"/>
        <arg name="ip_recverr"/>
        <arg name="route_direct"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connected">TRUE</arg>
        <arg name="env"/>
        <arg name="pmtu_val">want</arg>
        <arg name="ip_recverr"/>
        <arg name="route_direct"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connected">TRUE</arg>
        <arg name="env"/>
        <arg name="pmtu_val">dont</arg>
        <arg name="ip_recverr"/>
        <arg name="route_direct"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connected">TRUE</arg>
        <arg name="env"/>
        <arg name="pmtu_val">do</arg>
        <arg name="ip_recverr"/>
        <arg name="route_direct"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="connected">TRUE</arg>
        <arg name="env"/>
        <arg name="pmtu_val">probe</arg>
        <arg name="ip_recverr"/>
        <arg name="route_direct"/>
        <notes/>
        <results tags="v5" key="ON-14756">
          <result value="FAILED">
            <verdict>Failed to get Path MTU updated after sending 5 packets</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="tcp_cork" type="script">
      <objective>Checking TCP_CORK functionality providing a coalescing of the TCP packets transmitted during the retransmission interval time and that packets are not coalesced if interval between transmission is more than interval of retransmissions. Coalescing should be made according to effective MSS.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="tcp_cork_nodelay" type="script">
      <objective>Checking behaviour of the TCP_CORK and TCP_NODELAY socket option called on the same socket in different orders.</objective>
      <notes>It is testing Level5 specific behaviour (TCP_CORK has no send timeout)</notes>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>TCP_NODELAY socket option value after setting TCP_CORK is ON</verdict>
            <verdict>TCP_NODELAY socket option value after unsetting TCP_CORK is ON</verdict>
            <verdict>TCP_CORK socket option value after setting TCP_NODELAY is ON</verdict>
            <verdict>Data is not received on the TST side</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="tcp_maxseg" type="script">
      <objective>Check the behaviour of the TCP_MAXSEG socket option on the newly created socket. Than check the behaviour on connected socket and check, that packets are fragmented with respect to the MSS requested by the user.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="before_bind"/>
        <arg name="buf_size"/>
        <arg name="env"/>
        <arg name="mss_1"/>
        <arg name="mss_2"/>
        <arg name="passive"/>
        <notes/>
      </iter>
    </test>
    <test name="tcp_cork_aux" type="script">
      <objective>Check that when the TCP_CORK option is set on the socket and some data are transmitted, it is transmitted in the packets of size equal to MSS.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="connection_mss">1012</arg>
        <arg name="env"/>
        <arg name="first_func">sendfile</arg>
        <arg name="packets_number"/>
        <arg name="remove_cork">FALSE</arg>
        <arg name="second_func">send</arg>
        <arg name="send_size">600</arg>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="linux&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
          </result>
        </results>
        <results tags="linux-2.6&lt;40&amp;!v5&amp;!disable_timestamps">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="linux-2.6&lt;40&amp;!v5&amp;disable_timestamps">
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5&amp;!disable_timestamps" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">-1</arg>
        <arg name="env"/>
        <arg name="first_func">send</arg>
        <arg name="packets_number">-1</arg>
        <arg name="remove_cork"/>
        <arg name="second_func"/>
        <arg name="send_size">600</arg>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="linux-2.6&lt;40&amp;!v5">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">1012</arg>
        <arg name="env"/>
        <arg name="first_func"/>
        <arg name="packets_number">5</arg>
        <arg name="remove_cork"/>
        <arg name="second_func"/>
        <arg name="send_size"/>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="linux&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
          </result>
        </results>
        <results tags="v5&amp;!disable_timestamps" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">1012</arg>
        <arg name="env"/>
        <arg name="first_func"/>
        <arg name="packets_number">10</arg>
        <arg name="remove_cork"/>
        <arg name="second_func"/>
        <arg name="send_size"/>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="linux&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
          </result>
        </results>
        <results tags="v5&amp;!disable_timestamps" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">512</arg>
        <arg name="env"/>
        <arg name="first_func"/>
        <arg name="packets_number">5</arg>
        <arg name="remove_cork"/>
        <arg name="second_func"/>
        <arg name="send_size"/>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="linux&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
          </result>
        </results>
        <results tags="v5&amp;!disable_timestamps" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">512</arg>
        <arg name="env"/>
        <arg name="first_func"/>
        <arg name="packets_number">10</arg>
        <arg name="remove_cork"/>
        <arg name="second_func"/>
        <arg name="send_size"/>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="linux&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
          </result>
        </results>
        <results tags="v5&amp;!disable_timestamps" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">-1</arg>
        <arg name="env"/>
        <arg name="first_func">send</arg>
        <arg name="packets_number">-1</arg>
        <arg name="remove_cork"/>
        <arg name="second_func"/>
        <arg name="send_size">300</arg>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="v5" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">-1</arg>
        <arg name="env"/>
        <arg name="first_func"/>
        <arg name="packets_number">5</arg>
        <arg name="remove_cork"/>
        <arg name="second_func"/>
        <arg name="send_size"/>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="v5" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">-1</arg>
        <arg name="env"/>
        <arg name="first_func"/>
        <arg name="packets_number">10</arg>
        <arg name="remove_cork"/>
        <arg name="second_func"/>
        <arg name="send_size"/>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="v5" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">-1</arg>
        <arg name="env"/>
        <arg name="first_func">sendfile</arg>
        <arg name="packets_number"/>
        <arg name="remove_cork"/>
        <arg name="second_func"/>
        <arg name="send_size"/>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="v5" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">1012</arg>
        <arg name="env"/>
        <arg name="first_func">sendfile</arg>
        <arg name="packets_number"/>
        <arg name="remove_cork">FALSE</arg>
        <arg name="second_func">send</arg>
        <arg name="send_size">300</arg>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="linux&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
          </result>
        </results>
        <results tags="v5&amp;!disable_timestamps" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">1012</arg>
        <arg name="env"/>
        <arg name="first_func">sendfile</arg>
        <arg name="packets_number"/>
        <arg name="remove_cork">TRUE</arg>
        <arg name="second_func">send</arg>
        <arg name="send_size"/>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="linux&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
          </result>
        </results>
        <results tags="v5&amp;!disable_timestamps" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">1012</arg>
        <arg name="env"/>
        <arg name="first_func"/>
        <arg name="packets_number"/>
        <arg name="remove_cork"/>
        <arg name="second_func">sendfile</arg>
        <arg name="send_size"/>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="linux&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
          </result>
        </results>
        <results tags="v5&amp;!disable_timestamps" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 1012 instead of 1000</verdict>
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">512</arg>
        <arg name="env"/>
        <arg name="first_func">send</arg>
        <arg name="packets_number">-1</arg>
        <arg name="remove_cork"/>
        <arg name="second_func"/>
        <arg name="send_size"/>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="linux&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
          </result>
        </results>
        <results tags="linux-2.6&lt;40&amp;!v5&amp;!disable_timestamps">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="linux-2.6&lt;40&amp;!v5&amp;disable_timestamps">
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5&amp;!disable_timestamps" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="connection_mss">512</arg>
        <arg name="env"/>
        <arg name="first_func">sendfile</arg>
        <arg name="packets_number"/>
        <arg name="remove_cork"/>
        <arg name="second_func"/>
        <arg name="send_size"/>
        <arg name="set_maxseg"/>
        <arg name="ts_option_length"/>
        <notes/>
        <results tags="linux&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
          </result>
        </results>
        <results tags="linux-2.6&lt;40&amp;!v5&amp;!disable_timestamps">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="linux-2.6&lt;40&amp;!v5&amp;disable_timestamps">
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5&amp;!disable_timestamps" notes="Acceptable behaviour">
          <result value="PASSED"/>
          <result value="PASSED">
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
        <results tags="v5&amp;disable_timestamps" notes="Acceptable behaviour">
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
          </result>
          <result value="FAILED">
            <verdict>The MSS value is 512 instead of 500</verdict>
            <verdict>Coalescing missing few times</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="tcp_maxseg_and_pmtu" type="script">
      <objective>Check behaviour of the TCP_MAXSEG socket option in case when MTU of a route is changed (the MSS should be set to MTU - IP/TCP headers size including options)</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="mtu_1"/>
        <arg name="mtu_2"/>
        <arg name="mtu_3"/>
        <notes/>
      </iter>
    </test>
    <test name="error_send_recv_icmp" type="script">
      <objective>Check that send/receive or iomux function reports about pending errors received by incoming ICMP messages, and that the value of SO_ERROR socket option is reset to zero after reporting it with send/receive function.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">FALSE</arg>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
        <results tags="linux-3.10&amp;v5&amp;laddr_all&amp;udp_connect_no_handover" key="ST-484">
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">FALSE</arg>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
        <results tags="linux-3.10&amp;v5&amp;laddr_all&amp;udp_connect_no_handover" key="ST-484">
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">FALSE</arg>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
        <results tags="linux-3.10&amp;v5&amp;laddr_all&amp;udp_connect_no_handover" key="ST-484">
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">FALSE</arg>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
        <results tags="linux-3.10&amp;v5&amp;laddr_all&amp;udp_connect_no_handover" key="ST-484">
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">FALSE</arg>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
        <results tags="linux-3.10&amp;v5&amp;laddr_all&amp;udp_connect_no_handover" key="ST-484">
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Receive function returned success instead of failure</verdict>
          </result>
        </results>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">TRUE</arg>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">TRUE</arg>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">TRUE</arg>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">TRUE</arg>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">TRUE</arg>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>Receive function returned strange result</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Receive function returned success instead of failure</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Receive function returned success instead of failure</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Receive function returned success instead of failure</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Receive function returned success instead of failure</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Receive function returned success instead of failure</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Receive function returned success instead of failure</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Receive function returned success instead of failure</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Receive function returned success instead of failure</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">send</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Send function returned success instead of failure</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">sendto</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Send function returned success instead of failure</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Send function returned success instead of failure</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">write</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Send function returned success instead of failure</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">writev</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Send function returned success instead of failure</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type">1</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code">5</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code">2</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno"/>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">aio_write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">aio_read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="linux&amp;v5" key="AIO DGRAM">
          <result value="FAILED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock receive function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock receive function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock receive function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock receive function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock receive function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock receive function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock receive function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock receive function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock receive function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux functon unexpectedly failed with errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux function returned -1 and errno EINVAL</verdict>
          </result>
        </results>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Iomux function didn't notice an error on the socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Iomux function didn't notice an error on the socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Iomux function didn't notice an error on the socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Iomux function didn't notice an error on the socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Iomux function didn't notice an error on the socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>Iomux function didn't notice an error on the socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>SO_ERROR socket option is equal to OK instead of EHOSTUNREACH when there is an ICMP error (11, 1) on the socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">TRUE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>SO_ERROR socket option is equal to OK instead of EHOSTUNREACH when there is an ICMP error (11, 1) on the socket</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux function returned -1 and errno EINVAL</verdict>
          </result>
        </results>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock iomux function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux function returned -1 and errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux function returned -1 and errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux function returned -1 and errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux function returned -1 and errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux function returned -1 and errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux function returned -1 and errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux function returned -1 and errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux function returned -1 and errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux function returned -1 and errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux function returned -1 and errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">oo_epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
        <results tags="!(ool_epoll=1)&amp;!(ool_epoll=3)" key="ON-3671">
          <result value="FAILED">
            <verdict>Iomux function returned -1 and errno EINVAL</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock iomux function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock iomux function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock iomux function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock iomux function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock iomux function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock iomux function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>ICMP error (11,1) does not unblock iomux function</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">select</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">pselect</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">poll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">ppoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">send</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">sendto</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">writev</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">send</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">sendto</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">writev</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">aio_read_suspend</arg>
        <arg name="icmp_code">3</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">send</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">sendto</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">write</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">writev</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">send</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">sendto</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">write</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">writev</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">send</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">send</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">sendto</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">sendto</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">writev</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">writev</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">send</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">send</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">sendto</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">sendto</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">writev</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">writev</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">send</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">sendto</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">writev</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">send</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">sendto</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">writev</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">0</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">readv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">send</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">sendto</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">writev</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">onload_zc_recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno"/>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">12</arg>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">readv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">0</arg>
        <arg name="func">recvmmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">send</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">send</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">sendto</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">sendto</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">writev</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">writev</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">onload_zc_recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">readv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">recvfrom</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">recvmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">read</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">readv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">send</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">sendto</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">writev</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">send</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">sendto</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">sendmsg</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">write</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">writev</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">onload_zc_recv</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">onload_zc_hlrx_recv_zc</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno"/>
        <arg name="func">onload_zc_hlrx_recv_copy</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="is_iomux"/>
        <arg name="pending_err"/>
        <notes/>
      </iter>
    </test>
    <test name="error_icmp_recvmmsg" type="script">
      <objective>Check that recvmmsg() function reports about pending errors received by incoming ICMP messages, and that the value of SO_ERROR socket option is reset to zero after reporting it with recvmmsg() function.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">FALSE</arg>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">FALSE</arg>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">FALSE</arg>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">FALSE</arg>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">FALSE</arg>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">FALSE</arg>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>recvmmsg() returned unexpected number of packets</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>recvmmsg() returned unexpected number of packets</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">11</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="(linux-4.9|linux-4&gt;=14)&amp;!(linux-4.9.0-0.bpo.5|linux-4.9.0-4)" key="ST-1152">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">1</arg>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">1</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">1</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">1</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">1</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">during</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">after</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="exp_errno">0</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error"/>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">TRUE</arg>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">TRUE</arg>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">TRUE</arg>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">TRUE</arg>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">TRUE</arg>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr">TRUE</arg>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">1</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">3</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type">1</arg>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_code">0</arg>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">ENOPROTOOPT</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="exp_errno">ENETUNREACH</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="data_size"/>
        <arg name="env"/>
        <arg name="exp_errno">EOPNOTSUPP</arg>
        <arg name="icmp_code"/>
        <arg name="icmp_type"/>
        <arg name="ip_recverr"/>
        <arg name="pack_num"/>
        <arg name="send_error">before</arg>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
        <results tags="linux-3.10&amp;!v5" key="ST-484">
          <result value="FAILED">
            <verdict>recvmmsg() function unexpectedly successeed</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="error_errqueue" type="script">
      <objective>Check that the value of SO_ERROR socket option can be updated on retriving error message from error queue containg incoming ICMP messages.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="icmp_msgs">type:12,code:0,errno:EPROTO</arg>
        <arg name="iomux"/>
        <arg name="select_err_queue"/>
        <arg name="set_msg_peek"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="icmp_msgs"/>
        <arg name="iomux"/>
        <arg name="select_err_queue"/>
        <arg name="set_msg_peek"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="icmp_msgs">type:11,code:0,errno:EHOSTUNREACH</arg>
        <arg name="iomux"/>
        <arg name="select_err_queue"/>
        <arg name="set_msg_peek"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="icmp_msgs">type:3,code:0,errno:ENETUNREACH</arg>
        <arg name="iomux"/>
        <arg name="select_err_queue"/>
        <arg name="set_msg_peek"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="icmp_msgs">type:3,code:3,errno:ECONNREFUSED</arg>
        <arg name="iomux"/>
        <arg name="select_err_queue"/>
        <arg name="set_msg_peek"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="icmp_msgs">
                    type:3,code:3,errno:ECONNREFUSED/
                    type:3,code:3,errno:ECONNREFUSED/
                    type:3,code:3,errno:ECONNREFUSED/
                    type:11,code:0,errno:EHOSTUNREACH
                </arg>
        <arg name="iomux"/>
        <arg name="select_err_queue"/>
        <arg name="set_msg_peek"/>
        <notes/>
        <results tags="ef100_soc" key="ST-2584" notes="Specific EF100+aarch64 behaviour on pure Linux and with Onload">
          <result value="PASSED">
            <verdict>After extracting ICMP error message (number 1) from error queue SO_ERROR socket option is set to ENOENT, but it is expected to be ECONNREFUSED</verdict>
            <verdict>After extracting ICMP error message (number 2) from error queue SO_ERROR socket option is set to ENOENT, but it is expected to be ECONNREFUSED</verdict>
            <verdict>After extracting ICMP error message (number 3) from error queue SO_ERROR socket option is set to ENOENT, but it is expected to be EHOSTUNREACH</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="icmp_msgs">
                    type:3,code:0,errno:ENETUNREACH/
                    type:3,code:3,errno:ECONNREFUSED/
                    type:11,code:0,errno:EHOSTUNREACH
                </arg>
        <arg name="iomux"/>
        <arg name="select_err_queue"/>
        <arg name="set_msg_peek"/>
        <notes/>
        <results tags="ef100_soc" key="ST-2584" notes="Specific EF100+aarch64 behaviour on pure Linux and with Onload">
          <result value="PASSED">
            <verdict>After extracting ICMP error message (number 1) from error queue SO_ERROR socket option is set to ENOENT, but it is expected to be ECONNREFUSED</verdict>
            <verdict>After extracting ICMP error message (number 2) from error queue SO_ERROR socket option is set to ENOENT, but it is expected to be EHOSTUNREACH</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="icmp_msgs">
                    type:11,code:0,errno:EHOSTUNREACH/
                    type:12,code:0,errno:EPROTO
                </arg>
        <arg name="iomux"/>
        <arg name="select_err_queue"/>
        <arg name="set_msg_peek"/>
        <notes/>
        <results tags="ef100_soc" key="ST-2584" notes="Specific EF100+aarch64 behaviour on pure Linux and with Onload">
          <result value="PASSED">
            <verdict>After extracting ICMP error message (number 1) from error queue SO_ERROR socket option is set to ENOENT, but it is expected to be EPROTO</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="error_errqueue_flush" type="script">
      <objective>Check that disabling of IP_RECVERR option flushes socket error queue and clears the value of SO_ERROR socket option.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="icmp_msgs"/>
        <arg name="iomux"/>
        <arg name="select_err_queue"/>
        <notes/>
      </iter>
    </test>
    <test name="error_errqueue_disabled" type="script">
      <objective>Check that any incoming ICMP error message is discarded while IP_RECVERR option is disabled.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="icmp_msgs"/>
        <arg name="iomux"/>
        <arg name="select_err_queue"/>
        <notes/>
      </iter>
    </test>
    <test name="error_errqueue_tcp" type="script">
      <objective>Check that the value of SO_ERROR socket option is not updated on retriving error message from error queue containg incoming ICMP messages.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="icmp_msgs"/>
        <arg name="iomux"/>
        <arg name="passive"/>
        <arg name="select_err_queue"/>
        <notes/>
      </iter>
    </test>
    <test name="error_tcp" type="script">
      <objective>Check that the value of SO_ERROR socket option is not updated on retriving error message from error queue containg incoming ICMP messages.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="icmp_msgs"/>
        <arg name="iomux"/>
        <arg name="passive"/>
        <arg name="select_err_queue"/>
        <notes/>
      </iter>
    </test>
    <test name="error_icmp_rcv" type="script">
      <objective>Check that SO_ERROR socket option can be used to get the pending errors reported by incoming ICMP messages.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EHOSTUNREACH</arg>
        <arg name="icmp_msgs"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">ECONNREFUSED</arg>
        <arg name="icmp_msgs"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="exp_errno">EPROTO</arg>
        <arg name="icmp_msgs"/>
        <notes/>
      </iter>
    </test>
    <test name="ip_mtu_inapprop_state" type="script">
      <objective>Get IP_MTU socket option on just created/bound/listening TCP socket or created/bound UDP socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="state"/>
        <arg name="opt_name"/>
        <notes/>
      </iter>
    </test>
    <test name="tcp_defer_accept_simple" type="script">
      <objective>Check that accept() is unblocked when data arrive if there is TCP_DEFER_ACCEPT option on the socket.</objective>
      <notes>History in Linux 6121, OL 603</notes>
      <iter result="PASSED">
        <arg name="big_packet"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="test_timeout">TRUE</arg>
        <arg name="opt_val"/>
        <notes/>
        <results tags="linux-2.6&lt;32">
          <result value="FAILED">
            <verdict>accept() is still hanging</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_loop=2|ool_loop=4)&amp;!reuse_stack" key="ON-1617">
          <result value="FAILED">
            <verdict>accept() done without any data from client</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ool_loop=3|((ool_loop=1|ool_loop=2|ool_loop=4)&amp;reuse_stack))" key="ON-1617">
          <result value="FAILED">
            <verdict>accept() is still hanging</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="big_packet"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="test_timeout">FALSE</arg>
        <arg name="opt_val"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=2|ool_loop=4)&amp;!reuse_stack" key="ON-1617">
          <result value="FAILED">
            <verdict>accept() done without any data from client</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="big_packet"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="test_timeout">TRUE</arg>
        <arg name="opt_val"/>
        <notes/>
        <results tags="linux-2.6&lt;32&amp;!v5">
          <result value="FAILED">
            <verdict>accept() is still hanging</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="big_packet"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="test_timeout">FALSE</arg>
        <arg name="opt_val"/>
        <notes/>
      </iter>
    </test>
    <test name="tcp_defer_accept_rst" type="script">
      <objective>Check that listening socket with non-zero TCP_DEFER_ACCEPT option reset connection on timeout.</objective>
      <notes>History in Linux 6121, OL 603</notes>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <notes/>
      </iter>
    </test>
    <test name="inherit_derived" type="script">
      <objective>Check that socket inherits options after fork() and execve().</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method"/>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_BINDTODEVICE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_PRIORITY</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_PRIORITY</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_PRIORITY</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_PRIORITY</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_PRIORITY</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_PRIORITY</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_PRIORITY</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux)&amp;v5" key="ON-25" notes="SO_DONTROUTE is not supported in V5.">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_DONTROUTE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="(linux)&amp;v5" key="ON-25" notes="SO_DONTROUTE is not supported in V5.">
          <result value="FAILED">
            <verdict>setsockopt(SOL_SOCKET, SO_DONTROUTE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">FALSE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before">TRUE</arg>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ERROR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ERROR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ERROR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ERROR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TYPE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TYPE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TYPE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TYPE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMP</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMP</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMP</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMP</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMP</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPNS</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPNS</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPNS</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPNS</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPNS</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPING</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPING</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateSocket_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPING</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">DuplicateHandle_self</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPING</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ERROR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TYPE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ERROR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TYPE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMP</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPNS</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPING</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">inherit_no_net_init</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPING</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_ERROR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TYPE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMP</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPNS</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method">exec</arg>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_TIMESTAMPING</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method"/>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_SNDBUFFORCE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="before"/>
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="method"/>
        <arg name="opt_level"/>
        <arg name="opt_name">SO_RCVBUFFORCE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="zero_optlen" type="script">
      <objective>Check which options of SOL_SOCKET level accept zero length of value.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="opt_name"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="ip_tos_tcp" type="script">
      <objective>Check that linux clears 2 last bits on IP_TOS option value.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="bindtodevice_connect" type="script">
      <objective>Check that TCP socket bound to an interface can connect only to an address routable via this interface.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="blocking"/>
        <notes/>
      </iter>
    </test>
    <test name="bindtodevice_vs_bind" type="script">
      <objective>Check that if socket is bound to device and to address on other device, it sends and receives packet only via the device it is bound to.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.two_nets.iut_second</arg>
        <arg name="mtu_first"/>
        <arg name="mtu_second">5000</arg>
        <arg name="sock_type"/>
        <notes/>
        <results tags="linux-2.6&gt;=40&amp;linux-2.6&lt;42">
          <result value="FAILED">
            <verdict>Impossible to send jumbo frame when a socket is bound to an address on an interface with small MTU</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.two_nets.iut_first_ipv6</arg>
        <arg name="mtu_first"/>
        <arg name="mtu_second"/>
        <arg name="sock_type"/>
        <notes/>
        <results tags="linux" notes="On IPv6 binding socket to an interface is not enough, there should be a route to destination over that interface">
          <result value="PASSED">
            <verdict>The first sendto() unexpectedly failed with errno ENETUNREACH</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.two_nets.iut_second_ipv6</arg>
        <arg name="mtu_first"/>
        <arg name="mtu_second"/>
        <arg name="sock_type"/>
        <notes/>
        <results tags="linux" notes="On IPv6 binding socket to an interface is not enough, there should be a route to destination over that interface">
          <result value="PASSED">
            <verdict>The first sendto() unexpectedly failed with errno ENETUNREACH</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.two_nets.iut_second</arg>
        <arg name="mtu_first"/>
        <arg name="mtu_second">1500</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.two_nets.iut_first</arg>
        <arg name="mtu_first"/>
        <arg name="mtu_second"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="so_priority_and_tos" type="script">
      <objective>Check that both SO_PRIORITY and IP_TOS options can be used to set TOS field of outgoing IP packets.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="connected"/>
        <arg name="env"/>
        <notes/>
        <results tags="linux-3&gt;=2&amp;!v5" key="ON-3295">
          <result value="PASSED">
            <verdict>Setting IP_TOS option to IPTOS_MINCOST leads to SO_PRIORITY option value is 0</verdict>
          </result>
        </results>
        <results tags="linux-2|v5" key="ON-3295">
          <result value="PASSED">
            <verdict>Setting IP_TOS option to IPTOS_MINCOST leads to SO_PRIORITY option value is 1</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="sndbuf_stream" type="script">
      <objective>Explore the possibility to change send buffer size by means of setsockopt(SO_SNDBUF) and influence new value on actual buffer size.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">130000</arg>
        <arg name="force"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">60000</arg>
        <arg name="force"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">4000</arg>
        <arg name="force"/>
        <notes/>
        <results tags="linux&amp;ool_loop=0">
          <result value="FAILED">
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="proper_sequence">TRUE</arg>
        <arg name="server"/>
        <arg name="sndbuf_new">10</arg>
        <arg name="force"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 4608</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 2048</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
        <results tags="v5">
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 2048</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet:loopback,addr:'tst_addr':inet:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="proper_sequence">FALSE</arg>
        <arg name="server"/>
        <arg name="sndbuf_new">10</arg>
        <arg name="force"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 4608</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 4480</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 2048</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
        <results tags="v5">
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 2048</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">4000</arg>
        <arg name="force"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">130000</arg>
        <arg name="force"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">60000</arg>
        <arg name="force"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">10</arg>
        <arg name="force"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 4608</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 2048</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
        <results tags="v5">
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 2048</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">130000</arg>
        <arg name="force"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">60000</arg>
        <arg name="force"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">4000</arg>
        <arg name="force"/>
        <notes/>
        <results tags="linux&amp;ool_loop=0">
          <result value="FAILED">
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="proper_sequence">TRUE</arg>
        <arg name="server"/>
        <arg name="sndbuf_new">10</arg>
        <arg name="force"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 4608</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 2048</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
        <results tags="v5">
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 2048</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">{{{'pco_iut':IUT,'pco_tst':IUT},addr:'iut_addr':inet6:loopback,addr:'tst_addr':inet6:loopback,if:'iut_if'}},'iut_if'='iut_if'</arg>
        <arg name="proper_sequence">FALSE</arg>
        <arg name="server"/>
        <arg name="sndbuf_new">10</arg>
        <arg name="force"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 4608</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 4480</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 2048</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
        <results tags="v5">
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 2048</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">4000</arg>
        <arg name="force"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">130000</arg>
        <arg name="force"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">60000</arg>
        <arg name="force"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <arg name="proper_sequence"/>
        <arg name="server"/>
        <arg name="sndbuf_new">10</arg>
        <arg name="force"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 4608</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 2048</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
        <results tags="v5">
          <result value="FAILED">
            <verdict>SO_SNDBUF has been set to 10, but got value is 2048</verdict>
            <verdict>SO_SNDBUF setting is ignored, too much data is stored</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="rcvbuf_dgram" type="script">
      <objective>Check that value returned by means of getsockopt(SO_RCVBUF) is effective recieve buffer length.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="payload_len"/>
        <arg name="rcvbuf_new"/>
        <arg name="force"/>
        <notes/>
      </iter>
    </test>
    <test name="sndbuf_dgram" type="script">
      <objective>Check that value returned by means of getsockopt(SO_SNDBUF) is effective send buffer length.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sndbuf_new">65000</arg>
        <arg name="force"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Effective send buffer length is 130000, Max datagram payload length 65507</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sndbuf_new">1472</arg>
        <arg name="force"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Effective send buffer length is 2944, Max datagram payload length 2944</verdict>
          </result>
          <result value="PASSED">
            <verdict>Effective send buffer length is 4480, Max datagram payload length 4480</verdict>
          </result>
          <result value="PASSED">
            <verdict>Effective send buffer length is 4608, Max datagram payload length 4608</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sndbuf_new">1000</arg>
        <arg name="force"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Effective send buffer length is 2048, Max datagram payload length 2048</verdict>
          </result>
          <result value="PASSED">
            <verdict>Effective send buffer length is 4480, Max datagram payload length 4480</verdict>
          </result>
          <result value="PASSED">
            <verdict>Effective send buffer length is 4608, Max datagram payload length 4608</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sndbuf_new">500</arg>
        <arg name="force"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Effective send buffer length is 2048, Max datagram payload length 2048</verdict>
          </result>
          <result value="PASSED">
            <verdict>Effective send buffer length is 4480, Max datagram payload length 4480</verdict>
          </result>
          <result value="PASSED">
            <verdict>Effective send buffer length is 4608, Max datagram payload length 4608</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="default_bufs" type="script">
      <objective>Check that default lengths of send and receive socket buffers are set according to system wide appropriate values.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="change_val">TRUE</arg>
        <arg name="env"/>
        <arg name="server"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
        <results tags="v5&amp;(netns_iut|netns_all)" key="ON-7537">
          <result value="PASSED">
            <verdict>(created pco_iut socket) SO_SNDBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(created pco_iut socket) SO_RCVBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(bound pco_iut socket) SO_SNDBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(bound pco_iut socket) SO_RCVBUF default socket option value differentiates from system wide one</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="change_val">TRUE</arg>
        <arg name="env">VAR.env.iut_native</arg>
        <arg name="server">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5&amp;(netns_iut|netns_all)&amp;linux-4&lt;15" key="ST-1271, ON-7537">
          <result value="PASSED">
            <verdict>(created pco_iut socket) SO_SNDBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(created pco_iut socket) SO_RCVBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(bound pco_iut socket) SO_SNDBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(bound pco_iut socket) SO_RCVBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(listening pco_iut socket) SO_SNDBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(listening pco_iut socket) SO_RCVBUF default socket option value differentiates from system wide one</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="change_val">TRUE</arg>
        <arg name="env">VAR.env.iut_native</arg>
        <arg name="server">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5&amp;(netns_iut|netns_all)&amp;linux-4&lt;15" key="ST-1271, ON-7537">
          <result value="PASSED">
            <verdict>(created pco_iut socket) SO_SNDBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(created pco_iut socket) SO_RCVBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(bound pco_iut socket) SO_SNDBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(bound pco_iut socket) SO_RCVBUF default socket option value differentiates from system wide one</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="change_val">TRUE</arg>
        <arg name="env">VAR.env.iut_native_ipv6</arg>
        <arg name="server">TRUE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5&amp;(netns_iut|netns_all)&amp;linux-4&lt;15" key="ST-1271, ON-7537">
          <result value="PASSED">
            <verdict>(created pco_iut socket) SO_SNDBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(created pco_iut socket) SO_RCVBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(bound pco_iut socket) SO_SNDBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(bound pco_iut socket) SO_RCVBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(listening pco_iut socket) SO_SNDBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(listening pco_iut socket) SO_RCVBUF default socket option value differentiates from system wide one</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="change_val">TRUE</arg>
        <arg name="env">VAR.env.iut_native_ipv6</arg>
        <arg name="server">FALSE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5&amp;(netns_iut|netns_all)&amp;linux-4&lt;15" key="ST-1271, ON-7537">
          <result value="PASSED">
            <verdict>(created pco_iut socket) SO_SNDBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(created pco_iut socket) SO_RCVBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(bound pco_iut socket) SO_SNDBUF default socket option value differentiates from system wide one</verdict>
            <verdict>(bound pco_iut socket) SO_RCVBUF default socket option value differentiates from system wide one</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="change_val">FALSE</arg>
        <arg name="env"/>
        <arg name="server"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="max_bufs" type="script">
      <objective>Check that values that can be set with socket options SO_RCVBUF and SO_SNDBUF are limited by the system wide maximums rmem_max and wmem_max.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="small_tcp_bufs">FALSE</arg>
        <arg name="check_sndbuf"/>
        <arg name="max_value_change"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="small_tcp_bufs"/>
        <arg name="check_sndbuf"/>
        <arg name="max_value_change"/>
        <notes/>
      </iter>
    </test>
    <test name="error_rst" type="script">
      <objective>Check behaviour of getsockopt(SO_ERROR) function on socket after RST was recieved on it.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="errind_conn_not_conn" type="script">
      <objective>Check infuence of connect, reconnect, disconnect on value of SO_DGRAM_ERRIND socket option.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="errind_conn_disable" type="script">
      <objective>Check absence of error indication on connected socket after disabling of SO_DGRAM_ERRIND option.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="errind_not_conn" type="script">
      <objective>Check that disabling/enabling SO_DGRAM_ERRIND option on not connected socket follows to absence or presence error indication correspondingly.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="udp_cork" type="script">
      <objective>Checking UDP_CORK functionality providing a coalescing of the UDP packets.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="packet_size"/>
        <arg name="sndbuf"/>
        <arg name="stop_type"/>
        <arg name="use_sendmmsg"/>
        <notes/>
        <results tags="linux&amp;v5" key="ON-29">
          <result value="FAILED">
            <verdict>setsockopt(UDP_CORK) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="rcvtimeo_recvmmsg" type="script">
      <objective>Check interaction of SO_RCVTIMEO option and timeout field in recvmmsg() function.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="after_pack"/>
        <arg name="before_pack"/>
        <arg name="data_size"/>
        <arg name="during_pack"/>
        <arg name="env"/>
        <arg name="rcvtimeo"/>
        <arg name="timeout"/>
        <arg name="vlen"/>
        <notes/>
      </iter>
    </test>
    <test name="tcp_quickack" type="script">
      <objective>Check that ACK is sent immediately if TCP_QUICKACK socket options is switched on.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="do_recv">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="opt_val">1</arg>
        <arg name="packet_num"/>
        <notes/>
        <results tags="v5" key="ON-4418">
          <result value="PASSED"/>
          <result value="FAILED">
            <verdict>ACKs are sent too often.</verdict>
          </result>
        </results>
        <results tags="v5&amp;(ef100_soc|x3)&amp;(ool_spin|tiny_spin)&amp;!(int_spin|ool_int_driven)" key="ON-13767">
          <result value="FAILED">
            <verdict>ACKs are not sent immediately.</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="do_recv">FALSE</arg>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="opt_val">0</arg>
        <arg name="packet_num"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="do_recv">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="opt_val"/>
        <arg name="packet_num"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="do_recv">TRUE</arg>
        <arg name="env"/>
        <arg name="opt_val"/>
        <arg name="packet_num"/>
        <notes/>
      </iter>
    </test>
    <test name="tcp_defer_accept_close" type="script">
      <objective>Check what happens if  TCP_DEFER_ACCEPT option is set on a listening socket and established connection is closed before successful  accept() call.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="peer_close"/>
        <arg name="use_shutdown"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>accept() successed after connection was closed by a peer</verdict>
            <verdict>The socket returned by accept() is in TCP_CLOSE_WAIT state</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="peer_close"/>
        <arg name="use_shutdown"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>accept() successed after connection was closed by a peer</verdict>
            <verdict>The socket returned by accept() is in TCP_CLOSE_WAIT state</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="peer_close"/>
        <arg name="use_shutdown"/>
        <notes/>
        <results tags="v5" key="ON-1617">
          <result value="FAILED">
            <verdict>accept() successed after connection was closed by a peer</verdict>
            <verdict>The socket returned by accept() is in TCP_ESTABLISHED state</verdict>
          </result>
          <result value="FAILED">
            <verdict>accept() successed before receiving any data from a peer</verdict>
          </result>
          <result value="PASSED">
            <verdict>accept() successed after connection was closed by a peer</verdict>
            <verdict>The socket returned by accept() is in TCP_CLOSE_WAIT state</verdict>
          </result>
        </results>
        <results tags="linux&amp;(!v5|ool_loop=0)">
          <result value="PASSED">
            <verdict>accept() successed after connection was closed by a peer</verdict>
            <verdict>The socket returned by accept() is in TCP_CLOSE_WAIT state</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers"/>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
        <results tags="linux-2.6&lt;=32&amp;(!v5|ool_loop=0|ool_loop=1)">
          <result value="PASSED">
            <verdict>iomux() missed expected event(s) EVT_WR</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">poll</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers">FALSE</arg>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=2|ool_loop=4)&amp;!reuse_stack" key="ON-1617">
          <result value="FAILED">
            <verdict>iomux() returned unexpected event(s) EVT_RD | EVT_EXC | EVT_ERR | EVT_HUP</verdict>
            <verdict>send() failed but returned unexpected errno: errno is set to ECONNRESET instead of EPIPE</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers">FALSE</arg>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=2|ool_loop=4)&amp;!reuse_stack" key="ON-1617">
          <result value="FAILED">
            <verdict>iomux() returned unexpected event(s) EVT_RD | EVT_EXC | EVT_ERR | EVT_HUP</verdict>
            <verdict>send() failed but returned unexpected errno: errno is set to ECONNRESET instead of EPIPE</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">epoll</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers">FALSE</arg>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=2|ool_loop=4)&amp;!reuse_stack" key="ON-1617">
          <result value="FAILED">
            <verdict>iomux() returned unexpected event(s) EVT_RD | EVT_EXC | EVT_ERR | EVT_HUP</verdict>
            <verdict>send() failed but returned unexpected errno: errno is set to ECONNRESET instead of EPIPE</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers">FALSE</arg>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=2|ool_loop=4)&amp;!reuse_stack" key="ON-1617">
          <result value="FAILED">
            <verdict>iomux() returned unexpected event(s) EVT_RD | EVT_EXC | EVT_ERR | EVT_HUP</verdict>
            <verdict>send() failed but returned unexpected errno: errno is set to ECONNRESET instead of EPIPE</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers">FALSE</arg>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=2|ool_loop=4)&amp;!reuse_stack" key="ON-1617">
          <result value="FAILED">
            <verdict>iomux() returned unexpected event(s) EVT_RD | EVT_EXC | EVT_ERR | EVT_HUP</verdict>
            <verdict>send() failed but returned unexpected errno: errno is set to ECONNRESET instead of EPIPE</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">oo_epoll</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers">FALSE</arg>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=2|ool_loop=4)&amp;!reuse_stack" key="ON-1617">
          <result value="FAILED">
            <verdict>iomux() returned unexpected event(s) EVT_RD | EVT_EXC | EVT_ERR | EVT_HUP</verdict>
            <verdict>send() failed but returned unexpected errno: errno is set to ECONNRESET instead of EPIPE</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable">FALSE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux"/>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers">TRUE</arg>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">select</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers"/>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">pselect</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers"/>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">poll</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers"/>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">ppoll</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers"/>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">epoll</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers"/>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">epoll_pwait</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers"/>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable">TRUE</arg>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">epoll_pwait2</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers"/>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable"/>
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="iomux"/>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers"/>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable"/>
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="iomux"/>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers"/>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">select</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers">FALSE</arg>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=2|ool_loop=4)&amp;!reuse_stack" key="ON-1617">
          <result value="FAILED">
            <verdict>iomux() returned unexpected event(s) EVT_RD</verdict>
            <verdict>send() failed but returned unexpected errno: errno is set to ECONNRESET instead of EPIPE</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="check_writable"/>
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="iomux">pselect</arg>
        <arg name="is_blocking"/>
        <arg name="overfill_buffers">FALSE</arg>
        <arg name="peer_close"/>
        <arg name="swap_pco"/>
        <arg name="use_shutdown"/>
        <notes/>
        <results tags="v5&amp;(ool_loop=2|ool_loop=4)&amp;!reuse_stack" key="ON-1617">
          <result value="FAILED">
            <verdict>iomux() returned unexpected event(s) EVT_RD</verdict>
            <verdict>send() failed but returned unexpected errno: errno is set to ECONNRESET instead of EPIPE</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="ip_pktoptions" type="script">
      <objective>Check that IP_PKTOPTIONS socket option allows to obtain values of IP_PKTINFO and IP_TTL socket options via CMSG interface on SOCK_STREAM socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="active_connection">TRUE</arg>
        <arg name="env"/>
        <arg name="garbage"/>
        <arg name="set_new_ttl">FALSE</arg>
        <arg name="set_pktinfo">TRUE</arg>
        <arg name="set_recvttl">TRUE</arg>
        <arg name="traffic"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>ipi_ifindex member of in_pktinfo structure is equal to 0</verdict>
            <verdict>Value of IP_TTL socket option obtained via IP_PKTOPTIONS is equal to value of IP_MULTICAST_TTL socket option returned by getsockopt()</verdict>
          </result>
        </results>
        <results tags="!v5&amp;kernel-64&amp;ul-32&amp;!linux-3">
          <result value="FAILED">
            <verdict>Failed to process IP_PKTOPTIONS value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active_connection">TRUE</arg>
        <arg name="env"/>
        <arg name="garbage"/>
        <arg name="set_new_ttl">TRUE</arg>
        <arg name="set_pktinfo">TRUE</arg>
        <arg name="set_recvttl"/>
        <arg name="traffic"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>ipi_ifindex member of in_pktinfo structure is equal to 0</verdict>
            <verdict>Value of IP_TTL socket option obtained via IP_PKTOPTIONS is equal to value of IP_MULTICAST_TTL socket option returned by getsockopt()</verdict>
          </result>
        </results>
        <results tags="!v5&amp;kernel-64&amp;ul-32&amp;!linux-3">
          <result value="FAILED">
            <verdict>Failed to process IP_PKTOPTIONS value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active_connection">TRUE</arg>
        <arg name="env"/>
        <arg name="garbage"/>
        <arg name="set_new_ttl"/>
        <arg name="set_pktinfo">TRUE</arg>
        <arg name="set_recvttl">FALSE</arg>
        <arg name="traffic"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>ipi_ifindex member of in_pktinfo structure is equal to 0</verdict>
          </result>
        </results>
        <results tags="!v5&amp;kernel-64&amp;ul-32&amp;!linux-3">
          <result value="FAILED">
            <verdict>Failed to process IP_PKTOPTIONS value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active_connection">TRUE</arg>
        <arg name="env"/>
        <arg name="garbage"/>
        <arg name="set_new_ttl">FALSE</arg>
        <arg name="set_pktinfo">FALSE</arg>
        <arg name="set_recvttl">TRUE</arg>
        <arg name="traffic"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Value of IP_TTL socket option obtained via IP_PKTOPTIONS is equal to value of IP_MULTICAST_TTL socket option returned by getsockopt()</verdict>
          </result>
        </results>
        <results tags="!v5&amp;kernel-64&amp;ul-32&amp;!linux-3">
          <result value="FAILED">
            <verdict>Failed to process IP_PKTOPTIONS value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active_connection">TRUE</arg>
        <arg name="env"/>
        <arg name="garbage"/>
        <arg name="set_new_ttl">TRUE</arg>
        <arg name="set_pktinfo">FALSE</arg>
        <arg name="set_recvttl"/>
        <arg name="traffic"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Value of IP_TTL socket option obtained via IP_PKTOPTIONS is equal to value of IP_MULTICAST_TTL socket option returned by getsockopt()</verdict>
          </result>
        </results>
        <results tags="!v5&amp;kernel-64&amp;ul-32&amp;!linux-3">
          <result value="FAILED">
            <verdict>Failed to process IP_PKTOPTIONS value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active_connection">FALSE</arg>
        <arg name="env"/>
        <arg name="garbage"/>
        <arg name="set_new_ttl">TRUE</arg>
        <arg name="set_pktinfo">TRUE</arg>
        <arg name="set_recvttl"/>
        <arg name="traffic"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Value of IP_TTL socket option obtained via IP_PKTOPTIONS is equal to value of IP_MULTICAST_TTL socket option returned by getsockopt()</verdict>
          </result>
        </results>
        <results tags="linux&amp;v5" key="ON-1728">
          <result value="PASSED">
            <verdict>ipi_ifindex member of in_pktinfo structure is equal to 0</verdict>
            <verdict>Failed to obtain value of IP_MULTICAST_TTL socket option: ENOPROTOOPT</verdict>
            <verdict>Value of IP_TTL socket option obtained via IP_PKTOPTIONS is not equal to value of IP_MULTICAST_TTL or IP_TTL socket options returned by getsockopt()</verdict>
          </result>
        </results>
        <results tags="!v5&amp;kernel-64&amp;ul-32&amp;!linux-3">
          <result value="FAILED">
            <verdict>Failed to process IP_PKTOPTIONS value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active_connection">FALSE</arg>
        <arg name="env"/>
        <arg name="garbage"/>
        <arg name="set_new_ttl">FALSE</arg>
        <arg name="set_pktinfo">TRUE</arg>
        <arg name="set_recvttl">TRUE</arg>
        <arg name="traffic"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Value of IP_TTL socket option obtained via IP_PKTOPTIONS is equal to value of IP_TTL socket option returned by getsockopt()</verdict>
          </result>
        </results>
        <results tags="linux&amp;v5" key="ON-1728">
          <result value="PASSED">
            <verdict>ipi_ifindex member of in_pktinfo structure is equal to 0</verdict>
            <verdict>Failed to obtain value of IP_MULTICAST_TTL socket option: ENOPROTOOPT</verdict>
            <verdict>Value of IP_TTL socket option obtained via IP_PKTOPTIONS is not equal to value of IP_MULTICAST_TTL or IP_TTL socket options returned by getsockopt()</verdict>
          </result>
        </results>
        <results tags="!v5&amp;kernel-64&amp;ul-32&amp;!linux-3">
          <result value="FAILED">
            <verdict>Failed to process IP_PKTOPTIONS value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active_connection">FALSE</arg>
        <arg name="env"/>
        <arg name="garbage"/>
        <arg name="set_new_ttl"/>
        <arg name="set_pktinfo">TRUE</arg>
        <arg name="set_recvttl">FALSE</arg>
        <arg name="traffic"/>
        <notes/>
        <results tags="linux&amp;v5" key="ON-1727">
          <result value="PASSED">
            <verdict>ipi_ifindex member of in_pktinfo structure is equal to 0</verdict>
          </result>
        </results>
        <results tags="!v5&amp;kernel-64&amp;ul-32&amp;!linux-3">
          <result value="FAILED">
            <verdict>Failed to process IP_PKTOPTIONS value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active_connection">FALSE</arg>
        <arg name="env"/>
        <arg name="garbage"/>
        <arg name="set_new_ttl">TRUE</arg>
        <arg name="set_pktinfo">FALSE</arg>
        <arg name="set_recvttl"/>
        <arg name="traffic"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Value of IP_TTL socket option obtained via IP_PKTOPTIONS is equal to value of IP_MULTICAST_TTL socket option returned by getsockopt()</verdict>
          </result>
        </results>
        <results tags="linux&amp;v5" key="ON-1728">
          <result value="PASSED">
            <verdict>Failed to obtain value of IP_MULTICAST_TTL socket option: ENOPROTOOPT</verdict>
            <verdict>Value of IP_TTL socket option obtained via IP_PKTOPTIONS is not equal to value of IP_MULTICAST_TTL or IP_TTL socket options returned by getsockopt()</verdict>
          </result>
        </results>
        <results tags="!v5&amp;kernel-64&amp;ul-32&amp;!linux-3">
          <result value="FAILED">
            <verdict>Failed to process IP_PKTOPTIONS value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active_connection">FALSE</arg>
        <arg name="env"/>
        <arg name="garbage"/>
        <arg name="set_new_ttl">FALSE</arg>
        <arg name="set_pktinfo">FALSE</arg>
        <arg name="set_recvttl">TRUE</arg>
        <arg name="traffic"/>
        <notes/>
        <results tags="linux">
          <result value="PASSED">
            <verdict>Value of IP_TTL socket option obtained via IP_PKTOPTIONS is equal to value of IP_TTL socket option returned by getsockopt()</verdict>
          </result>
        </results>
        <results tags="linux&amp;v5" key="ON-1728">
          <result value="PASSED">
            <verdict>Failed to obtain value of IP_MULTICAST_TTL socket option: ENOPROTOOPT</verdict>
            <verdict>Value of IP_TTL socket option obtained via IP_PKTOPTIONS is not equal to value of IP_MULTICAST_TTL or IP_TTL socket options returned by getsockopt()</verdict>
          </result>
        </results>
        <results tags="!v5&amp;kernel-64&amp;ul-32&amp;!linux-3">
          <result value="FAILED">
            <verdict>Failed to process IP_PKTOPTIONS value</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="active_connection"/>
        <arg name="env"/>
        <arg name="garbage"/>
        <arg name="set_new_ttl"/>
        <arg name="set_pktinfo">FALSE</arg>
        <arg name="set_recvttl">FALSE</arg>
        <arg name="traffic"/>
        <notes/>
      </iter>
    </test>
    <test name="bindtodevice_no_route" type="script">
      <objective>Check that if a socket is bound to an interface with SO_BINDTODEVICE socket option, UDP packets are sent successfully to an address belonging to a different network.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_ipv6</arg>
        <notes/>
        <results tags="linux" notes="It seems that SO_BINDTODEVICE without route works only for IPv4">
          <result value="FAILED">
            <verdict>Sending the first packet from IUT socket failed with RPC-ENETUNREACH</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_ipv6</arg>
        <notes/>
        <results tags="linux" notes="It seems that SO_BINDTODEVICE without route works only for IPv4">
          <result value="FAILED">
            <verdict>Sending the first packet from IUT socket failed with RPC-ENETUNREACH</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <notes/>
      </iter>
    </test>
    <test name="bindtodevice_bond" type="script">
      <objective>Check that socket bound to bond interface can receive data only via its slaves</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="mode"/>
        <arg name="sock_type"/>
        <notes/>
        <results tags="v5" key="ON-8325">
          <result value="FAILED">
            <verdict>Data can still be received on a socket bound to the bond interface after removing the first interface from it</verdict>
          </result>
          <result value="PASSED" notes="See ST-2200"/>
        </results>
      </iter>
    </test>
    <test name="tcp_user_timeout" type="script">
      <objective>Check that transmit functions returns -1 with ETIMEDOUT after specified by TCP_USER_TIMEOUT timeout.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="func"/>
        <arg name="tcp_state"/>
        <arg name="user_timeout"/>
        <notes/>
        <results tags="v5" key="ON-2512">
          <result value="FAILED">
            <verdict>setsockopt(TCP_USER_TIMEOUT) failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="rcvbuf_stream" type="script">
      <objective>Explore the possibility to change receive buffer size by means of setsockopt(SO_RCVBUF) and new value influence on actual buffer size.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="server"/>
        <arg name="force"/>
        <notes/>
      </iter>
    </test>
    <test name="get_supported" type="script">
      <objective>Check that getsockopt() of the option level/name is supported in expected way for specified type of socket. Do not explore option semantic.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_HOPLIMIT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_HOPLIMIT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_FLOWINFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_FLOWINFO) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RTHDR</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_RTHDR) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_MULTICAST_IF) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MTU</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_MTU) unexpectedly failed with errno ENOTCONN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_DROP_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_DROP_MEMBERSHIP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_ADD_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_ADD_MEMBERSHIP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_LOOP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_MULTICAST_LOOP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_HOPS</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_MULTICAST_HOPS) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_CHECKSUM</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_CHECKSUM) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_AUTHHDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_AUTHHDR) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_ADDRFORM</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_ADDRFORM) unexpectedly failed with errno ENOTCONN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_ADDRFORM</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_ADDRFORM) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
        <results tags="(linux&amp;!v5)|(v5&amp;(!scalable_passive&amp;!scalable_active&amp;!socket_cache))">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_ADDRFORM) unexpectedly failed with errno ENOTCONN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_ROUTER_ALERT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_ROUTER_ALERT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_NEXTHOP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_NEXTHOP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_HOPOPTS</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_HOPOPTS) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_DSTOPTS</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IPV6, IPV6_DSTOPTS) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">UDP_CORK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_UDP, UDP_CORK) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">UDP_CORK</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_UDP, UDP_CORK) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">UDP_CORK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_UDP, UDP_CORK) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_WINDOW_CLAMP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_WINDOW_CLAMP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_WINDOW_CLAMP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_WINDOW_CLAMP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_WINDOW_CLAMP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_WINDOW_CLAMP) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_WINDOW_CLAMP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_WINDOW_CLAMP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_SYNCNT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_SYNCNT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_SYNCNT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_SYNCNT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_SYNCNT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_SYNCNT) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_SYNCNT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_SYNCNT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_QUICKACK</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_QUICKACK) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_QUICKACK</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_QUICKACK) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_NODELAY</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_NODELAY) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_NODELAY</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_NODELAY) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_MAXSEG</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_MAXSEG) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_MAXSEG</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_MAXSEG) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_LINGER2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_LINGER2) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_LINGER2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_LINGER2) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_LINGER2</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_LINGER2) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_LINGER2</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_LINGER2) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPINTVL</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_KEEPINTVL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPINTVL</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_KEEPINTVL) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPIDLE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_KEEPIDLE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPIDLE</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_KEEPIDLE) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPCNT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_KEEPCNT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPCNT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_KEEPCNT) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_INFO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_INFO) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_INFO</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_INFO) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_CORK</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_CORK) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_CORK</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_CORK) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_USER_TIMEOUT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_USER_TIMEOUT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_USER_TIMEOUT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_USER_TIMEOUT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_USER_TIMEOUT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_USER_TIMEOUT) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_USER_TIMEOUT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-2512">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_USER_TIMEOUT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_DEFER_ACCEPT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_DEFER_ACCEPT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_DEFER_ACCEPT</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_TCP, TCP_DEFER_ACCEPT) unexpectedly failed with errno EOPNOTSUPP</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_UNBLOCK_SOURCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_UNBLOCK_SOURCE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_UNBLOCK_SOURCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_UNBLOCK_SOURCE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_BLOCK_SOURCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_BLOCK_SOURCE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_BLOCK_SOURCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_BLOCK_SOURCE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_DROP_SOURCE_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_DROP_SOURCE_MEMBERSHIP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_DROP_SOURCE_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_DROP_SOURCE_MEMBERSHIP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_ADD_SOURCE_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_ADD_SOURCE_MEMBERSHIP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_ADD_SOURCE_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_ADD_SOURCE_MEMBERSHIP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_ROUTER_ALERT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_ROUTER_ALERT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_ROUTER_ALERT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_ROUTER_ALERT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_RECVORIGDSTADDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_RECVORIGDSTADDR) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVORIGDSTADDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_RECVORIGDSTADDR) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_NODEFRAG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_NODEFRAG) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_NODEFRAG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_NODEFRAG) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MULTICAST_TTL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_MULTICAST_TTL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_TTL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_MULTICAST_TTL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MULTICAST_LOOP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_MULTICAST_LOOP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_LOOP</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_MULTICAST_LOOP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_MULTICAST_IF) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5&amp;(scalable_passive|scalable_active|socket_cache)" key="ON-5391">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_MULTICAST_IF) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MULTICAST_ALL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux&amp;v5">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_MULTICAST_ALL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_ALL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux&amp;v5">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_MULTICAST_ALL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MTU</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_MTU) unexpectedly failed with errno ENOTCONN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MTU</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_MTU) unexpectedly failed with errno ENOTCONN</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_HDRINCL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_HDRINCL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_HDRINCL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_HDRINCL) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_FREEBIND</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_FREEBIND) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_FREEBIND</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_FREEBIND) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_DROP_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_DROP_MEMBERSHIP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_DROP_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_DROP_MEMBERSHIP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_ADD_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_ADD_MEMBERSHIP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_ADD_MEMBERSHIP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_ADD_MEMBERSHIP) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_PKTOPTIONS</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_PKTOPTIONS) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_OPTIONS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_OPTIONS) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_OPTIONS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-22">
          <result value="FAILED">
            <verdict>getsockopt(SOL_IP, IP_OPTIONS) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_SNDBUFFORCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_SNDBUFFORCE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_SNDBUFFORCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_SNDBUFFORCE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_RCVBUFFORCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_RCVBUFFORCE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_RCVBUFFORCE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="linux">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_RCVBUFFORCE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_PASSCRED</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_PASSCRED) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_PASSCRED</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_PASSCRED) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_MARK</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_MARK) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_MARK</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_MARK) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_DOMAIN</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_DOMAIN) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_DOMAIN</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_DOMAIN) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_BSDCOMPAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_BSDCOMPAT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_BSDCOMPAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-3938">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_BSDCOMPAT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-25" notes="SO_DONTROUTE is not supported in V5.">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_DONTROUTE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_DONTROUTE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="v5" key="ON-25" notes="SO_DONTROUTE is not supported in V5.">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_DONTROUTE) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_REUSEPORT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="!v5" key="ON-3968">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_REUSEPORT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_REUSEPORT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
        <results tags="!v5" key="ON-3968">
          <result value="FAILED">
            <verdict>getsockopt(SOL_SOCKET, SO_REUSEPORT) unexpectedly failed with errno ENOPROTOOPT</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_PKTOPTIONS</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_DEFER_ACCEPT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_CORK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_INFO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_KEEPCNT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_KEEPIDLE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_KEEPINTVL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_MAXSEG</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_NODELAY</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">TCP_QUICKACK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_PKTOPTIONS</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_DEFER_ACCEPT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_CORK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_INFO</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPCNT</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPIDLE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_KEEPINTVL</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_MAXSEG</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_NODELAY</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">TCP_QUICKACK</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_BINDTODEVICE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_PRIORITY</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_SNDLOWAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_TYPE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_ERROR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_TIMESTAMP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_TIMESTAMPNS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_TIMESTAMPING</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">SO_PROTOCOL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_MTU_DISCOVER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_PKTINFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_RECVERR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_RECVOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_RECVTOS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_RECVTTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_RETOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_TOS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_TRANSPARENT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET</arg>
        <arg name="env"/>
        <arg name="is_pipe">FALSE</arg>
        <arg name="opt_name">IP_TTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_ALL</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_LOOP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MULTICAST_TTL</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_DSTOPTS</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_HOPOPTS</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_HOPS</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_LOOP</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MULTICAST_IF</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RTHDR</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_BINDTODEVICE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_DEBUG</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_REUSEADDR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_BROADCAST</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_SNDBUF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_RCVBUF</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_PRIORITY</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_RCVLOWAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_SNDLOWAT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_RCVTIMEO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_SNDTIMEO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_TYPE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_ERROR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_ACCEPTCONN</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_KEEPALIVE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_LINGER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_OOBINLINE</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_TIMESTAMP</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_TIMESTAMPNS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_TIMESTAMPING</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">SO_PROTOCOL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_MTU_DISCOVER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_PKTINFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVERR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVTOS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RECVTTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_RETOPTS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_TOS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_TRANSPARENT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain">PF_INET6</arg>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IP_TTL</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RECVHOPLIMIT</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_V6ONLY</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RECVPKTINFO</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_UNICAST_HOPS</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_MTU_DISCOVER</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe"/>
        <arg name="opt_name">IPV6_RECVERR</arg>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="is_pipe">TRUE</arg>
        <arg name="opt_name"/>
        <arg name="sock_type"/>
        <arg name="write_end"/>
        <notes/>
      </iter>
    </test>
    <test name="keepalive_flooder" type="script">
      <objective>Test SO_KEEPALIVE socket option with connected SOCK_STREAM socket with many receiving and transmitting operations.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst</arg>
        <arg name="func_aux"/>
        <arg name="keepcnt"/>
        <arg name="keepidle"/>
        <arg name="keepintvl"/>
        <arg name="time2run"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_lo</arg>
        <arg name="func_aux"/>
        <arg name="keepcnt"/>
        <arg name="keepidle"/>
        <arg name="keepintvl"/>
        <arg name="time2run"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer</arg>
        <arg name="func_aux"/>
        <arg name="keepcnt"/>
        <arg name="keepidle"/>
        <arg name="keepintvl"/>
        <arg name="time2run"/>
        <notes/>
        <results tags="ip_options&amp;el=8" key="ST-2339">
          <result value="FAILED">
            <verdict>Part of data sent from echo transmitter to parent and child are lost</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
    </test>
    <test name="so_protocol" type="script">
      <objective>Check that SO_PROTOCOL option value is correct for SOCK_STREAM and SOCK_DGRAM sockets.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="use_bind"/>
        <arg name="use_zero"/>
        <notes/>
      </iter>
    </test>
    <test name="tcpinfo_optlen" type="script">
      <objective>Checking the result of the work getsockopt with argument TCP_INFO in a variety of value opt_len.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="overflow"/>
        <notes/>
      </iter>
    </test>
    <test name="error_errqueue_shutdown" type="script">
      <objective>Check that error queue events can be read after the socket shutdown.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="icmp_msgs"/>
        <arg name="iomux"/>
        <arg name="shutdown_how"/>
        <notes/>
      </iter>
    </test>
    <test name="setbuf_force" type="script">
      <objective>Check that SO_SNDBUFFORCE/SO_RCVBUFFORCE options can be used to set socket buffer sizes to values higher than those defined by wmem_max/rmem_max.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="opt_name"/>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="opt_name">SO_SNDBUFFORCE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" key="ON-8252">
          <result value="PASSED">
            <verdict>setsockopt(SO_SNDBUF) allowed to set value bigger than system maximum</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="domain"/>
        <arg name="env"/>
        <arg name="opt_name">SO_RCVBUFFORCE</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <notes/>
        <results tags="v5" key="ON-8252">
          <result value="PASSED">
            <verdict>setsockopt(SO_RCVBUF) allowed to set value bigger than system maximum</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="ipv6_only_bind" type="script">
      <objective>Check what happens when we try to bind IPv6 socket and IPv4 socket to the same port when IPV6_V6ONLY socket option is enabled or disabled for IPv6 socket.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">ipv4_mapped</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="v6only">TRUE</arg>
        <arg name="v6only_after">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">ipv4_mapped</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="v6only">FALSE</arg>
        <arg name="v6only_after">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">ipv4_mapped_any</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="v6only">FALSE</arg>
        <arg name="v6only_after">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">ipv4_mapped_any</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="v6only">TRUE</arg>
        <arg name="v6only_after">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">any</arg>
        <arg name="ipv6_bind"/>
        <arg name="sock_type"/>
        <arg name="v6only"/>
        <arg name="v6only_after"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">any</arg>
        <arg name="sock_type"/>
        <arg name="v6only"/>
        <arg name="v6only_after"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">ipv4</arg>
        <arg name="sock_type"/>
        <arg name="v6only"/>
        <arg name="v6only_after"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">ipv6</arg>
        <arg name="sock_type"/>
        <arg name="v6only"/>
        <arg name="v6only_after"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">ipv4_mapped_new</arg>
        <arg name="sock_type"/>
        <arg name="v6only"/>
        <arg name="v6only_after"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">ipv4_mapped</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="v6only"/>
        <arg name="v6only_after"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">ipv4_mapped_any</arg>
        <arg name="sock_type">SOCK_DGRAM</arg>
        <arg name="v6only"/>
        <arg name="v6only_after"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">ipv4_mapped</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="v6only">TRUE</arg>
        <arg name="v6only_after">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">ipv4_mapped</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="v6only">FALSE</arg>
        <arg name="v6only_after">TRUE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">ipv4_mapped_any</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="v6only">TRUE</arg>
        <arg name="v6only_after">FALSE</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="ipv4_bind">ipv4</arg>
        <arg name="ipv6_bind">ipv4_mapped_any</arg>
        <arg name="sock_type">SOCK_STREAM</arg>
        <arg name="v6only">FALSE</arg>
        <arg name="v6only_after">TRUE</arg>
        <notes/>
      </iter>
    </test>
    <test name="ipv6_tclass" type="script">
      <objective>Check that if IPV6_TCLASS option is set on a socket, outgoing packets have IPv6 traffic class set to its value.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="with_cmsg"/>
        <notes/>
      </iter>
    </test>
    <test name="ipv6_tclass_tos" type="script">
      <objective>Check that if both IPV6_TCLASS and IP_TOS are set to different values on an IPv6 socket, then if the socket is used to send data to IPv4 destination, TOS field is set to the value of IP_TOS, and if the socket is used to send data to IPv6 destination, Traffic Class field is set to the value of IPV6_TCLASS.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="precedence_bits">TRUE</arg>
        <arg name="sock_type">tcp_passive</arg>
        <notes/>
        <results tags="v5" key="ON-13056" notes="Onload may not handle TOS with precedence bits">
          <result value="FAILED">
            <verdict>Sending to IPv4 destination: Data was sent but peer socket is not readable</verdict>
          </result>
          <result value="FAILED">
            <verdict>accept() for IPv4 connection failed with errno RCF_PCH-ERPCTIMEOUT</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="precedence_bits">TRUE</arg>
        <arg name="sock_type">tcp_passive_close</arg>
        <notes/>
        <results tags="v5" key="ON-13056" notes="Onload may not handle TOS with precedence bits">
          <result value="FAILED">
            <verdict>Sending to IPv4 destination: Data was sent but peer socket is not readable</verdict>
          </result>
          <result value="FAILED">
            <verdict>accept() for IPv4 connection failed with errno RCF_PCH-ERPCTIMEOUT</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="precedence_bits">TRUE</arg>
        <arg name="sock_type">udp</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="precedence_bits">TRUE</arg>
        <arg name="sock_type">udp_notconn</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="precedence_bits">TRUE</arg>
        <arg name="sock_type">tcp_active</arg>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="precedence_bits">FALSE</arg>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
    <test name="ip_tos" type="script">
      <objective>Check that if IP_TOS option is set on a socket, outgoing packets have IPv4 DSCP (Type Of Service) set to its value.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="precedence_bits">TRUE</arg>
        <arg name="sock_type">tcp_passive</arg>
        <arg name="with_cmsg"/>
        <notes/>
        <results tags="v5" key="ON-13056" notes="Onload may not handle TOS with precedence bits">
          <result value="FAILED">
            <verdict>Sending data after IP_TOS is set: Data was sent but peer socket is not readable</verdict>
          </result>
          <result value="FAILED">
            <verdict>accept() failed with errno RCF_PCH-ERPCTIMEOUT</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="precedence_bits">TRUE</arg>
        <arg name="sock_type">tcp_passive_close</arg>
        <arg name="with_cmsg"/>
        <notes/>
        <results tags="v5" key="ON-13056" notes="Onload may not handle TOS with precedence bits">
          <result value="FAILED">
            <verdict>Sending data after IP_TOS is set: Data was sent but peer socket is not readable</verdict>
          </result>
          <result value="FAILED">
            <verdict>accept() failed with errno RCF_PCH-ERPCTIMEOUT</verdict>
          </result>
          <result value="PASSED"/>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="precedence_bits">TRUE</arg>
        <arg name="sock_type">udp</arg>
        <arg name="with_cmsg"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="precedence_bits">TRUE</arg>
        <arg name="sock_type">udp_notconn</arg>
        <arg name="with_cmsg"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="precedence_bits">TRUE</arg>
        <arg name="sock_type">tcp_active</arg>
        <arg name="with_cmsg"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="precedence_bits">FALSE</arg>
        <arg name="sock_type"/>
        <arg name="with_cmsg"/>
        <notes/>
      </iter>
    </test>
    <test name="auto_flowlabels" type="script">
      <objective>Check that IPv6 Flow Label is set or not according to auto_flowlabels system parameter and IPV6_AUTOFLOWLABEL option.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="auto_fl"/>
        <notes/>
        <results tags="linux-3&lt;17" notes="IPV6_AUTOFLOWLABELS is supported since Linux 3.17">
          <result value="FAILED">
            <verdict>Setting net/ipv6/auto_flowlabels failed with errno CS-ENOENT</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="tcp_info_retransmits" type="script">
      <objective>Send data with broken connection and check that some tcp_info structure fields have increased</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_gw</arg>
        <arg name="tcpi_fields"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_tst_gw_ipv6</arg>
        <arg name="tcpi_fields"/>
        <notes/>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_gw</arg>
        <arg name="tcpi_fields"/>
        <notes/>
        <results tags="v5" key="ON-12208">
          <result value="FAILED">
            <verdict>After connectivity break: field tcpi_retrans must be greater than 0 but it is not</verdict>
            <verdict>After connectivity break: field tcpi_unacked must be greater than 0 but it is not</verdict>
            <verdict>After connectivity break: field tcpi_lost must be greater than 0 but it is not</verdict>
            <verdict>After connectivity break: field tcpi_backoff must be greater than 0 but it is not</verdict>
          </result>
        </results>
      </iter>
      <iter result="PASSED">
        <arg name="env">VAR.env.peer2peer_gw_ipv6</arg>
        <arg name="tcpi_fields"/>
        <notes/>
        <results tags="v5" key="ON-12208">
          <result value="FAILED">
            <verdict>After connectivity break: field tcpi_retrans must be greater than 0 but it is not</verdict>
            <verdict>After connectivity break: field tcpi_unacked must be greater than 0 but it is not</verdict>
            <verdict>After connectivity break: field tcpi_lost must be greater than 0 but it is not</verdict>
            <verdict>After connectivity break: field tcpi_backoff must be greater than 0 but it is not</verdict>
          </result>
        </results>
      </iter>
    </test>
    <test name="tcp_info_rtt" type="script">
      <objective>Send data and check tcpi_rtt and tcpi_rttvar</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="ipv6_tos_tclass_cmsg" type="script">
      <objective>Check possible interactions between IP_TOS and IPV6_TCLASS when they set via socket options and/or cmsg.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <arg name="set_sockopt_tclass"/>
        <arg name="set_sockopt_tos"/>
        <arg name="set_cmsg_tclass"/>
        <arg name="set_cmsg_tos"/>
        <notes/>
      </iter>
    </test>
    <test name="../gateways_epilogue" type="script">
      <objective>Epilogue used to reset interfaces after different gateway settings.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <notes/>
      </iter>
    </test>
    <test name="fill_reduce_rcvbuf" type="script">
      <objective>Check what happens when SO_RCVBUF is reduced on a TCP socket after filling receive buffer, and then more data is sent from peer.</objective>
      <notes/>
      <iter result="PASSED">
        <arg name="env"/>
        <arg name="sock_type"/>
        <notes/>
      </iter>
    </test>
  </iter>
</test>
