# SPDX-License-Identifier: Apache-2.0
# (c) Copyright 2004 - 2022 Xilinx, Inc. All rights reserved.

sockopts_lib_dir = include_directories('lib')

subdir('lib')

sockopts_test_deps = test_deps
sockopts_test_deps += declare_dependency(include_directories: sockopts_lib_dir,
                                         link_with: sockopts_common_lib)
tests = [
    'acceptconn',
    'auto_flowlabels',
    'bindtodevice_bond',
    'bindtodevice_connect',
    'bindtodevice_dgram',
    'bindtodevice_dstunreach',
    'bindtodevice_mtu',
    'bindtodevice_no_route',
    'bindtodevice_send',
    'bindtodevice_stream',
    'bindtodevice_vlan',
    'bindtodevice_vs_bind',
    'broadcast',
    'broadcast_no_fragment',
    'default_bufs',
    'default_opts',
    'dontroute',
    'errind_conn_disable',
    'errind_conn_not_conn',
    'errind_not_conn',
    'error',
    'error_errqueue',
    'error_errqueue_disabled',
    'error_errqueue_flush',
    'error_errqueue_shutdown',
    'error_errqueue_tcp',
    'error_icmp_rcv',
    'error_icmp_recvmmsg',
    'error_rst',
    'error_send_recv_icmp',
    'error_tcp',
    'fill_reduce_rcvbuf',
    'get_supported',
    'inherit_derived',
    'inherited_option',
    'ip_mtu_discover_tcp',
    'ip_mtu_discover_udp',
    'ip_mtu_inapprop_state',
    'ip_pktinfo',
    'ip_pktoptions',
    'ip_recverr',
    'ip_recvopts',
    'ip_tos',
    'ip_tos_tcp',
    'ipv6_ipv4_pktinfo',
    'ipv6_only',
    'ipv6_only_bind',
    'ipv6_tclass',
    'ipv6_tclass_tos',
    'ipv6_tos_tclass_cmsg',
    'keepalive',
    'keepalive_enforce',
    'keepalive_failed',
    'keepalive_flooder',
    'last_pending_error',
    'linger_listening_close',
    'max_bufs',
    'mtu_changing',
    'oobinline_recv_oob',
    'pktinfo_ip4_ip6_alternate',
    'rcv_snd_zero_timeo',
    'rcvbuf_dgram',
    'rcvbuf_stream',
    'rcvlowat_dgram',
    'rcvlowat_recv',
    'rcvlowat_stream',
    'rcvtimeo',
    'rcvtimeo_accept',
    'rcvtimeo_recvmmsg',
    'reuseaddr_2msl',
    'reuseaddr_shutdown',
    'reuseaddr_tcp_1',
    'reuseaddr_tcp_2',
    'reuseaddr_tcp_3',
    'reuseaddr_tcp_4',
    'reuseaddr_tcp_5',
    'set_supported',
    'setbuf_force',
    'sndbuf_dgram',
    'sndbuf_stream',
    'sndlowat',
    'sndtimeo',
    'sndtimeo_connect',
    'so_priority_and_tos',
    'so_protocol',
    'tcp_cork',
    'tcp_cork_aux',
    'tcp_cork_nodelay',
    'tcp_defer_accept_close',
    'tcp_defer_accept_simple',
    'tcp_info_ca_state',
    'tcp_info_last_data_sent_ack_recv',
    'tcp_info_retransmits',
    'tcp_info_rtt',
    'tcp_info_snd_adv_mss',
    'tcp_info_state',
    'tcp_maxseg',
    'tcp_maxseg_and_pmtu',
    'tcp_nodelay',
    'tcp_quickack',
    'tcp_user_timeout',
    'tcpinfo_optlen',
    'type',
    'udp_cork',
    'udp_ttl_tos',
    'zero_optlen',
]

foreach test : tests
    test_exe = test
    test_c = test + '.c'
    package_tests_c += [ test_c ]
    executable(test_exe, test_c, install: true, install_dir: package_dir,
               dependencies: [test_deps, sockopts_test_deps])
endforeach

tests_info_xml = custom_target(package_dir.underscorify() + 'tests-info-xml',
                               install: true, install_dir: package_dir,
                               input: package_tests_c,
                               output: 'tests-info.xml', capture: true,
                               command: [ te_tests_info_sh,
                               meson.current_source_dir() ])

install_data([ 'package.dox', 'package.xml' ],
             install_dir: package_dir)

