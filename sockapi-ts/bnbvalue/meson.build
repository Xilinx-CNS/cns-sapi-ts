# SPDX-License-Identifier: Apache-2.0
# (c) Copyright 2004 - 2022 Xilinx, Inc. All rights reserved.

tests = [
    'addr_family_inapprop_bind',
    'addr_family_inapprop_connect',
    'addr_len_accept',
    'addr_len_getname',
    'addr_len_inapprop_bind',
    'addr_len_inapprop_connect',
    'addr_len_inapprop_recv_short',
    'addr_len_inapprop_recvfrom_long',
    'addr_len_inapprop_recvmsg_long',
    'addr_len_inapprop_sendmsg',
    'addr_len_inapprop_sendto',
    'bond_bind_remove',
    'chk_too_big_len',
    'descr_inapprop',
    'descr_nonexist',
    'dgram_empty',
    'extra_large_packet',
    'file_max_overflow',
    'func_accept_addr_null',
    'func_accept_dgram',
    'func_accept_stream_client',
    'func_bind_addr_null',
    'func_bind_after_accept',
    'func_bind_after_connect',
    'func_bind_after_implicit_bind_udp',
    'func_bind_after_listen',
    'func_bind_notassigned_addr',
    'func_bind_twice',
    'func_connect_addr_null',
    'func_connect_after_listen',
    'func_connect_inapprop_addr',
    'func_connect_str_unspec_af',
    'func_connect_twice',
    'func_epoll_create',
    'func_epoll_ctl_add',
    'func_epoll_ctl_bad_epfd',
    'func_epoll_ctl_bad_fd',
    'func_epoll_ctl_bad_fd_type',
    'func_epoll_ctl_bad_op',
    'func_epoll_ctl_mod_del',
    'func_epoll_ctl_null_events',
    'func_epoll_wait_bad_epfd',
    'func_epoll_wait_bad_maxevents',
    'func_execve_null',
    'func_getname',
    'func_getname_addr_null_dgram',
    'func_getname_addr_null_stream',
    'func_getsockopt',
    'func_io_after_listen',
    'func_ioctl_null',
    'func_ioctl_unknown',
    'func_listen_after_connect',
    'func_listen_dgram',
    'func_listen_twice',
    'func_pipe',
    'func_pipe_wrong_fd',
    'func_poll_fd_negative',
    'func_poll_nentries',
    'func_poll_nval',
    'func_poll_zero_evt',
    'func_pselect_ppoll_negative_timeout',
    'func_recvfrom_addr_null_dgram',
    'func_recvfrom_addr_null_stream',
    'func_recvmmsg_all_zeros',
    'func_recvmmsg_negative_timeout',
    'func_recvmsg_ctrunc',
    'func_select_all_zeros',
    'func_select_inapprop_maxfd',
    'func_select_many_descrs',
    'func_select_negative_timeout',
    'func_select_pselect_neg_fdnum',
    'func_send_addr_null_stream_conn',
    'func_send_addr_null_stream_not_conn',
    'func_send_too_long_dgram',
    'func_sendmsg_addr_null_dgram',
    'func_sendto_addr_null_dgram',
    'func_setsockopt',
    'func_shutdown_before_connect',
    'func_shutdown_incorrect_how',
    'func_socket',
    'func_socket_pipe_too_many',
    'func_sockopt_boolean',
    'func_sockopt_get_integer',
    'func_sockopt_level_name',
    'func_sockopt_set_integer',
    'func_splice_nonconn_dgram',
    'func_zc_recv_all_zeros',
    'incorrect_address_length',
    'incorrect_family',
    'incorrect_iovec_pointer',
    'iomux_notmasked_signals',
    'ipv4_mapped_connect_ipv6',
    'ipv4_mapped_in_ipv6',
    'many_sock_on_server',
    'msg_controllen_inapprop',
    'pipe_sock_func',
    'pipe_sock_recv',
    'pipe_sock_send',
    'protected_signal',
    'read_zero_bytes',
    'recv_oob_dgram',
    'rx_buf_len_zero_connected',
    'send_connect_zero_addr',
    'send_oob_dgram',
    'sig_err_handler',
    'tx_buf_len_connected',
    'tx_buf_len_not_connected',
    'unbound',
]

foreach test : tests
    test_exe = test
    test_c = test + '.c'
    package_tests_c += [ test_c ]
    executable(test_exe, test_c, install: true, install_dir: package_dir,
               dependencies: test_deps)
endforeach

tests_info_xml = custom_target(package_dir.underscorify() + 'tests-info-xml',
                               install: true, install_dir: package_dir,
                               input: package_tests_c,
                               output: 'tests-info.xml', capture: true,
                               command: [ te_tests_info_sh,
                               meson.current_source_dir() ])

install_data([ 'package.dox', 'package.xml' ],
             install_dir: package_dir)

